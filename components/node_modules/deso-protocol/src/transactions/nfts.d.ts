import { AcceptNFTBidRequest, AcceptNFTBidResponse, AcceptNFTTransferRequest, AcceptNFTTransferResponse, BurnNFTRequest, BurnNFTResponse, ConstructedTransactionResponse, CreateNFTBidRequest, CreateNFTBidResponse, CreateNFTRequest, CreateNFTResponse, TransferNFTRequest, TransferNFTResponse, TxRequestWithOptionalFeesAndExtraData, UpdateNFTRequest, UpdateNFTResponse } from '../backend-types/index.js';
import { PartialWithRequiredFields } from '../data/index.js';
import { TransactionMetadataAcceptNFTTransfer } from '../identity/index.js';
import { ConstructedAndSubmittedTx, TxRequestOptions } from '../types.js';
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#create-nft
 */
export type CreateNFTRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<CreateNFTRequest, 'UpdaterPublicKeyBase58Check' | 'NFTPostHashHex' | 'NumCopies' | 'NFTRoyaltyToCoinBasisPoints' | 'NFTRoyaltyToCreatorBasisPoints' | 'HasUnlockable' | 'IsForSale'>>;
export declare const createNFT: (params: CreateNFTRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<CreateNFTResponse | ConstructedTransactionResponse>>;
export declare const constructCreateNFTTransaction: (params: CreateNFTRequestParams) => Promise<ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#update-nft
 */
export type UpdateNFTRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<UpdateNFTRequest, 'UpdaterPublicKeyBase58Check' | 'NFTPostHashHex' | 'SerialNumber' | 'MinBidAmountNanos'>>;
export declare const updateNFT: (params: UpdateNFTRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<UpdateNFTResponse | ConstructedTransactionResponse>>;
export declare const constructUpdateNFTTransaction: (params: UpdateNFTRequestParams) => Promise<ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#create-nft-bid
 */
export type CreateNFTBidRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<CreateNFTBidRequest, 'BidAmountNanos' | 'NFTPostHashHex' | 'SerialNumber' | 'UpdaterPublicKeyBase58Check'>>;
export declare const createNFTBid: (params: CreateNFTBidRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<CreateNFTBidResponse | ConstructedTransactionResponse>>;
export declare const constructNFTBidTransaction: (params: CreateNFTBidRequestParams) => Promise<ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#accept-nft-bid
 */
export type AcceptNFTBidRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<AcceptNFTBidRequest, 'BidAmountNanos' | 'NFTPostHashHex' | 'SerialNumber' | 'UpdaterPublicKeyBase58Check' | 'BidderPublicKeyBase58Check'>>;
export declare const acceptNFTBid: (params: AcceptNFTBidRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<AcceptNFTBidResponse | ConstructedTransactionResponse>>;
export declare const constructAcceptNFTBidTransaction: (params: AcceptNFTBidRequestParams) => Promise<ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#transfer-nft
 */
export type TransferNFTRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<TransferNFTRequest, 'SenderPublicKeyBase58Check' | 'ReceiverPublicKeyBase58Check' | 'NFTPostHashHex' | 'SerialNumber'>>;
export declare const transferNFT: (params: TransferNFTRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<TransferNFTResponse | ConstructedTransactionResponse>>;
export declare const constructTransferNFT: (params: TransferNFTRequestParams) => Promise<ConstructedTransactionResponse | ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#accept-nft-transfer
 */
export type AcceptNFTTransferRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<AcceptNFTTransferRequest, 'UpdaterPublicKeyBase58Check' | 'NFTPostHashHex' | 'SerialNumber'>>;
export declare const acceptNFTTransfer: (params: AcceptNFTTransferRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<AcceptNFTTransferResponse | ConstructedTransactionResponse>>;
export declare const buildAcceptNFTTransferMetadata: (params: AcceptNFTTransferRequestParams) => TransactionMetadataAcceptNFTTransfer;
export declare const constructAcceptNFTTransfer: (params: AcceptNFTTransferRequestParams) => Promise<ConstructedTransactionResponse>;
/**
 * https://docs.deso.org/deso-backend/construct-transactions/nft-transactions-api#burn-nft
 */
export type BurnNFTRequestParams = TxRequestWithOptionalFeesAndExtraData<PartialWithRequiredFields<BurnNFTRequest, 'UpdaterPublicKeyBase58Check' | 'NFTPostHashHex' | 'SerialNumber'>>;
export declare const burnNFT: (params: BurnNFTRequestParams, options?: TxRequestOptions) => Promise<ConstructedAndSubmittedTx<BurnNFTResponse | ConstructedTransactionResponse>>;
export declare const constructBurnNFTTransation: (params: BurnNFTRequestParams) => Promise<ConstructedTransactionResponse>;
