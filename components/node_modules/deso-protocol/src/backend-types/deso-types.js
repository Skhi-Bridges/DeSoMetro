// struct2ts:types/generated/types.GetHodlersForPublicKeyRequest
export var HodlersSortType;
(function (HodlersSortType) {
    HodlersSortType["coin_balance"] = "coin_balance";
    HodlersSortType["wealth"] = "wealth";
})(HodlersSortType || (HodlersSortType = {}));
export var ChatType;
(function (ChatType) {
    ChatType["DM"] = "DM";
    ChatType["GROUPCHAT"] = "GroupChat";
})(ChatType || (ChatType = {}));
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"deso-types.js","sourceRoot":"","sources":["../../../src/backend-types/deso-types.ts"],"names":[],"mappings":"AAqqJA,gEAAgE;AAChE,MAAM,CAAN,IAAY,eAGX;AAHD,WAAY,eAAe;IACzB,gDAA6B,CAAA;IAC7B,oCAAiB,CAAA;AACnB,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAmkBD,MAAM,CAAN,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,qBAAS,CAAA;IACT,mCAAuB,CAAA;AACzB,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport { type TransactionType } from '../backend-types/deso-types-custom.js';\n\nexport type DB = any;\n\n// struct2ts:sync.Mutex\nexport type Mutex = any;\n\n// struct2ts:github.com/oleiade/lane.Deque\nexport type Deque = any;\n\n// struct2ts:github.com/decred/dcrd/lru.KVCache\nexport type KVCache = any;\n\n// struct2ts:types/generated/types.SnapshotOperationChannel\nexport interface SnapshotOperationChannel {\n  OperationChannel: SnapshotOperation;\n  StateSemaphore: number;\n  StateSemaphoreLock: Mutex;\n}\n\n// struct2ts:types/generated/types.StateChecksum\nexport type StateChecksum = any;\n\n// struct2ts:types/generated/types.EncoderMigration\nexport type EncoderMigration = any;\n\n// struct2ts:types/generated/types.SnapshotEpochMetadata\nexport interface SnapshotEpochMetadata {\n  SnapshotBlockHeight: number;\n  FirstSnapshotBlockHeight: number;\n  CurrentEpochChecksumBytes: number[] | null;\n  CurrentEpochBlockHash: number[];\n}\n\n// struct2ts:types/generated/types.SnapshotStatus\nexport interface SnapshotStatus {\n  MainDBSemaphore: number;\n  AncestralDBSemaphore: number;\n  CurrentBlockHeight: number;\n  MemoryLock: Mutex;\n}\n\n// struct2ts:types/generated/types.Snapshot\nexport interface Snapshot {\n  SnapshotDb: DB | null;\n  SnapshotDbMutex: Mutex | null;\n  AncestralMemory: Deque | null;\n  DatabaseCache: KVCache;\n  AncestralFlushCounter: number;\n  SnapshotBlockHeightPeriod: number;\n  OperationChannel: SnapshotOperationChannel | null;\n  Checksum: StateChecksum | null;\n  Migrations: EncoderMigration | null;\n  CurrentEpochSnapshotMetadata: SnapshotEpochMetadata | null;\n  Status: SnapshotStatus | null;\n  ExitChannel: boolean;\n}\n\n// struct2ts:types/generated/types.DBEntry\nexport interface DBEntry {\n  Key: number[] | null;\n  Value: number[] | null;\n}\n\n// struct2ts:types/generated/types.AncestralRecordValue\nexport interface AncestralRecordValue {\n  Value: number[] | null;\n  Existed: boolean;\n}\n\n// struct2ts:types/generated/types.AncestralCache\nexport interface AncestralCache {\n  AncestralRecordsMap: Record<string, AncestralRecordValue>;\n}\n\n// struct2ts:types/generated/types.SnapshotOperation\nexport type SnapshotOperation = any;\n\n// struct2ts:types/generated/types.EncoderMigrationChecksum\nexport interface EncoderMigrationChecksum {\n  Checksum: StateChecksum | null;\n  BlockHeight: number;\n  Version: number;\n  Completed: boolean;\n}\n\n// struct2ts:types/generated/types.Timer\nexport type Timer = any;\n\n// struct2ts:types/generated/types.BitcoinUtxo\nexport interface BitcoinUtxo {\n  TxID: number[];\n  Index: number;\n  AmountSatoshis: number;\n}\n\n// struct2ts:types/generated/types.BlockCypherAPIInputResponse\nexport interface BlockCypherAPIInputResponse {\n  prev_hash: string;\n  output_index: number;\n  script: string;\n  output_value: number;\n  sequence: number;\n  addresses: string[] | null;\n  script_type: string;\n  age: number;\n}\n\n// struct2ts:types/generated/types.BlockCypherAPIOutputResponse\nexport interface BlockCypherAPIOutputResponse {\n  value: number;\n  script: string;\n  addresses: string[] | null;\n  script_type: string;\n  spent_by: string;\n}\n\n// struct2ts:types/generated/types.BlockCypherAPITxnResponse\nexport interface BlockCypherAPITxnResponse {\n  block_hash: string;\n  block_height: number;\n  lock_time: number;\n  hash: string;\n  inputs: BlockCypherAPIInputResponse[] | null;\n  outputs: BlockCypherAPIOutputResponse[] | null;\n  confirmations: number;\n  double_spend: boolean;\n}\n\n// struct2ts:types/generated/types.BlockCypherAPIFullAddressResponse\nexport interface BlockCypherAPIFullAddressResponse {\n  address: string;\n  balance: number;\n  unconfirmed_balance: number;\n  final_balance: number;\n  txs: BlockCypherAPITxnResponse[] | null;\n  hasMore: boolean;\n  error: string;\n}\n\n// struct2ts:types/generated/types.BlockchainInfoAPIResponse\nexport interface BlockchainInfoAPIResponse {\n  double_spend: boolean;\n}\n\n// struct2ts:types/generated/types.BlockonomicsRBFResponse\nexport interface BlockonomicsRBFResponse {\n  rbf: number;\n  status: string;\n}\n\n// struct2ts:types/generated/types.DeSoBlockProducer\nexport type DeSoBlockProducer = any;\n\n// struct2ts:types/generated/types.BlockTemplateStats\nexport interface BlockTemplateStats {\n  TxnCount: number;\n  FailingTxnHash: string;\n  FailingTxnError: string;\n  FailingTxnOriginalTimeAdded: Date;\n  FailingTxnMinutesSinceAdded: number;\n}\n\n// struct2ts:types/generated/types.UtxoKey\nexport interface UtxoKey {\n  TxID: number[];\n  Index: number;\n}\n\n// struct2ts:types/generated/types.UtxoEntry\nexport interface UtxoEntry {\n  AmountNanos: number;\n  PublicKey: number[] | null;\n  BlockHeight: number;\n  UtxoType: number;\n  UtxoKey: UtxoKey | null;\n}\n\n// struct2ts:types/generated/types.GlobalParamsEntry\nexport interface GlobalParamsEntry {\n  USDCentsPerBitcoin: number;\n  CreateProfileFeeNanos: number;\n  CreateNFTFeeNanos: number;\n  MaxCopiesPerNFT: number;\n  MinimumNetworkFeeNanosPerKB: number;\n}\n\n// struct2ts:types/generated/types.ForbiddenPubKeyEntry\nexport interface ForbiddenPubKeyEntry {\n  PubKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.MessageEntry\nexport interface MessageEntry {\n  SenderPublicKey: number[];\n  RecipientPublicKey: number[];\n  EncryptedText: number[] | null;\n  TstampNanos: number;\n  Version: number;\n  SenderMessagingPublicKey: number[];\n  SenderMessagingGroupKeyName: number[];\n  RecipientMessagingPublicKey: number[];\n  RecipientMessagingGroupKeyName: number[];\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.MessagingGroupMember\nexport interface MessagingGroupMember {\n  GroupMemberPublicKey: number[];\n  GroupMemberKeyName: number[];\n  EncryptedKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.MessagingGroupEntry\nexport interface MessagingGroupEntry {\n  GroupOwnerPublicKey: number[];\n  MessagingPublicKey: number[];\n  MessagingGroupKeyName: number[];\n  MessagingGroupMembers: MessagingGroupMember[] | null;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PGMessage\nexport interface PGMessage {\n  MessageHash: number[];\n  SenderPublicKey: number[] | null;\n  RecipientPublicKey: number[] | null;\n  EncryptedText: number[] | null;\n  TimestampNanos: number;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.FollowEntry\nexport interface FollowEntry {\n  FollowerPKID: number[];\n  FollowedPKID: number[];\n}\n\n// struct2ts:types/generated/types.NFTEntry\nexport interface NFTEntry {\n  LastOwnerPKID: number[];\n  OwnerPKID: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n  UnlockableText: number[] | null;\n  LastAcceptedBidAmountNanos: number;\n  IsPending: boolean;\n  IsBuyNow: boolean;\n  BuyNowPriceNanos: number;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.NFTBidEntry\nexport interface NFTBidEntry {\n  BidderPKID: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidAmountNanos: number;\n  AcceptedBlockHeight: number | null;\n}\n\n// struct2ts:types/generated/types.DiamondEntry\nexport interface DiamondEntry {\n  SenderPKID: number[];\n  ReceiverPKID: number[];\n  DiamondPostHash: number[];\n  DiamondLevel: number;\n}\n\n// struct2ts:types/generated/types.LikeEntry\nexport interface LikeEntry {\n  LikerPubKey: number[] | null;\n  LikedPostHash: number[];\n}\n\n// struct2ts:types/generated/types.RepostEntry\nexport interface RepostEntry {\n  ReposterPubKey: number[] | null;\n  RepostPostHash: number[];\n  RepostedPostHash: number[];\n}\n\n// struct2ts:types/generated/types.PostEntry\nexport interface PostEntry {\n  PostHash: number[];\n  PosterPublicKey: number[] | null;\n  ParentStakeID: number[] | null;\n  Body: number[] | null;\n  RepostedPostHash: number[];\n  IsQuotedRepost: boolean;\n  CreatorBasisPoints: number;\n  StakeMultipleBasisPoints: number;\n  ConfirmationBlockHeight: number;\n  TimestampNanos: number;\n  IsHidden: boolean;\n  LikeCount: number;\n  RepostCount: number;\n  QuoteRepostCount: number;\n  DiamondCount: number;\n  CommentCount: number;\n  IsPinned: boolean;\n  IsNFT: boolean;\n  NumNFTCopies: number;\n  NumNFTCopiesForSale: number;\n  NumNFTCopiesBurned: number;\n  HasUnlockable: boolean;\n  NFTRoyaltyToCreatorBasisPoints: number;\n  NFTRoyaltyToCoinBasisPoints: number;\n  AdditionalNFTRoyaltiesToCreatorsBasisPoints: Record<string, number>;\n  AdditionalNFTRoyaltiesToCoinsBasisPoints: Record<string, number>;\n  PostExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PKIDEntry\nexport interface PKIDEntry {\n  PKID: number[];\n  PublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.CoinEntry\nexport interface CoinEntry {\n  CreatorBasisPoints: number;\n  DeSoLockedNanos: number;\n  NumberOfHolders: number;\n  CoinsInCirculationNanos: number[];\n  CoinWatermarkNanos: number;\n  MintingDisabled: boolean;\n  TransferRestrictionStatus: number;\n}\n\n// struct2ts:types/generated/types.ProfileEntry\nexport interface ProfileEntry {\n  PublicKey: number[] | null;\n  Username: number[] | null;\n  Description: number[] | null;\n  ProfilePic: number[] | null;\n  IsHidden: boolean;\n  CreatorCoinEntry: CoinEntry;\n  DAOCoinEntry: CoinEntry;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.BalanceEntry\nexport interface BalanceEntry {\n  HODLerPKID: number[];\n  CreatorPKID: number[];\n  BalanceNanos: number[];\n  HasPurchased: boolean;\n}\n\n// struct2ts:types/generated/types.TransactionSpendingLimit\nexport interface TransactionSpendingLimit {\n  GlobalDESOLimit: number;\n  TransactionCountLimitMap: Record<number, number>;\n  CreatorCoinOperationLimitMap: Record<string, number>;\n  DAOCoinOperationLimitMap: Record<string, number>;\n  NFTOperationLimitMap: Record<string, number>;\n  DAOCoinLimitOrderLimitMap: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.DerivedKeyEntry\nexport interface DerivedKeyEntry {\n  OwnerPublicKey: number[];\n  DerivedPublicKey: number[];\n  ExpirationBlock: number;\n  OperationType: number;\n  ExtraData: Record<string, number>;\n  TransactionSpendingLimitTracker: TransactionSpendingLimit | null;\n  Memo: number[] | null;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderEntry\nexport interface DAOCoinLimitOrderEntry {\n  OrderID: number[];\n  TransactorPKID: number[];\n  BuyingDAOCoinCreatorPKID: number[];\n  SellingDAOCoinCreatorPKID: number[];\n  ScaledExchangeRateCoinsToSellPerCoinToBuy: number[];\n  QuantityToFillInBaseUnits: number[];\n  OperationType: number;\n  FillType: number;\n  BlockHeight: number;\n}\n\n// struct2ts:types/generated/types.Postgres\nexport type Postgres = any;\n\n// struct2ts:github.com/btcsuite/btcd/chaincfg.DNSSeed\nexport interface DNSSeed {\n  Host: string;\n  HasFiltering: boolean;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.BlockHeader\nexport interface BlockHeader {\n  Version: number;\n  PrevBlock: number[];\n  MerkleRoot: number[];\n  Timestamp: Date;\n  Bits: number;\n  Nonce: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.OutPoint\nexport interface OutPoint {\n  Hash: number[];\n  Index: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.TxIn\nexport interface TxIn {\n  PreviousOutPoint: OutPoint;\n  SignatureScript: number[] | null;\n  Witness: number[] | null;\n  Sequence: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.TxOut\nexport interface TxOut {\n  Value: number;\n  PkScript: number[] | null;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.MsgTx\nexport interface MsgTx {\n  Version: number;\n  TxIn: TxIn[] | null;\n  TxOut: TxOut[] | null;\n  LockTime: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/wire.MsgBlock\nexport interface MsgBlock {\n  Header: BlockHeader;\n  Transactions: MsgTx[] | null;\n}\n\n// struct2ts:math/big.Int\nexport type Int = number;\n\n// struct2ts:github.com/btcsuite/btcd/chaincfg.Checkpoint\nexport interface Checkpoint {\n  Height: number;\n  Hash: number[];\n}\n\n// struct2ts:github.com/btcsuite/btcd/chaincfg.ConsensusDeployment\nexport interface ConsensusDeployment {\n  BitNumber: number;\n  StartTime: number;\n  ExpireTime: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/chaincfg.Params\nexport interface Params {\n  Name: string;\n  Net: number;\n  DefaultPort: string;\n  DNSSeeds: DNSSeed[] | null;\n  GenesisBlock: MsgBlock | null;\n  GenesisHash: number[];\n  PowLimit: Int | null;\n  PowLimitBits: number;\n  BIP0034Height: number;\n  BIP0065Height: number;\n  BIP0066Height: number;\n  CoinbaseMaturity: number;\n  SubsidyReductionInterval: number;\n  TargetTimespan: number;\n  TargetTimePerBlock: number;\n  RetargetAdjustmentFactor: number;\n  ReduceMinDifficulty: boolean;\n  MinDiffReductionTime: number;\n  GenerateSupported: boolean;\n  Checkpoints: Checkpoint[] | null;\n  RuleChangeActivationThreshold: number;\n  MinerConfirmationWindow: number;\n  Deployments: ConsensusDeployment[];\n  RelayNonStdTxs: boolean;\n  Bech32HRPSegwit: string;\n  PubKeyHashAddrID: number;\n  ScriptHashAddrID: number;\n  PrivateKeyID: number;\n  WitnessPubKeyHashAddrID: number;\n  WitnessScriptHashAddrID: number;\n  HDPrivateKeyID: number[];\n  HDPublicKeyID: number[];\n  HDCoinType: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoHeader\nexport interface MsgDeSoHeader {\n  Version: number;\n  PrevBlockHash: number[];\n  TransactionMerkleRoot: number[];\n  TstampSecs: number;\n  Height: number;\n  Nonce: number;\n  ExtraNonce: number;\n}\n\n// struct2ts:types/generated/types.BlockNode\nexport interface BlockNode {\n  Parent: BlockNode | null;\n  Hash: number[];\n  Height: number;\n  DifficultyTarget: number[];\n  CumWork: Int | null;\n  Header: MsgDeSoHeader | null;\n  Status: number;\n}\n\n// struct2ts:types/generated/types.DeSoInput\nexport interface DeSoInput {\n  TxID: number[];\n  Index: number;\n}\n\n// struct2ts:types/generated/types.DeSoOutput\nexport interface DeSoOutput {\n  PublicKey: string | null;\n  AmountNanos: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/btcec.Signature\nexport interface Signature {\n  Sign: {\n    R: Int | null;\n    S: Int | null;\n  } | null;\n  RecoveryId: number;\n  IsRecoverable: boolean;\n}\n\n// struct2ts:types/generated/types.MsgDeSoTxn\nexport interface MsgDeSoTxn {\n  TxInputs: DeSoInput[] | null;\n  TxOutputs: DeSoOutput[] | null;\n  TxnMeta: any;\n  PublicKey: string | null;\n  ExtraData: Record<string, string>;\n  Signature: Signature | null;\n  TxnTypeJSON: number;\n}\n\n// struct2ts:types/generated/types.BlockProducerInfo\nexport interface BlockProducerInfo {\n  PublicKey: number[] | null;\n  Signature: Signature | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoBlock\nexport interface MsgDeSoBlock {\n  Header: MsgDeSoHeader | null;\n  Txns: MsgDeSoTxn[] | null;\n  BlockProducerInfo: BlockProducerInfo | null;\n}\n\n// struct2ts:math/big.Float\nexport type Float = number;\n\n// struct2ts:types/generated/types.ForkHeights\nexport interface ForkHeights {\n  DefaultHeight: number;\n  DeflationBombBlockHeight: number;\n  SalomonFixBlockHeight: number;\n  DeSoFounderRewardBlockHeight: number;\n  BuyCreatorCoinAfterDeletedBalanceEntryFixBlockHeight: number;\n  ParamUpdaterProfileUpdateFixBlockHeight: number;\n  UpdateProfileFixBlockHeight: number;\n  BrokenNFTBidsFixBlockHeight: number;\n  DeSoDiamondsBlockHeight: number;\n  NFTTransferOrBurnAndDerivedKeysBlockHeight: number;\n  DeSoV3MessagesBlockHeight: number;\n  BuyNowAndNFTSplitsBlockHeight: number;\n  DAOCoinBlockHeight: number;\n  ExtraDataOnEntriesBlockHeight: number;\n  DerivedKeySetSpendingLimitsBlockHeight: number;\n  DerivedKeyTrackSpendingLimitsBlockHeight: number;\n  DAOCoinLimitOrderBlockHeight: number;\n}\n\n// struct2ts:types/generated/types.MigrationHeight\nexport interface MigrationHeight {\n  Height: number;\n  Version: number;\n  Name: string;\n}\n\n// struct2ts:types/generated/types.EncoderMigrationHeights\nexport interface EncoderMigrationHeights {\n  DefaultMigration: MigrationHeight;\n}\n\n// struct2ts:types/generated/types.DeSoParams\nexport interface DeSoParams {\n  NetworkType: number;\n  ProtocolVersion: number;\n  MinProtocolVersion: number;\n  UserAgent: string;\n  DNSSeeds: string[] | null;\n  DNSSeedGenerators: string[] | null;\n  BitcoinBtcdParams: Params | null;\n  BitcoinStartBlockNode: BlockNode | null;\n  BitcoinBurnAddress: string;\n  BitcoinExchangeFeeBasisPoints: number;\n  BitcoinDoubleSpendWaitSeconds: number;\n  DeSoNanosPurchasedAtGenesis: number;\n  DefaultSocketPort: number;\n  DefaultJSONPort: number;\n  DialTimeout: number;\n  VersionNegotiationTimeout: number;\n  GenesisBlock: MsgDeSoBlock | null;\n  GenesisBlockHashHex: string;\n  TimeBetweenBlocks: number;\n  TimeBetweenDifficultyRetargets: number;\n  MinDifficultyTargetHex: string;\n  MinChainWorkHex: string;\n  MaxTipAge: number;\n  MaxDifficultyRetargetFactor: number;\n  BlockRewardMaturity: number;\n  V1DifficultyAdjustmentFactor: number;\n  MaxTstampOffsetSeconds: number;\n  MaxBlockSizeBytes: number;\n  MinerMaxBlockSizeBytes: number;\n  Base58PrefixPublicKey: number[];\n  Base58PrefixPrivateKey: number[];\n  MaxFetchBlocks: number;\n  MiningIterationsPerCycle: number;\n  MaxUsernameLengthBytes: number;\n  MaxUserDescriptionLengthBytes: number;\n  MaxProfilePicLengthBytes: number;\n  MaxProfilePicDimensions: number;\n  MaxPrivateMessageLengthBytes: number;\n  StakeFeeBasisPoints: number;\n  MaxPostBodyLengthBytes: number;\n  MaxPostSubLengthBytes: number;\n  MaxStakeMultipleBasisPoints: number;\n  MaxCreatorBasisPoints: number;\n  MaxNFTRoyaltyBasisPoints: number;\n  ParamUpdaterPublicKeys: Record<string, boolean>;\n  SeedTxns: string[] | null;\n  SeedBalances: DeSoOutput[] | null;\n  CreatorCoinTradeFeeBasisPoints: number;\n  CreatorCoinSlope: Float | null;\n  CreatorCoinReserveRatio: Float | null;\n  CreatorCoinAutoSellThresholdNanos: number;\n  ForkHeights: ForkHeights;\n  EncoderMigrationHeights: EncoderMigrationHeights | null;\n  EncoderMigrationHeightsList: MigrationHeight[] | null;\n}\n\n// struct2ts:types/generated/types.UtxoView\nexport interface UtxoView {\n  NumUtxoEntries: number;\n  UtxoKeyToUtxoEntry: Record<string, UtxoEntry>;\n  PublicKeyToDeSoBalanceNanos: Record<string, number>;\n  NanosPurchased: number;\n  USDCentsPerBitcoin: number;\n  GlobalParamsEntry: GlobalParamsEntry | null;\n  BitcoinBurnTxIDs: Record<BlockHash, boolean>;\n  ForbiddenPubKeyToForbiddenPubKeyEntry: Record<PkMapKey, ForbiddenPubKeyEntry>;\n  MessageKeyToMessageEntry: Record<string, MessageEntry>;\n  MessagingGroupKeyToMessagingGroupEntry: Record<string, MessagingGroupEntry>;\n  MessageMap: Record<BlockHash, PGMessage>;\n  FollowKeyToFollowEntry: Record<string, FollowEntry>;\n  NFTKeyToNFTEntry: Record<string, NFTEntry>;\n  NFTBidKeyToNFTBidEntry: Record<string, NFTBidEntry>;\n  NFTKeyToAcceptedNFTBidHistory: Record<string, NFTBidEntry>;\n  DiamondKeyToDiamondEntry: Record<string, DiamondEntry>;\n  LikeKeyToLikeEntry: Record<string, LikeEntry>;\n  RepostKeyToRepostEntry: Record<string, RepostEntry>;\n  PostHashToPostEntry: Record<BlockHash, PostEntry>;\n  PublicKeyToPKIDEntry: Record<PkMapKey, PKIDEntry>;\n  PKIDToPublicKey: Record<string, PKIDEntry>;\n  ProfilePKIDToProfileEntry: Record<string, ProfileEntry>;\n  ProfileUsernameToProfileEntry: Record<UsernameMapKey, ProfileEntry>;\n  HODLerPKIDCreatorPKIDToBalanceEntry: Record<string, BalanceEntry>;\n  HODLerPKIDCreatorPKIDToDAOCoinBalanceEntry: Record<string, BalanceEntry>;\n  DerivedKeyToDerivedEntry: Record<string, DerivedKeyEntry>;\n  DAOCoinLimitOrderMapKeyToDAOCoinLimitOrderEntry: Record<\n    string,\n    DAOCoinLimitOrderEntry\n  >;\n  TipHash: number[];\n  Handle: DB | null;\n  Postgres: Postgres | null;\n  Params: DeSoParams | null;\n  Snapshot: Snapshot | null;\n}\n\n// struct2ts:types/generated/types.HelpConnectNFTSoldStruct\nexport interface HelpConnectNFTSoldStruct {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidderPKID: number[];\n  BidAmountNanos: number;\n  UnlockableText: number[] | null;\n  PrevNFTBidEntry: NFTBidEntry | null;\n  BidderInputs: DeSoInput[] | null;\n  BlockHeight: number;\n  Txn: MsgDeSoTxn | null;\n  TxHash: number[];\n  VerifySignatures: boolean;\n}\n\n// struct2ts:types/generated/types.PublicKeyRoyaltyPair\nexport interface PublicKeyRoyaltyPair {\n  PublicKey: number[] | null;\n  RoyaltyAmountNanos: number;\n}\n\n// struct2ts:types/generated/types.FilledDAOCoinLimitOrder\nexport interface FilledDAOCoinLimitOrder {\n  OrderID: number[];\n  TransactorPKID: number[];\n  BuyingDAOCoinCreatorPKID: number[];\n  SellingDAOCoinCreatorPKID: number[];\n  CoinQuantityInBaseUnitsBought: number[];\n  CoinQuantityInBaseUnitsSold: number[];\n  IsFulfilled: boolean;\n}\n\n// struct2ts:types/generated/types.UtxoOperation\nexport interface UtxoOperation {\n  Type: number;\n  Entry: UtxoEntry | null;\n  Key: UtxoKey | null;\n  PrevNanosPurchased: number;\n  PrevUSDCentsPerBitcoin: number;\n  PrevPostEntry: PostEntry | null;\n  PrevParentPostEntry: PostEntry | null;\n  PrevGrandparentPostEntry: PostEntry | null;\n  PrevRepostedPostEntry: PostEntry | null;\n  PrevProfileEntry: ProfileEntry | null;\n  PrevLikeEntry: LikeEntry | null;\n  PrevLikeCount: number;\n  PrevDiamondEntry: DiamondEntry | null;\n  PrevNFTEntry: NFTEntry | null;\n  PrevNFTBidEntry: NFTBidEntry | null;\n  DeletedNFTBidEntries: NFTBidEntry[] | null;\n  NFTPaymentUtxoKeys: UtxoKey[] | null;\n  NFTSpentUtxoEntries: UtxoEntry[] | null;\n  PrevAcceptedNFTBidEntries: NFTBidEntry[] | null;\n  PrevDerivedKeyEntry: DerivedKeyEntry | null;\n  PrevMessagingKeyEntry: MessagingGroupEntry | null;\n  PrevRepostEntry: RepostEntry | null;\n  PrevRepostCount: number;\n  PrevCoinEntry: CoinEntry | null;\n  PrevCoinRoyaltyCoinEntries: Record<string, CoinEntry>;\n  PrevTransactorBalanceEntry: BalanceEntry | null;\n  PrevCreatorBalanceEntry: BalanceEntry | null;\n  FounderRewardUtxoKey: UtxoKey | null;\n  PrevSenderBalanceEntry: BalanceEntry | null;\n  PrevReceiverBalanceEntry: BalanceEntry | null;\n  PrevGlobalParamsEntry: GlobalParamsEntry | null;\n  PrevForbiddenPubKeyEntry: ForbiddenPubKeyEntry | null;\n  ClobberedProfileBugDESOLockedNanos: number;\n  CreatorCoinDESOLockedNanosDiff: number;\n  SwapIdentityFromDESOLockedNanos: number;\n  SwapIdentityToDESOLockedNanos: number;\n  AcceptNFTBidCreatorPublicKey: number[] | null;\n  AcceptNFTBidBidderPublicKey: number[] | null;\n  AcceptNFTBidCreatorRoyaltyNanos: number;\n  AcceptNFTBidCreatorDESORoyaltyNanos: number;\n  AcceptNFTBidAdditionalCoinRoyalties: PublicKeyRoyaltyPair[] | null;\n  AcceptNFTBidAdditionalDESORoyalties: PublicKeyRoyaltyPair[] | null;\n  NFTBidCreatorPublicKey: number[] | null;\n  NFTBidBidderPublicKey: number[] | null;\n  NFTBidCreatorRoyaltyNanos: number;\n  NFTBidCreatorDESORoyaltyNanos: number;\n  NFTBidAdditionalCoinRoyalties: PublicKeyRoyaltyPair[] | null;\n  NFTBidAdditionalDESORoyalties: PublicKeyRoyaltyPair[] | null;\n  PrevTransactorDAOCoinLimitOrderEntry: DAOCoinLimitOrderEntry | null;\n  PrevBalanceEntries: Record<string, string>;\n  PrevMatchingOrders: DAOCoinLimitOrderEntry[] | null;\n  FilledDAOCoinLimitOrders: FilledDAOCoinLimitOrder[] | null;\n}\n\n// struct2ts:types/generated/types.UtxoOperationBundle\nexport interface UtxoOperationBundle {\n  UtxoOpBundle: UtxoOperation[] | null;\n}\n\n// struct2ts:types/generated/types.MessageKey\nexport interface MessageKey {\n  PublicKey: number[];\n  BlockHeight: number;\n  TstampNanos: number;\n}\n\n// struct2ts:types/generated/types.MessagingGroupKey\nexport interface MessagingGroupKey {\n  OwnerPublicKey: number[];\n  GroupKeyName: number[];\n}\n\n// struct2ts:types/generated/types.LikeKey\nexport interface LikeKey {\n  LikerPubKey: number[];\n  LikedPostHash: number[];\n}\n\n// struct2ts:types/generated/types.NFTKey\nexport interface NFTKey {\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.NFTBidKey\nexport interface NFTBidKey {\n  BidderPKID: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.DerivedKeyMapKey\nexport interface DerivedKeyMapKey {\n  OwnerPublicKey: number[];\n  DerivedPublicKey: number[];\n}\n\n// struct2ts:types/generated/types.FollowKey\nexport interface FollowKey {\n  FollowerPKID: number[];\n  FollowedPKID: number[];\n}\n\n// struct2ts:types/generated/types.DiamondKey\nexport interface DiamondKey {\n  SenderPKID: number[];\n  ReceiverPKID: number[];\n  DiamondPostHash: number[];\n}\n\n// struct2ts:types/generated/types.RepostKey\nexport interface RepostKey {\n  ReposterPubKey: number[];\n  RepostedPostHash: number[];\n}\n\n// struct2ts:types/generated/types.PostEntryReaderState\nexport interface PostEntryReaderState {\n  LikedByReader: boolean;\n  DiamondLevelBestowed: number;\n  RepostedByReader: boolean;\n  RepostPostHashHex: string;\n}\n\n// struct2ts:types/generated/types.BalanceEntryMapKey\nexport interface BalanceEntryMapKey {\n  HODLerPKID: number[];\n  CreatorPKID: number[];\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderMapKey\nexport interface DAOCoinLimitOrderMapKey {\n  OrderID: number[];\n}\n\n// struct2ts:types/generated/types.OrphanBlock\nexport interface OrphanBlock {\n  Block: MsgDeSoBlock | null;\n  Hash: number[];\n}\n\n// struct2ts:github.com/deso-protocol/go-deadlock.RWMutex\nexport type RWMutex = any;\n\n// struct2ts:types/generated/types.Blockchain\nexport interface Blockchain {\n  MaxSyncBlockHeight: number;\n  ChainLock: RWMutex;\n}\n\n// struct2ts:github.com/btcsuite/btcd/addrmgr.AddrManager\nexport type AddrManager = any;\n\n// struct2ts:types/generated/types.ConnectionManager\nexport interface ConnectionManager {\n  AddrMgr: AddrManager | null;\n  HyperSync: boolean;\n  DisableSlowSync: boolean;\n}\n\n// struct2ts:types/generated/types.DBPrefixes\nexport interface DBPrefixes {\n  PrefixBlockHashToBlock: number[] | null;\n  PrefixHeightHashToNodeInfo: number[] | null;\n  PrefixBitcoinHeightHashToNodeInfo: number[] | null;\n  PrefixBestDeSoBlockHash: number[] | null;\n  PrefixBestBitcoinHeaderHash: number[] | null;\n  PrefixUtxoKeyToUtxoEntry: number[] | null;\n  PrefixPubKeyUtxoKey: number[] | null;\n  PrefixUtxoNumEntries: number[] | null;\n  PrefixBlockHashToUtxoOperations: number[] | null;\n  PrefixNanosPurchased: number[] | null;\n  PrefixUSDCentsPerBitcoinExchangeRate: number[] | null;\n  PrefixGlobalParams: number[] | null;\n  PrefixBitcoinBurnTxIDs: number[] | null;\n  PrefixPublicKeyTimestampToPrivateMessage: number[] | null;\n  PrefixTransactionIndexTip: number[] | null;\n  PrefixTransactionIDToMetadata: number[] | null;\n  PrefixPublicKeyIndexToTransactionIDs: number[] | null;\n  PrefixPublicKeyToNextIndex: number[] | null;\n  PrefixPostHashToPostEntry: number[] | null;\n  PrefixPosterPublicKeyPostHash: number[] | null;\n  PrefixTstampNanosPostHash: number[] | null;\n  PrefixCreatorBpsPostHash: number[] | null;\n  PrefixMultipleBpsPostHash: number[] | null;\n  PrefixCommentParentStakeIDToPostHash: number[] | null;\n  PrefixPKIDToProfileEntry: number[] | null;\n  PrefixProfileUsernameToPKID: number[] | null;\n  PrefixCreatorDeSoLockedNanosCreatorPKID: number[] | null;\n  PrefixStakeIDTypeAmountStakeIDIndex: number[] | null;\n  PrefixFollowerPKIDToFollowedPKID: number[] | null;\n  PrefixFollowedPKIDToFollowerPKID: number[] | null;\n  PrefixLikerPubKeyToLikedPostHash: number[] | null;\n  PrefixLikedPostHashToLikerPubKey: number[] | null;\n  PrefixHODLerPKIDCreatorPKIDToBalanceEntry: number[] | null;\n  PrefixCreatorPKIDHODLerPKIDToBalanceEntry: number[] | null;\n  PrefixPosterPublicKeyTimestampPostHash: number[] | null;\n  PrefixPublicKeyToPKID: number[] | null;\n  PrefixPKIDToPublicKey: number[] | null;\n  PrefixMempoolTxnHashToMsgDeSoTxn: number[] | null;\n  PrefixReposterPubKeyRepostedPostHashToRepostPostHash: number[] | null;\n  PrefixDiamondReceiverPKIDDiamondSenderPKIDPostHash: number[] | null;\n  PrefixDiamondSenderPKIDDiamondReceiverPKIDPostHash: number[] | null;\n  PrefixForbiddenBlockSignaturePubKeys: number[] | null;\n  PrefixRepostedPostHashReposterPubKey: number[] | null;\n  PrefixRepostedPostHashReposterPubKeyRepostPostHash: number[] | null;\n  PrefixDiamondedPostHashDiamonderPKIDDiamondLevel: number[] | null;\n  PrefixPostHashSerialNumberToNFTEntry: number[] | null;\n  PrefixPKIDIsForSaleBidAmountNanosPostHashSerialNumberToNFTEntry:\n    | number[]\n    | null;\n  PrefixPostHashSerialNumberBidNanosBidderPKID: number[] | null;\n  PrefixBidderPKIDPostHashSerialNumberToBidNanos: number[] | null;\n  PrefixPublicKeyToDeSoBalanceNanos: number[] | null;\n  PrefixPublicKeyBlockHashToBlockReward: number[] | null;\n  PrefixPostHashSerialNumberToAcceptedBidEntries: number[] | null;\n  PrefixHODLerPKIDCreatorPKIDToDAOCoinBalanceEntry: number[] | null;\n  PrefixCreatorPKIDHODLerPKIDToDAOCoinBalanceEntry: number[] | null;\n  PrefixMessagingGroupEntriesByOwnerPubKeyAndGroupKeyName: number[] | null;\n  PrefixMessagingGroupMetadataByMemberPubKeyAndGroupMessagingPubKey:\n    | number[]\n    | null;\n  PrefixAuthorizeDerivedKey: number[] | null;\n  PrefixDAOCoinLimitOrder: number[] | null;\n  PrefixDAOCoinLimitOrderByTransactorPKID: number[] | null;\n  PrefixDAOCoinLimitOrderByOrderID: number[] | null;\n}\n\n// struct2ts:types/generated/types.DBStatePrefixes\nexport interface DBStatePrefixes {\n  Prefixes: DBPrefixes | null;\n  StatePrefixesMap: Record<number, boolean>;\n  StatePrefixesList: number[] | null;\n  TxIndexPrefixes: number[] | null;\n}\n\n// struct2ts:types/generated/types.AffectedPublicKey\nexport interface AffectedPublicKey {\n  PublicKeyBase58Check: string;\n  Metadata: string;\n}\n\n// struct2ts:types/generated/types.BasicTransferTxindexMetadata\nexport interface BasicTransferTxindexMetadata {\n  TotalInputNanos: number;\n  TotalOutputNanos: number;\n  FeeNanos: number;\n  UtxoOpsDump: string;\n  UtxoOps: UtxoOperation[] | null;\n  DiamondLevel: number;\n  PostHashHex: string;\n}\n\n// struct2ts:types/generated/types.BitcoinExchangeTxindexMetadata\nexport interface BitcoinExchangeTxindexMetadata {\n  BitcoinSpendAddress: string;\n  SatoshisBurned: number;\n  NanosCreated: number;\n  TotalNanosPurchasedBefore: number;\n  TotalNanosPurchasedAfter: number;\n  BitcoinTxnHash: string;\n}\n\n// struct2ts:types/generated/types.CreatorCoinTxindexMetadata\nexport interface CreatorCoinTxindexMetadata {\n  OperationType: string;\n  DeSoToSellNanos: number;\n  CreatorCoinToSellNanos: number;\n  DeSoToAddNanos: number;\n  DESOLockedNanosDiff: number;\n}\n\n// struct2ts:types/generated/types.CreatorCoinTransferTxindexMetadata\nexport interface CreatorCoinTransferTxindexMetadata {\n  CreatorUsername: string;\n  CreatorCoinToTransferNanos: number;\n  DiamondLevel: number;\n  PostHashHex: string;\n}\n\n// struct2ts:types/generated/types.DAOCoinTransferTxindexMetadata\nexport interface DAOCoinTransferTxindexMetadata {\n  CreatorUsername: string;\n  DAOCoinToTransferNanos: number[];\n}\n\n// struct2ts:types/generated/types.DAOCoinTxindexMetadata\nexport interface DAOCoinTxindexMetadata {\n  CreatorUsername: string;\n  OperationType: string;\n  CoinsToMintNanos: number[];\n  CoinsToBurnNanos: number[];\n  TransferRestrictionStatus: string;\n}\n\n// struct2ts:types/generated/types.FilledDAOCoinLimitOrderMetadata\nexport interface FilledDAOCoinLimitOrderMetadata {\n  TransactorPublicKeyBase58Check: string;\n  BuyingDAOCoinCreatorPublicKey: string;\n  SellingDAOCoinCreatorPublicKey: string;\n  CoinQuantityInBaseUnitsBought: number[];\n  CoinQuantityInBaseUnitsSold: number[];\n  IsFulfilled: boolean;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderTxindexMetadata\nexport interface DAOCoinLimitOrderTxindexMetadata {\n  BuyingDAOCoinCreatorPublicKey: string;\n  SellingDAOCoinCreatorPublicKey: string;\n  ScaledExchangeRateCoinsToSellPerCoinToBuy: number[];\n  QuantityToFillInBaseUnits: number[];\n  FilledDAOCoinLimitOrdersMetadata: FilledDAOCoinLimitOrderMetadata[] | null;\n}\n\n// struct2ts:types/generated/types.UpdateProfileTxindexMetadata\nexport interface UpdateProfileTxindexMetadata {\n  ProfilePublicKeyBase58Check: string;\n  NewUsername: string;\n  NewDescription: string;\n  NewProfilePic: string;\n  NewCreatorBasisPoints: number;\n  NewStakeMultipleBasisPoints: number;\n  IsHidden: boolean;\n}\n\nexport interface CreateUserAssociationTxindexMetadata {\n  TargetUserPublicKeyBase58Check: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n}\n\nexport interface DeleteUserAssociationTxindexMetadata {\n  AssociationIDHex: string;\n  TargetUserPublicKeyBase58Check: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n}\n\nexport interface CreatePostAssociationTxindexMetadata {\n  PostHashHex: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n}\n\nexport interface DeletePostAssociationTxindexMetadata {\n  AssociationIDHex: string;\n  PostHashHex: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n}\n\nexport interface AccessGroupTxindexMetadata {\n  AccessGroupOwnerPublicKey: number[];\n  AccessGroupPublicKey: number[];\n  AccessGroupKeyName: number[];\n  AccessGroupOperationType: number;\n}\n\nexport interface AccessGroupMemberTxindexType {\n  AccessGroupMemberPublicKey: number[];\n  AccessGroupMemberKeyName: number[];\n  EncryptedKey: number[];\n  ExtraData: { [k: string]: number[] };\n}\n\nexport interface AccessGroupMembersTxindexMetadata {\n  AccessGroupOwnerPublicKey: number[];\n  AccessGroupKeyName: number[];\n  AccessGroupMembersList: AccessGroupMemberTxindexType[];\n  AccessGroupMemberOperationType: number;\n}\n\nexport interface NewMessageTxindexMetadata {\n  SenderAccessGroupOwnerPublicKey: number[];\n  SenderAccessGroupKeyName: number[];\n  RecipientAccessGroupOwnerPublicKey: number[];\n  RecipientAccessGroupKeyName: number[];\n  TimestampNanos: number;\n  NewMessageType: number;\n  NewMessageOperation: number;\n}\n\n// struct2ts:types/generated/types.SubmitPostTxindexMetadata\nexport interface SubmitPostTxindexMetadata {\n  PostHashBeingModifiedHex: string;\n  ParentPostHashHex: string;\n}\n\n// struct2ts:types/generated/types.LikeTxindexMetadata\nexport interface LikeTxindexMetadata {\n  IsUnlike: boolean;\n  PostHashHex: string;\n}\n\n// struct2ts:types/generated/types.FollowTxindexMetadata\nexport interface FollowTxindexMetadata {\n  IsUnfollow: boolean;\n}\n\n// struct2ts:types/generated/types.PrivateMessageTxindexMetadata\nexport interface PrivateMessageTxindexMetadata {\n  TimestampNanos: number;\n}\n\n// struct2ts:types/generated/types.SwapIdentityTxindexMetadata\nexport interface SwapIdentityTxindexMetadata {\n  FromPublicKeyBase58Check: string;\n  ToPublicKeyBase58Check: string;\n  FromDeSoLockedNanos: number;\n  ToDeSoLockedNanos: number;\n}\n\n// struct2ts:types/generated/types.NFTRoyaltiesMetadata\nexport interface NFTRoyaltiesMetadata {\n  CreatorCoinRoyaltyNanos: number;\n  CreatorRoyaltyNanos: number;\n  CreatorPublicKeyBase58Check: string;\n  AdditionalCoinRoyaltiesMap: Record<string, number>;\n  AdditionalDESORoyaltiesMap: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.NFTBidTxindexMetadata\nexport interface NFTBidTxindexMetadata {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  IsBuyNowBid: boolean;\n  OwnerPublicKeyBase58Check: string;\n  NFTRoyaltiesMetadata: NFTRoyaltiesMetadata | null;\n}\n\n// struct2ts:types/generated/types.AcceptNFTBidTxindexMetadata\nexport interface AcceptNFTBidTxindexMetadata {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  NFTRoyaltiesMetadata: NFTRoyaltiesMetadata | null;\n}\n\n// struct2ts:types/generated/types.NFTTransferTxindexMetadata\nexport interface NFTTransferTxindexMetadata {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.AcceptNFTTransferTxindexMetadata\nexport interface AcceptNFTTransferTxindexMetadata {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.BurnNFTTxindexMetadata\nexport interface BurnNFTTxindexMetadata {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.CreateNFTTxindexMetadata\nexport interface CreateNFTTxindexMetadata {\n  NFTPostHashHex: string;\n  AdditionalCoinRoyaltiesMap: Record<string, number>;\n  AdditionalDESORoyaltiesMap: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.UpdateNFTTxindexMetadata\nexport interface UpdateNFTTxindexMetadata {\n  NFTPostHashHex: string;\n  IsForSale: boolean;\n}\n\n// struct2ts:types/generated/types.TransactionMetadata\nexport interface TransactionMetadata {\n  BlockHashHex: string;\n  TxnIndexInBlock: number;\n  TxnType: string;\n  TransactorPublicKeyBase58Check: string;\n  AffectedPublicKeys: AffectedPublicKey[] | null;\n  TxnOutputs: DeSoOutput[] | null;\n  BasicTransferTxindexMetadata: BasicTransferTxindexMetadata | null;\n  BitcoinExchangeTxindexMetadata: BitcoinExchangeTxindexMetadata | null;\n  CreatorCoinTxindexMetadata: CreatorCoinTxindexMetadata | null;\n  CreatorCoinTransferTxindexMetadata: CreatorCoinTransferTxindexMetadata | null;\n  UpdateProfileTxindexMetadata: UpdateProfileTxindexMetadata | null;\n  SubmitPostTxindexMetadata: SubmitPostTxindexMetadata | null;\n  LikeTxindexMetadata: LikeTxindexMetadata | null;\n  FollowTxindexMetadata: FollowTxindexMetadata | null;\n  PrivateMessageTxindexMetadata: PrivateMessageTxindexMetadata | null;\n  SwapIdentityTxindexMetadata: SwapIdentityTxindexMetadata | null;\n  NFTBidTxindexMetadata: NFTBidTxindexMetadata | null;\n  AcceptNFTBidTxindexMetadata: AcceptNFTBidTxindexMetadata | null;\n  NFTTransferTxindexMetadata: NFTTransferTxindexMetadata | null;\n  AcceptNFTTransferTxindexMetadata: AcceptNFTTransferTxindexMetadata | null;\n  BurnNFTTxindexMetadata: BurnNFTTxindexMetadata | null;\n  DAOCoinTxindexMetadata: DAOCoinTxindexMetadata | null;\n  DAOCoinTransferTxindexMetadata: DAOCoinTransferTxindexMetadata | null;\n  CreateNFTTxindexMetadata: CreateNFTTxindexMetadata | null;\n  UpdateNFTTxindexMetadata: UpdateNFTTxindexMetadata | null;\n  DAOCoinLimitOrderTxindexMetadata: DAOCoinLimitOrderTxindexMetadata | null;\n  CreateUserAssociationTxindexMetadata: CreateUserAssociationTxindexMetadata | null;\n  DeleteUserAssociationTxindexMetadata: DeleteUserAssociationTxindexMetadata | null;\n  CreatePostAssociationTxindexMetadata: CreatePostAssociationTxindexMetadata | null;\n  DeletePostAssociationTxindexMetadata: DeletePostAssociationTxindexMetadata | null;\n  AccessGroupTxindexMetadata: AccessGroupTxindexMetadata | null;\n  AccessGroupMembersTxindexMetadata: AccessGroupMembersTxindexMetadata | null;\n  NewMessageTxindexMetadata: NewMessageTxindexMetadata | null;\n}\n\n// struct2ts:types/generated/types.TransactionEvent\nexport interface TransactionEvent {\n  Txn: MsgDeSoTxn | null;\n  TxnHash: number[];\n  UtxoView: UtxoView | null;\n  UtxoOps: UtxoOperation[] | null;\n}\n\n// struct2ts:types/generated/types.BlockEvent\nexport interface BlockEvent {\n  Block: MsgDeSoBlock | null;\n  UtxoView: UtxoView | null;\n  UtxoOps: UtxoOperation[] | null;\n}\n\n// struct2ts:types/generated/types.MempoolTx\nexport interface MempoolTx {\n  Tx: MsgDeSoTxn | null;\n  TxMeta: TransactionMetadata | null;\n  Hash: number[];\n  TxSizeBytes: number;\n  Added: Date;\n  Height: number;\n  Fee: number;\n  FeePerKB: number;\n}\n\n// struct2ts:types/generated/types.SummaryStats\nexport interface SummaryStats {\n  Count: number;\n  TotalBytes: number;\n}\n\n// struct2ts:github.com/btcsuite/btcd/btcec.PublicKey\nexport interface PublicKey {\n  Curve: any;\n  X: Int | null;\n  Y: Int | null;\n}\n\n// struct2ts:types/generated/types.DeSoMiner\nexport interface DeSoMiner {\n  PublicKeys: PublicKey[] | null;\n  BlockProducer: DeSoBlockProducer | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoGetHeaders\nexport interface MsgDeSoGetHeaders {\n  StopHash: number[];\n  BlockLocator: BlockHash[] | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoHeaderBundle\nexport interface MsgDeSoHeaderBundle {\n  Headers: MsgDeSoHeader[] | null;\n  TipHash: number[];\n  TipHeight: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoGetBlocks\nexport interface MsgDeSoGetBlocks {\n  HashList: BlockHash[] | null;\n}\n\n// struct2ts:types/generated/types.DeSoBodySchema\nexport interface DeSoBodySchema {\n  Body: string;\n  ImageURLs: string[] | null;\n  VideoURLs: string[] | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoGetTransactions\nexport interface MsgDeSoGetTransactions {\n  HashList: BlockHash[] | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoTransactionBundle\nexport interface MsgDeSoTransactionBundle {\n  Transactions: MsgDeSoTxn[] | null;\n}\n\n// struct2ts:types/generated/types.InvVect\nexport interface InvVect {\n  Type: number;\n  Hash: number[];\n}\n\n// struct2ts:types/generated/types.MsgDeSoInv\nexport interface MsgDeSoInv {\n  InvList: InvVect[] | null;\n  IsSyncResponse: boolean;\n}\n\n// struct2ts:types/generated/types.MsgDeSoPing\nexport interface MsgDeSoPing {\n  Nonce: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoPong\nexport interface MsgDeSoPong {\n  Nonce: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoVersion\nexport interface MsgDeSoVersion {\n  Version: number;\n  Services: number;\n  TstampSecs: number;\n  Nonce: number;\n  UserAgent: string;\n  StartBlockHeight: number;\n  MinFeeRateNanosPerKB: number;\n}\n\n// struct2ts:types/generated/types.SingleAddr\nexport interface SingleAddr {\n  Timestamp: Date;\n  Services: number;\n  IP: number[] | null;\n  Port: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoAddr\nexport interface MsgDeSoAddr {\n  AddrList: SingleAddr[] | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoVerack\nexport interface MsgDeSoVerack {\n  Nonce: number;\n}\n\n// struct2ts:types/generated/types.MsgDeSoGetSnapshot\nexport interface MsgDeSoGetSnapshot {\n  SnapshotStartKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.MsgDeSoSnapshotData\nexport interface MsgDeSoSnapshotData {\n  SnapshotMetadata: SnapshotEpochMetadata | null;\n  SnapshotChunk: DBEntry[] | null;\n  SnapshotChunkFull: boolean;\n  Prefix: number[] | null;\n}\n\n// struct2ts:types/generated/types.BlockRewardMetadataa\nexport interface BlockRewardMetadataa {\n  ExtraData: number[] | null;\n}\n\n// struct2ts:github.com/deso-protocol/go-merkle-tree.ProofPart\nexport interface ProofPart {\n  IsRight: boolean;\n  Hash: number[] | null;\n}\n\n// struct2ts:types/generated/types.BitcoinExchangeMetadata\nexport interface BitcoinExchangeMetadata {\n  BitcoinTransaction: MsgTx | null;\n  BitcoinBlockHash: number[];\n  BitcoinMerkleRoot: number[];\n  BitcoinMerkleProof: ProofPart[] | null;\n}\n\n// struct2ts:types/generated/types.PrivateMessageMetadata\nexport interface PrivateMessageMetadata {\n  RecipientPublicKey: number[] | null;\n  EncryptedText: number[] | null;\n  TimestampNanos: number;\n}\n\n// struct2ts:types/generated/types.LikeMetadata\nexport interface LikeMetadata {\n  LikedPostHash: number[];\n  IsUnlike: boolean;\n}\n\n// struct2ts:types/generated/types.FollowMetadata\nexport interface FollowMetadata {\n  FollowedPublicKey: number[] | null;\n  IsUnfollow: boolean;\n}\n\n// struct2ts:types/generated/types.SubmitPostMetadata\nexport interface SubmitPostMetadata {\n  PostHashToModify: number[] | null;\n  ParentStakeID: number[] | null;\n  Body: number[] | null;\n  CreatorBasisPoints: number;\n  StakeMultipleBasisPoints: number;\n  TimestampNanos: number;\n  IsHidden: boolean;\n}\n\n// struct2ts:types/generated/types.UpdateProfileMetadata\nexport interface UpdateProfileMetadata {\n  ProfilePublicKey: number[] | null;\n  NewUsername: number[] | null;\n  NewDescription: number[] | null;\n  NewProfilePic: number[] | null;\n  NewCreatorBasisPoints: number;\n  NewStakeMultipleBasisPoints: number;\n  IsHidden: boolean;\n}\n\n// struct2ts:types/generated/types.UpdateBitcoinUSDExchangeRateMetadataa\nexport interface UpdateBitcoinUSDExchangeRateMetadataa {\n  USDCentsPerBitcoin: number;\n}\n\n// struct2ts:types/generated/types.CreatorCoinMetadataa\nexport interface CreatorCoinMetadataa {\n  ProfilePublicKey: number[] | null;\n  OperationType: number;\n  DeSoToSellNanos: number;\n  CreatorCoinToSellNanos: number;\n  DeSoToAddNanos: number;\n  MinDeSoExpectedNanos: number;\n  MinCreatorCoinExpectedNanos: number;\n}\n\n// struct2ts:types/generated/types.CreatorCoinTransferMetadataa\nexport interface CreatorCoinTransferMetadataa {\n  ProfilePublicKey: number[] | null;\n  CreatorCoinToTransferNanos: number;\n  ReceiverPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.CreateNFTMetadata\nexport interface CreateNFTMetadata {\n  NFTPostHash: number[];\n  NumCopies: number;\n  HasUnlockable: boolean;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n  NFTRoyaltyToCreatorBasisPoints: number;\n  NFTRoyaltyToCoinBasisPoints: number;\n}\n\n// struct2ts:types/generated/types.UpdateNFTMetadata\nexport interface UpdateNFTMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n}\n\n// struct2ts:types/generated/types.AcceptNFTBidMetadata\nexport interface AcceptNFTBidMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidderPKID: number[];\n  BidAmountNanos: number;\n  UnlockableText: number[] | null;\n  BidderInputs: DeSoInput[] | null;\n}\n\n// struct2ts:types/generated/types.NFTBidMetadata\nexport interface NFTBidMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidAmountNanos: number;\n}\n\n// struct2ts:types/generated/types.NFTTransferMetadata\nexport interface NFTTransferMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  ReceiverPublicKey: number[] | null;\n  UnlockableText: number[] | null;\n}\n\n// struct2ts:types/generated/types.AcceptNFTTransferMetadata\nexport interface AcceptNFTTransferMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.BurnNFTMetadata\nexport interface BurnNFTMetadata {\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.SwapIdentityMetadataa\nexport interface SwapIdentityMetadataa {\n  FromPublicKey: number[] | null;\n  ToPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.AuthorizeDerivedKeyMetadata\nexport interface AuthorizeDerivedKeyMetadata {\n  DerivedPublicKey: number[] | null;\n  ExpirationBlock: number;\n  OperationType: number;\n  AccessSignature: number[] | null;\n}\n\n// struct2ts:types/generated/types.NFTOperationLimitKey\nexport interface NFTOperationLimitKey {\n  BlockHash: number[];\n  SerialNumber: number;\n  Operation: number;\n}\n\n// struct2ts:types/generated/types.CreatorCoinOperationLimitKey\nexport interface CreatorCoinOperationLimitKey {\n  CreatorPKID: number[];\n  Operation: number;\n}\n\n// struct2ts:types/generated/types.DAOCoinOperationLimitKey\nexport interface DAOCoinOperationLimitKey {\n  CreatorPKID: number[];\n  Operation: number;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderLimitKey\nexport interface DAOCoinLimitOrderLimitKey {\n  BuyingDAOCoinCreatorPKID: number[];\n  SellingDAOCoinCreatorPKID: number[];\n}\n\n// struct2ts:types/generated/types.DAOCoinMetadata\nexport interface DAOCoinMetadata {\n  ProfilePublicKey: number[] | null;\n  OperationType: number;\n  CoinsToMintNanos: number[];\n  CoinsToBurnNanos: number[];\n  TransferRestrictionStatus: number;\n}\n\n// struct2ts:types/generated/types.DAOCoinTransferMetadata\nexport interface DAOCoinTransferMetadata {\n  ProfilePublicKey: number[] | null;\n  DAOCoinToTransferNanos: number[];\n  ReceiverPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.DeSoInputsByTransactor\nexport interface DeSoInputsByTransactor {\n  TransactorPublicKey: number[];\n  Inputs: DeSoInput[] | null;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderMetadata\nexport interface DAOCoinLimitOrderMetadata {\n  BuyingDAOCoinCreatorPublicKey: number[];\n  SellingDAOCoinCreatorPublicKey: number[];\n  ScaledExchangeRateCoinsToSellPerCoinToBuy: number[];\n  QuantityToFillInBaseUnits: number[];\n  OperationType: number;\n  FillType: number;\n  CancelOrderID: number[];\n  BidderInputs: DeSoInputsByTransactor[] | null;\n  FeeNanos: number;\n}\n\n// struct2ts:types/generated/types.MessagingGroupMetadata\nexport interface MessagingGroupMetadata {\n  MessagingPublicKey: number[] | null;\n  MessagingGroupKeyName: number[] | null;\n  GroupOwnerSignature: number[] | null;\n  MessagingGroupMembers: MessagingGroupMember[] | null;\n}\n\n// struct2ts:types/generated/types.DeSoNode\nexport interface DeSoNode {\n  Name: string;\n  URL: string;\n  Owner: string;\n}\n\n// struct2ts:types/generated/types.Notifier\nexport type Notifer = any;\n\n// struct2ts:types/generated/types.ExpectedResponse\nexport interface ExpectedResponse {\n  TimeExpected: Date;\n  MessageTan: number;\n}\n\n// struct2ts:types/generated/types.DeSoMessageMeta\nexport interface DeSoMessageMeta {\n  DeSoMessage: any;\n  Inbound: boolean;\n}\n\n// struct2ts:github.com/deso-protocol/go-deadlock.Mutex\n\n// struct2ts:types/generated/types.Peer\nexport interface Peer {\n  StatsMtx: RWMutex;\n  TimeOffsetSecs: number;\n  TimeConnected: Date;\n  ID: number;\n  LastPingNonce: number;\n  LastPingTime: Date;\n  LastPingMicros: number;\n  Conn: any;\n  Params: DeSoParams | null;\n  MessageChan: ServerMessage;\n  PeerManuallyRemovedFromConnectionManager: boolean;\n  VersionNonceSent: number;\n  VersionNonceReceived: number;\n  PeerInfoMtx: Mutex;\n  VersionNegotiated: boolean;\n}\n\n// struct2ts:types/generated/types.PGChain\nexport interface PGChain {\n  Name: string;\n  TipHash: number[];\n}\n\n// struct2ts:types/generated/types.PGBlock\nexport interface PGBlock {\n  Hash: number[];\n  ParentHash: number[];\n  Height: number;\n  DifficultyTarget: number[];\n  CumWork: number[];\n  Status: number;\n  TxMerkleRoot: number[];\n  Version: number;\n  Timestamp: number;\n  Nonce: number;\n  ExtraNonce: number;\n  Notified: boolean;\n}\n\n// struct2ts:types/generated/types.PGTransactionOutput\nexport interface PGTransactionOutput {\n  OutputHash: number[];\n  OutputIndex: number;\n  OutputType: number;\n  Height: number;\n  PublicKey: number[] | null;\n  AmountNanos: number;\n  Spent: boolean;\n  InputHash: number[];\n  InputIndex: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataBlockReward\nexport interface PGMetadataBlockReward {\n  TransactionHash: number[];\n  ExtraData: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataBitcoinExchange\nexport interface PGMetadataBitcoinExchange {\n  TransactionHash: number[];\n  BitcoinBlockHash: number[];\n  BitcoinMerkleRoot: number[];\n}\n\n// struct2ts:types/generated/types.PGMetadataPrivateMessage\nexport interface PGMetadataPrivateMessage {\n  TransactionHash: number[];\n  RecipientPublicKey: number[] | null;\n  EncryptedText: number[] | null;\n  TimestampNanos: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataSubmitPost\nexport interface PGMetadataSubmitPost {\n  TransactionHash: number[];\n  PostHashToModify: number[];\n  ParentStakeID: number[];\n  Body: number[] | null;\n  TimestampNanos: number;\n  IsHidden: boolean;\n}\n\n// struct2ts:types/generated/types.PGMetadataUpdateExchangeRate\nexport interface PGMetadataUpdateExchangeRate {\n  TransactionHash: number[];\n  USDCentsPerBitcoin: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataUpdateProfile\nexport interface PGMetadataUpdateProfile {\n  TransactionHash: number[];\n  ProfilePublicKey: number[] | null;\n  NewUsername: number[] | null;\n  NewDescription: number[] | null;\n  NewProfilePic: number[] | null;\n  NewCreatorBasisPoints: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataFollow\nexport interface PGMetadataFollow {\n  TransactionHash: number[];\n  FollowedPublicKey: number[] | null;\n  IsUnfollow: boolean;\n}\n\n// struct2ts:types/generated/types.PGMetadataLike\nexport interface PGMetadataLike {\n  TransactionHash: number[];\n  LikedPostHash: number[];\n  IsUnlike: boolean;\n}\n\n// struct2ts:types/generated/types.PGMetadataCreatorCoin\nexport interface PGMetadataCreatorCoin {\n  TransactionHash: number[];\n  ProfilePublicKey: number[] | null;\n  OperationType: number;\n  DeSoToSellNanos: number;\n  CreatorCoinToSellNanos: number;\n  DeSoToAddNanos: number;\n  MinDeSoExpectedNanos: number;\n  MinCreatorCoinExpectedNanos: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataCreatorCoinTransfer\nexport interface PGMetadataCreatorCoinTransfer {\n  TransactionHash: number[];\n  ProfilePublicKey: number[] | null;\n  CreatorCoinToTransferNanos: number;\n  ReceiverPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataSwapIdentity\nexport interface PGMetadataSwapIdentity {\n  TransactionHash: number[];\n  FromPublicKey: number[] | null;\n  ToPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataCreateNFT\nexport interface PGMetadataCreateNFT {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  NumCopies: number;\n  HasUnlockable: boolean;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n  CreatorRoyaltyBasisPoints: number;\n  CoinRoyaltyBasisPoints: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataUpdateNFT\nexport interface PGMetadataUpdateNFT {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataBidInput\nexport interface PGMetadataBidInput {\n  TransactionHash: number[];\n  InputHash: number[];\n  InputIndex: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataAcceptNFTBid\nexport interface PGMetadataAcceptNFTBid {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidderPKID: number[];\n  BidAmountNanos: number;\n  UnlockableText: number[] | null;\n  BidderInputs: PGMetadataBidInput[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataNFTBid\nexport interface PGMetadataNFTBid {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidAmountNanos: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataNFTTransfer\nexport interface PGMetadataNFTTransfer {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  ReceiverPublicKey: number[] | null;\n  UnlockableText: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataAcceptNFTTransfer\nexport interface PGMetadataAcceptNFTTransfer {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataBurnNFT\nexport interface PGMetadataBurnNFT {\n  TransactionHash: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataDerivedKey\nexport interface PGMetadataDerivedKey {\n  TransactionHash: number[];\n  DerivedPublicKey: number[];\n  ExpirationBlock: number;\n  OperationType: number;\n  AccessSignature: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataDAOCoin\nexport interface PGMetadataDAOCoin {\n  TransactionHash: number[];\n  ProfilePublicKey: number[] | null;\n  OperationType: number;\n  CoinsToMintNanos: string;\n  CoinsToBurnNanos: string;\n  TransferRestrictionStatus: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataDAOCoinTransfer\nexport interface PGMetadataDAOCoinTransfer {\n  TransactionHash: number[];\n  ProfilePublicKey: number[] | null;\n  DAOCoinToTransferNanos: string;\n  ReceiverPublicKey: number[] | null;\n}\n\n// struct2ts:types/generated/types.PGMetadataDAOCoinLimitOrderBidderInputs\nexport interface PGMetadataDAOCoinLimitOrderBidderInputs {\n  TransactionHash: number[];\n  InputHash: number[];\n  InputIndex: number;\n}\n\n// struct2ts:types/generated/types.PGMetadataDAOCoinLimitOrder\nexport interface PGMetadataDAOCoinLimitOrder {\n  TransactionHash: number[];\n  BuyingDAOCoinCreatorPublicKey: number[];\n  SellingDAOCoinCreatorPublicKey: number[];\n  ScaledExchangeRateCoinsToSellPerCoinToBuy: string;\n  QuantityToFillInBaseUnits: string;\n  OperationType: number;\n  FillType: number;\n  CancelOrderID: number[];\n  FeeNanos: number;\n  BidderInputs: PGMetadataDAOCoinLimitOrderBidderInputs[] | null;\n}\n\n// struct2ts:types/generated/types.PGTransaction\nexport interface PGTransaction {\n  Hash: number[];\n  BlockHash: number[];\n  Type: number;\n  PublicKey: number[] | null;\n  ExtraData: Record<string, number>;\n  R: number[];\n  S: number[];\n  Outputs: PGTransactionOutput[] | null;\n  MetadataBlockReward: PGMetadataBlockReward | null;\n  MetadataBitcoinExchange: PGMetadataBitcoinExchange | null;\n  MetadataPrivateMessage: PGMetadataPrivateMessage | null;\n  MetadataSubmitPost: PGMetadataSubmitPost | null;\n  MetadataUpdateExchangeRate: PGMetadataUpdateExchangeRate | null;\n  MetadataUpdateProfile: PGMetadataUpdateProfile | null;\n  MetadataFollow: PGMetadataFollow | null;\n  MetadataLike: PGMetadataLike | null;\n  MetadataCreatorCoin: PGMetadataCreatorCoin | null;\n  MetadataCreatorCoinTransfer: PGMetadataCreatorCoinTransfer | null;\n  MetadataSwapIdentity: PGMetadataSwapIdentity | null;\n  MetadataCreateNFT: PGMetadataCreateNFT | null;\n  MetadataUpdateNFT: PGMetadataUpdateNFT | null;\n  MetadataAcceptNFTBid: PGMetadataAcceptNFTBid | null;\n  MetadataNFTBid: PGMetadataNFTBid | null;\n  MetadataNFTTransfer: PGMetadataNFTTransfer | null;\n  MetadataAcceptNFTTransfer: PGMetadataAcceptNFTTransfer | null;\n  MetadataBurnNFT: PGMetadataBurnNFT | null;\n  MetadataDerivedKey: PGMetadataDerivedKey | null;\n  MetadataDAOCoin: PGMetadataDAOCoin | null;\n  MetadataDAOCoinTransfer: PGMetadataDAOCoinTransfer | null;\n  MetadataDAOCoinLimitOrder: PGMetadataDAOCoinLimitOrder | null;\n}\n\n// struct2ts:types/generated/types.PGNotification\nexport interface PGNotification {\n  TransactionHash: number[];\n  Mined: boolean;\n  ToUser: number[] | null;\n  FromUser: number[] | null;\n  OtherUser: number[] | null;\n  Type: number;\n  Amount: number;\n  PostHash: number[];\n  Timestamp: number;\n}\n\n// struct2ts:types/generated/types.PGProfile\nexport interface PGProfile {\n  PKID: number[];\n  PublicKey: number[];\n  Username: string;\n  Description: string;\n  ProfilePic: number[] | null;\n  CreatorBasisPoints: number;\n  DeSoLockedNanos: number;\n  NumberOfHolders: number;\n  CoinsInCirculationNanos: number;\n  CoinWatermarkNanos: number;\n  MintingDisabled: boolean;\n  DAOCoinNumberOfHolders: number;\n  DAOCoinCoinsInCirculationNanos: string;\n  DAOCoinMintingDisabled: boolean;\n  DAOCoinTransferRestrictionStatus: number;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PGPost\nexport interface PGPost {\n  PostHash: number[];\n  PosterPublicKey: number[] | null;\n  ParentPostHash: number[];\n  Body: string;\n  RepostedPostHash: number[];\n  QuotedRepost: boolean;\n  Timestamp: number;\n  Hidden: boolean;\n  LikeCount: number;\n  RepostCount: number;\n  QuoteRepostCount: number;\n  DiamondCount: number;\n  CommentCount: number;\n  Pinned: boolean;\n  NFT: boolean;\n  NumNFTCopies: number;\n  NumNFTCopiesForSale: number;\n  NumNFTCopiesBurned: number;\n  Unlockable: boolean;\n  CreatorRoyaltyBasisPoints: number;\n  CoinRoyaltyBasisPoints: number;\n  AdditionalNFTRoyaltiesToCoinsBasisPoints: Record<string, number>;\n  AdditionalNFTRoyaltiesToCreatorsBasisPoints: Record<string, number>;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PGLike\nexport interface PGLike {\n  LikerPublicKey: number[] | null;\n  LikedPostHash: number[];\n}\n\n// struct2ts:types/generated/types.PGFollow\nexport interface PGFollow {\n  FollowerPKID: number[];\n  FollowedPKID: number[];\n}\n\n// struct2ts:types/generated/types.PGDiamond\nexport interface PGDiamond {\n  SenderPKID: number[];\n  ReceiverPKID: number[];\n  DiamondPostHash: number[];\n  DiamondLevel: number;\n}\n\n// struct2ts:types/generated/types.PGMessagingGroup\nexport interface PGMessagingGroup {\n  GroupOwnerPublicKey: number[];\n  MessagingPublicKey: number[];\n  MessagingGroupKeyName: number[];\n  MessagingGroupMembers: number[] | null;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PGCreatorCoinBalance\nexport interface PGCreatorCoinBalance {\n  HolderPKID: number[];\n  CreatorPKID: number[];\n  BalanceNanos: number;\n  HasPurchased: boolean;\n}\n\n// struct2ts:types/generated/types.PGDAOCoinBalance\nexport interface PGDAOCoinBalance {\n  HolderPKID: number[];\n  CreatorPKID: number[];\n  BalanceNanos: string;\n  HasPurchased: boolean;\n}\n\n// struct2ts:types/generated/types.PGDAOCoinLimitOrder\nexport interface PGDAOCoinLimitOrder {\n  OrderID: number[];\n  TransactorPKID: number[];\n  BuyingDAOCoinCreatorPKID: number[];\n  SellingDAOCoinCreatorPKID: number[];\n  ScaledExchangeRateCoinsToSellPerCoinToBuy: string;\n  QuantityToFillInBaseUnits: string;\n  OperationType: number;\n  FillType: number;\n  BlockHeight: number;\n}\n\n// struct2ts:types/generated/types.PGBalance\nexport interface PGBalance {\n  PublicKey: number[];\n  BalanceNanos: number;\n}\n\n// struct2ts:types/generated/types.PGGlobalParams\nexport interface PGGlobalParams {\n  ID: number;\n  USDCentsPerBitcoin: number;\n  CreateProfileFeeNanos: number;\n  CreateNFTFeeNanos: number;\n  MaxCopiesPerNFT: number;\n  MinNetworkFeeNanosPerKB: number;\n}\n\n// struct2ts:types/generated/types.PGRepost\nexport interface PGRepost {\n  ReposterPublickey: number[];\n  RepostedPostHash: number[];\n  RepostPostHash: number[];\n}\n\n// struct2ts:types/generated/types.PGForbiddenKey\nexport interface PGForbiddenKey {\n  PublicKey: number[];\n}\n\n// struct2ts:types/generated/types.PGNFT\nexport interface PGNFT {\n  NFTPostHash: number[];\n  SerialNumber: number;\n  LastOwnerPKID: number[];\n  OwnerPKID: number[];\n  ForSale: boolean;\n  MinBidAmountNanos: number;\n  UnlockableText: string;\n  LastAcceptedBidAmountNanos: number;\n  IsPending: boolean;\n  IsBuyNow: boolean;\n  BuyNowPriceNanos: number;\n  ExtraData: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.PGNFTBid\nexport interface PGNFTBid {\n  BidderPKID: number[];\n  NFTPostHash: number[];\n  SerialNumber: number;\n  BidAmountNanos: number;\n  Accepted: boolean;\n  AcceptedBlockHeight: number | null;\n}\n\n// struct2ts:types/generated/types.PGDerivedKey\nexport interface PGDerivedKey {\n  OwnerPublicKey: number[];\n  DerivedPublicKey: number[];\n  ExpirationBlock: number;\n  OperationType: number;\n  ExtraData: Record<string, number>;\n  TransactionSpendingLimitTracker: TransactionSpendingLimit | null;\n  Memo: number[] | null;\n}\n\n// struct2ts:types/generated/types.ServerMessage\nexport interface ServerMessage {\n  Peer: Peer | null;\n  Msg: any;\n  ReplyChan: ServerReply;\n}\n\n// struct2ts:types/generated/types.GetDataRequestInfo\nexport interface GetDataRequestInfo {\n  PeerWhoSentInv: Peer | null;\n  TimeRequested: Date;\n}\n\n// struct2ts:types/generated/types.ServerReply\nexport type ServerReply = any;\n\n// struct2ts:types/generated/types.TXIndex\nexport interface TXIndex {\n  TXIndexLock: RWMutex;\n  TXIndexChain: Blockchain | null;\n  CoreChain: Blockchain | null;\n  Params: DeSoParams | null;\n}\n\n// struct2ts:types/generated/types.SyncPrefixProgress\nexport interface SyncPrefixProgress {\n  PrefixSyncPeer: Peer | null;\n  Prefix: number[] | null;\n  LastReceivedKey: number[] | null;\n  Completed: boolean;\n}\n\n// struct2ts:types/generated/types.SyncProgress\nexport interface SyncProgress {\n  PrefixProgress: SyncPrefixProgress[] | null;\n  SnapshotMetadata: SnapshotEpochMetadata | null;\n  Completed: boolean;\n}\n\n// struct2ts:types/generated/types.Server\nexport interface Server {\n  TxIndex: TXIndex | null;\n  SyncPeer: Peer | null;\n  HyperSyncProgress: SyncProgress;\n  DisableNetworking: boolean;\n  ReadOnlyMode: boolean;\n  IgnoreInboundPeerInvMessages: boolean;\n  Notifier: any | null;\n}\n\n// struct2ts:types/generated/types.MiningSupplyIntervalStart\nexport interface MiningSupplyIntervalStart {\n  StartBlockHeight: number;\n  BlockRewardNanos: number;\n}\n\n// struct2ts:types/generated/types.PurchaseSupplyIntervalStart\nexport interface PurchaseSupplyIntervalStart {\n  SatoshisPerUnit: number;\n  SupplyStartNanos: number;\n}\n\n// struct2ts:tNotifierypes/generated/types.SetUSDCentsToDeSoExchangeRateRequest\nexport interface SetUSDCentsToDeSoExchangeRateRequest {\n  USDCentsPerDeSo: number;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.SetUSDCentsToDeSoExchangeRateResponse\nexport interface SetUSDCentsToDeSoExchangeRateResponse {\n  USDCentsPerDeSo: number;\n}\n\n// struct2ts:types/generated/types.GetUSDCentsToDeSoExchangeRateResponse\nexport interface GetUSDCentsToDeSoExchangeRateResponse {\n  USDCentsPerDeSo: number;\n}\n\n// struct2ts:types/generated/types.SetBuyDeSoFeeBasisPointsRequest\nexport interface SetBuyDeSoFeeBasisPointsRequest {\n  BuyDeSoFeeBasisPoints: number;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.SetBuyDeSoFeeBasisPointsResponse\nexport interface SetBuyDeSoFeeBasisPointsResponse {\n  BuyDeSoFeeBasisPoints: number;\n}\n\n// struct2ts:types/generated/types.GetBuyDeSoFeeBasisPointsResponse\nexport interface GetBuyDeSoFeeBasisPointsResponse {\n  BuyDeSoFeeBasisPoints: number;\n}\n\n// struct2ts:types/generated/types.GetDAOCoinLimitOrdersRequest\nexport interface GetDAOCoinLimitOrdersRequest {\n  DAOCoin1CreatorPublicKeyBase58CheckOrUsername: string;\n  DAOCoin2CreatorPublicKeyBase58CheckOrUsername: string;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderEntryResponse\nexport interface DAOCoinLimitOrderEntryResponse {\n  TransactorPublicKeyBase58Check: string;\n  BuyingDAOCoinCreatorPublicKeyBase58Check: string;\n  SellingDAOCoinCreatorPublicKeyBase58Check: string;\n  ExchangeRateCoinsToSellPerCoinToBuy: number;\n  QuantityToFill: number;\n  OperationType: string;\n  OrderID: string;\n  Price: string;\n  Quantity: string;\n}\n\n// struct2ts:types/generated/types.GetDAOCoinLimitOrdersResponse\nexport interface GetDAOCoinLimitOrdersResponse {\n  Orders: DAOCoinLimitOrderEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetTransactorDAOCoinLimitOrdersRequest\nexport interface GetTransactorDAOCoinLimitOrdersRequest {\n  TransactorPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.AdminPinPostRequest\nexport interface AdminPinPostRequest {\n  PostHashHex: string;\n  UnpinPost: boolean;\n}\n\n// struct2ts:types/generated/types.AdminUpdateGlobalFeedRequest\nexport interface AdminUpdateGlobalFeedRequest {\n  PostHashHex: string;\n  RemoveFromGlobalFeed: boolean;\n}\n\n// struct2ts:types/generated/types.AdminRemoveNilPostsRequest\nexport interface AdminRemoveNilPostsRequest {\n  NumPostsToSearch: number;\n}\n\n// struct2ts:types/generated/types.PostEntryResponse\nexport interface PostEntryResponse {\n  PostHashHex: string;\n  PosterPublicKeyBase58Check: string;\n  ParentStakeID: string;\n  Body: string;\n  ImageURLs: string[] | null;\n  VideoURLs: string[] | null;\n  RepostedPostEntryResponse: PostEntryResponse | null;\n  CreatorBasisPoints: number;\n  StakeMultipleBasisPoints: number;\n  TimestampNanos: number;\n  IsHidden: boolean;\n  ConfirmationBlockHeight: number;\n  InMempool: boolean;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  Comments: PostEntryResponse[] | null;\n  LikeCount: number;\n  DiamondCount: number;\n  PostEntryReaderState: PostEntryReaderState;\n  InGlobalFeed: boolean | null;\n  InHotFeed: boolean | null;\n  IsPinned: boolean | null;\n  PostExtraData: Record<string, string>;\n  CommentCount: number;\n  RepostCount: number;\n  QuoteRepostCount: number;\n  ParentPosts: PostEntryResponse[] | null;\n  IsNFT: boolean;\n  NumNFTCopies: number;\n  NumNFTCopiesForSale: number;\n  NumNFTCopiesBurned: number;\n  HasUnlockable: boolean;\n  NFTRoyaltyToCreatorBasisPoints: number;\n  NFTRoyaltyToCoinBasisPoints: number;\n  AdditionalDESORoyaltiesMap: Record<string, number>;\n  AdditionalCoinRoyaltiesMap: Record<string, number>;\n  DiamondsFromSender: number;\n  HotnessScore: number;\n  PostMultiplier: number;\n  RecloutCount: number;\n  QuoteRecloutCount: number;\n  RecloutedPostEntryResponse: PostEntryResponse | null;\n  IsFrozen: boolean;\n}\n\n// struct2ts:types/generated/types.CoinEntryResponse\nexport interface CoinEntryResponse {\n  CreatorBasisPoints: number;\n  DeSoLockedNanos: number;\n  NumberOfHolders: number;\n  CoinsInCirculationNanos: number;\n  CoinWatermarkNanos: number;\n  BitCloutLockedNanos: number;\n}\n\n// struct2ts:types/generated/types.DAOCoinEntryResponse\nexport interface DAOCoinEntryResponse {\n  NumberOfHolders: number;\n  CoinsInCirculationNanos: number[];\n  MintingDisabled: boolean;\n  TransferRestrictionStatus: string;\n}\n\n// struct2ts:types/generated/types.BalanceEntryResponse\nexport interface BalanceEntryResponse {\n  HODLerPublicKeyBase58Check: string;\n  CreatorPublicKeyBase58Check: string;\n  HasPurchased: boolean;\n  BalanceNanos: number;\n  BalanceNanosUint256: string;\n  NetBalanceInMempool: number;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.ProfileEntryResponse\nexport interface ProfileEntryResponse {\n  BestExchangeRateDESOPerDAOCoin: number;\n  PublicKeyBase58Check: string;\n  Username: string;\n  Description: string;\n  IsHidden: boolean;\n  IsReserved: boolean;\n  IsVerified: boolean;\n  Comments: PostEntryResponse[] | null;\n  Posts: PostEntryResponse[] | null;\n  CoinEntry: CoinEntryResponse | null;\n  DAOCoinEntry: DAOCoinEntryResponse | null;\n  CoinPriceDeSoNanos: number;\n  CoinPriceBitCloutNanos: number;\n  DESOBalanceNanos: number;\n  UsersThatHODL: BalanceEntryResponse[] | null;\n  IsFeaturedTutorialWellKnownCreator: boolean;\n  IsFeaturedTutorialUpAndComingCreator: boolean;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.TransactionFee\nexport interface TransactionFee {\n  PublicKeyBase58Check: string;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  AmountNanos: number;\n}\n\n// struct2ts:types/generated/types.AdminSetTransactionFeeForTransactionTypeRequest\nexport interface AdminSetTransactionFeeForTransactionTypeRequest {\n  TransactionType: string;\n  NewTransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.AdminSetTransactionFeeForTransactionTypeResponse\nexport interface AdminSetTransactionFeeForTransactionTypeResponse {\n  TransactionFeeMap: Record<string, TransactionFee>;\n}\n\n// struct2ts:types/generated/types.AdminSetAllTransactionFeesRequest\nexport interface AdminSetAllTransactionFeesRequest {\n  NewTransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.AdminSetAllTransactionFeesResponse\nexport interface AdminSetAllTransactionFeesResponse {\n  TransactionFeeMap: Record<string, TransactionFee>;\n}\n\n// struct2ts:types/generated/types.AdminGetTransactionFeeMapResponse\nexport interface AdminGetTransactionFeeMapResponse {\n  TransactionFeeMap: Record<string, TransactionFee>;\n}\n\n// struct2ts:types/generated/types.AdminAddExemptPublicKey\nexport interface AdminAddExemptPublicKey {\n  PublicKeyBase58Check: string;\n  IsRemoval: boolean;\n}\n\n// struct2ts:types/generated/types.AdminGetExemptPublicKeysResponse\nexport interface AdminGetExemptPublicKeysResponse {\n  ExemptPublicKeyMap: Record<string, ProfileEntryResponse>;\n}\n\n// struct2ts:types/generated/types.AdminResetJumioRequest\nexport interface AdminResetJumioRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioDeSoRequest\nexport interface AdminUpdateJumioDeSoRequest {\n  JWT: string;\n  DeSoNanos: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioDeSoResponse\nexport interface AdminUpdateJumioDeSoResponse {\n  DeSoNanos: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioUSDCentsRequest\nexport interface AdminUpdateJumioUSDCentsRequest {\n  JWT: string;\n  USDCents: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioUSDCentsResponse\nexport interface AdminUpdateJumioUSDCentsResponse {\n  USDCents: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioKickbackUSDCentsRequest\nexport interface AdminUpdateJumioKickbackUSDCentsRequest {\n  JWT: string;\n  USDCents: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioKickbackUSDCentsResponse\nexport interface AdminUpdateJumioKickbackUSDCentsResponse {\n  USDCents: number;\n}\n\n// struct2ts:types/generated/types.AdminSetJumioVerifiedRequest\nexport interface AdminSetJumioVerifiedRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n}\n\n// struct2ts:types/generated/types.AdminJumioCallback\nexport interface AdminJumioCallback {\n  PublicKeyBase58Check: string;\n  Username: string;\n  CountryAlpha3: string;\n}\n\n// struct2ts:types/generated/types.CountryLevelSignUpBonus\nexport interface CountryLevelSignUpBonus {\n  AllowCustomReferralAmount: boolean;\n  ReferralAmountOverrideUSDCents: number;\n  AllowCustomKickbackAmount: boolean;\n  KickbackAmountOverrideUSDCents: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateJumioCountrySignUpBonusRequest\nexport interface AdminUpdateJumioCountrySignUpBonusRequest {\n  CountryCode: string;\n  CountryLevelSignUpBonus: CountryLevelSignUpBonus;\n}\n\n// struct2ts:types/generated/types.Alpha3CountryCodeDetails\nexport interface Alpha3CountryCodeDetails {\n  CountryCode: string;\n  Name: string;\n  Alpha3: string;\n}\n\n// struct2ts:types/generated/types.CountrySignUpBonusResponse\nexport interface CountrySignUpBonusResponse {\n  CountryLevelSignUpBonus: CountryLevelSignUpBonus;\n  CountryCodeDetails: Alpha3CountryCodeDetails;\n}\n\n// struct2ts:types/generated/types.GetAllCountryLevelSignUpBonusResponse\nexport interface GetAllCountryLevelSignUpBonusResponse {\n  SignUpBonusMetadata: Record<string, CountrySignUpBonusResponse>;\n  DefaultSignUpBonusMetadata: CountryLevelSignUpBonus;\n}\n\n// struct2ts:types/generated/types.AdminGetNFTDropRequest\nexport interface AdminGetNFTDropRequest {\n  DropNumber: number;\n}\n\n// struct2ts:types/generated/types.NFTDropEntry\nexport interface NFTDropEntry {\n  IsActive: boolean;\n  DropNumber: number;\n  DropTstampNanos: number;\n  NFTHashes: BlockHash[] | null;\n}\n\n// struct2ts:types/generated/types.AdminGetNFTDropResponse\nexport interface AdminGetNFTDropResponse {\n  DropEntry: NFTDropEntry | null;\n  Posts: PostEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.AdminUpdateNFTDropRequest\nexport interface AdminUpdateNFTDropRequest {\n  DropNumber: number;\n  DropTstampNanos: number;\n  IsActive: boolean;\n  NFTHashHexToAdd: string;\n  NFTHashHexToRemove: string;\n}\n\n// struct2ts:types/generated/types.AdminUpdateNFTDropResponse\nexport interface AdminUpdateNFTDropResponse {\n  DropEntry: NFTDropEntry | null;\n  Posts: PostEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.NodeControlRequest\nexport interface NodeControlRequest {\n  Address: string;\n  MinerPublicKeys: string;\n  OperationType: string;\n  JWT: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.NodeStatusResponse\nexport interface NodeStatusResponse {\n  State: string;\n  LatestHeaderHeight: number;\n  LatestHeaderHash: string;\n  LatestHeaderTstampSecs: number;\n  LatestBlockHeight: number;\n  LatestBlockHash: string;\n  LatestBlockTstampSecs: number;\n  LatestTxIndexHeight: number;\n  HeadersRemaining: number;\n  BlocksRemaining: number;\n}\n\n// struct2ts:types/generated/types.PeerResponse\nexport interface PeerResponse {\n  IP: string;\n  ProtocolPort: number;\n  IsSyncPeer: boolean;\n}\n\n// struct2ts:types/generated/types.NodeControlResponse\nexport interface NodeControlResponse {\n  DeSoStatus: NodeStatusResponse | null;\n  DeSoOutboundPeers: PeerResponse[] | null;\n  DeSoInboundPeers: PeerResponse[] | null;\n  DeSoUnconnectedPeers: PeerResponse[] | null;\n  MinerPublicKeys: string[] | null;\n}\n\n// struct2ts:types/generated/types.AdminGetMempoolStatsResponse\nexport interface AdminGetMempoolStatsResponse {\n  TransactionSummaryStats: Record<string, SummaryStats>;\n}\n\n// struct2ts:types/generated/types.AdminCreateReferralHashRequest\nexport interface AdminCreateReferralHashRequest {\n  UserPublicKeyBase58Check: string;\n  Username: string;\n  ReferrerAmountUSDCents: number;\n  RefereeAmountUSDCents: number;\n  MaxReferrals: number;\n  RequiresJumio: boolean;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.ReferralInfo\nexport interface ReferralInfo {\n  ReferralHashBase58: string;\n  ReferrerPKID: number[];\n  ReferrerAmountUSDCents: number;\n  RefereeAmountUSDCents: number;\n  MaxReferrals: number;\n  RequiresJumio: boolean;\n  NumJumioAttempts: number;\n  NumJumioSuccesses: number;\n  TotalReferrals: number;\n  TotalReferrerDeSoNanos: number;\n  TotalRefereeDeSoNanos: number;\n  DateCreatedTStampNanos: number;\n}\n\n// struct2ts:types/generated/types.ReferralInfoResponse\nexport interface ReferralInfoResponse {\n  IsActive: boolean;\n  Info: ReferralInfo;\n  ReferredUsers: ProfileEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.AdminCreateReferralHashResponse\nexport interface AdminCreateReferralHashResponse {\n  ReferralInfoResponse: ReferralInfoResponse;\n}\n\n// struct2ts:types/generated/types.AdminUpdateReferralHashRequest\nexport interface AdminUpdateReferralHashRequest {\n  ReferralHashBase58: string;\n  ReferrerAmountUSDCents: number;\n  RefereeAmountUSDCents: number;\n  MaxReferrals: number;\n  RequiresJumio: boolean;\n  IsActive: boolean;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AdminUpdateReferralHashResponse\nexport interface AdminUpdateReferralHashResponse {\n  ReferralInfoResponse: ReferralInfoResponse;\n}\n\n// struct2ts:types/generated/types.SimpleReferralInfo\nexport interface SimpleReferralInfo {\n  ReferralHashBase58: string;\n  RefereeAmountUSDCents: number;\n  MaxReferrals: number;\n  TotalReferrals: number;\n}\n\n// struct2ts:types/generated/types.SimpleReferralInfoResponse\nexport interface SimpleReferralInfoResponse {\n  IsActive: boolean;\n  Info: SimpleReferralInfo;\n}\n\n// struct2ts:types/generated/types.AdminGetAllReferralInfoForUserRequest\nexport interface AdminGetAllReferralInfoForUserRequest {\n  UserPublicKeyBase58Check: string;\n  Username: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AdminGetAllReferralInfoForUserResponse\nexport interface AdminGetAllReferralInfoForUserResponse {\n  ReferralInfoResponses: ReferralInfoResponse[] | null;\n}\n\n// struct2ts:types/generated/types.AdminDownloadReferralCSVResponse\nexport interface AdminDownloadReferralCSVResponse {\n  CSVRows: string[] | null;\n}\n\n// struct2ts:types/generated/types.AdminUploadReferralCSVRequest\nexport interface AdminUploadReferralCSVRequest {\n  CSVRows: string[] | null;\n}\n\n// struct2ts:types/generated/types.AdminUploadReferralCSVResponse\nexport interface AdminUploadReferralCSVResponse {\n  LinksCreated: number;\n  LinksUpdated: number;\n}\n\n// struct2ts:types/generated/types.AdminDownloadRefereeCSVResponse\nexport interface AdminDownloadRefereeCSVResponse {\n  CSVRows: string[] | null;\n}\n\n// struct2ts:types/generated/types.GetGlobalParamsResponse\nexport interface GetGlobalParamsResponse {\n  USDCentsPerBitcoin: number;\n  CreateProfileFeeNanos: number;\n  MinimumNetworkFeeNanosPerKB: number;\n  CreateNFTFeeNanos: number;\n  MaxCopiesPerNFT: number;\n}\n\n// struct2ts:types/generated/types.UpdateGlobalParamsRequest\nexport interface UpdateGlobalParamsRequest {\n  UpdaterPublicKeyBase58Check: string;\n  USDCentsPerBitcoin: number;\n  CreateProfileFeeNanos: number;\n  CreateNFTFeeNanos: number;\n  MaxCopiesPerNFT: number;\n  MinimumNetworkFeeNanosPerKB: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  Password: string;\n  Sign: boolean;\n  Validate: boolean;\n  Broadcast: boolean;\n}\n\n// struct2ts:types/generated/types.UpdateGlobalParamsResponse\nexport interface UpdateGlobalParamsResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.SwapIdentityRequest\nexport interface SwapIdentityRequest {\n  UpdaterPublicKeyBase58Check: string;\n  FromUsernameOrPublicKeyBase58Check: string;\n  ToUsernameOrPublicKeyBase58Check: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.SwapIdentityResponse\nexport interface SwapIdentityResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.TestSignTransactionWithDerivedKeyRequest\nexport interface TestSignTransactionWithDerivedKeyRequest {\n  TransactionHex: string;\n  DerivedKeySeedHex: string;\n}\n\n// struct2ts:types/generated/types.TestSignTransactionWithDerivedKeyResponse\nexport interface TestSignTransactionWithDerivedKeyResponse {\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.AdminUpdateTutorialCreatorRequest\nexport interface AdminUpdateTutorialCreatorRequest {\n  PublicKeyBase58Check: string;\n  IsRemoval: boolean;\n  IsWellKnown: boolean;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.AdminResetTutorialStatusRequest\nexport interface AdminResetTutorialStatusRequest {\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.AdminUpdateUserGlobalMetadataRequest\nexport interface AdminUpdateUserGlobalMetadataRequest {\n  UserPublicKeyBase58Check: string;\n  Username: string;\n  IsBlacklistUpdate: boolean;\n  RemoveEverywhere: boolean;\n  RemoveFromLeaderboard: boolean;\n  IsWhitelistUpdate: boolean;\n  WhitelistPosts: boolean;\n  RemovePhoneNumberMetadata: boolean;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AdminGetAllUserGlobalMetadataRequest\nexport interface AdminGetAllUserGlobalMetadataRequest {\n  NumToFetch: number;\n}\n\n// struct2ts:types/generated/types.UserMetadata\nexport interface UserMetadata {\n  PublicKey: number[] | null;\n  RemoveEverywhere: boolean;\n  RemoveFromLeaderboard: boolean;\n  Email: string;\n  EmailVerified: boolean;\n  PhoneNumber: string;\n  PhoneNumberCountryCode: string;\n  MessageReadStateByContact: Record<string, number>;\n  NotificationLastSeenIndex: number;\n  SatoshisBurnedSoFar: number;\n  HasBurnedEnoughSatoshisToCreateProfile: boolean;\n  BlockedPublicKeys: Record<string, string>;\n  WhitelistPosts: boolean;\n  JumioInternalReference: string;\n  JumioFinishedTime: number;\n  JumioVerified: boolean;\n  JumioReturned: boolean;\n  JumioTransactionID: string;\n  JumioDocumentKey: number[] | null;\n  RedoJumio: boolean;\n  JumioStarterDeSoTxnHashHex: string;\n  JumioShouldCompProfileCreation: boolean;\n  MustCompleteTutorial: boolean;\n  IsFeaturedTutorialWellKnownCreator: boolean;\n  IsFeaturedTutorialUpAndComingCreator: boolean;\n  TutorialStatus: string;\n  CreatorPurchasedInTutorialPKID: number[];\n  CreatorCoinsPurchasedInTutorial: number;\n  ReferralHashBase58Check: string;\n  ReferrerDeSoTxnHash: string;\n  UnreadNotifications: number;\n  LatestUnreadNotificationIndex: number;\n}\n\n// struct2ts:types/generated/types.AdminGetAllUserGlobalMetadataResponse\nexport interface AdminGetAllUserGlobalMetadataResponse {\n  PubKeyToUserGlobalMetadata: Record<string, UserMetadata>;\n  PubKeyToUsername: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.AdminGetUserGlobalMetadataRequest\nexport interface AdminGetUserGlobalMetadataRequest {\n  UserPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.AdminGetUserGlobalMetadataResponse\nexport interface AdminGetUserGlobalMetadataResponse {\n  UserMetadata: UserMetadata;\n  UserProfileEntryResponse: ProfileEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.VerifiedUsernameToPKID\nexport interface VerifiedUsernameToPKID {\n  VerifiedUsernameToPKID: Record<string, PKID>;\n}\n\n// struct2ts:types/generated/types.VerificationUsernameAuditLog\nexport interface VerificationUsernameAuditLog {\n  TimestampNanos: number;\n  VerifierUsername: string;\n  VerifierPKID: number[];\n  VerifiedUsername: string;\n  VerifiedPKID: number[];\n  IsRemoval: boolean;\n}\n\n// struct2ts:types/generated/types.FilterAuditLog\nexport interface FilterAuditLog {\n  TimestampNanos: number;\n  Filter: number;\n  UpdaterUsername: string;\n  UpdaterPKID: number[];\n  UpdatedUsername: string;\n  UpdatedPKID: number[];\n  IsRemoval: boolean;\n}\n\n// struct2ts:types/generated/types.AdminGrantVerificationBadgeRequest\nexport interface AdminGrantVerificationBadgeRequest {\n  UsernameToVerify: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AdminGrantVerificationBadgeResponse\nexport interface AdminGrantVerificationBadgeResponse {\n  Message: string;\n}\n\n// struct2ts:types/generated/types.AdminRemoveVerificationBadgeRequest\nexport interface AdminRemoveVerificationBadgeRequest {\n  UsernameForWhomToRemoveVerification: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AdminRemoveVerificationBadgeResponse\nexport interface AdminRemoveVerificationBadgeResponse {\n  Message: string;\n}\n\n// struct2ts:types/generated/types.AdminGetVerifiedUsersResponse\nexport interface AdminGetVerifiedUsersResponse {\n  VerifiedUsers: string[] | null;\n}\n\n// struct2ts:types/generated/types.VerificationUsernameAuditLogResponse\nexport interface VerificationUsernameAuditLogResponse {\n  TimestampNanos: number;\n  VerifierUsername: string;\n  VerifierPublicKeyBase58Check: string;\n  VerifiedUsername: string;\n  VerifiedPublicKeyBase58Check: string;\n  IsRemoval: boolean;\n}\n\n// struct2ts:types/generated/types.AdminGetUsernameVerificationAuditLogsRequest\nexport interface AdminGetUsernameVerificationAuditLogsRequest {\n  Username: string;\n}\n\n// struct2ts:types/generated/types.AdminGetUsernameVerificationAuditLogsResponse\nexport interface AdminGetUsernameVerificationAuditLogsResponse {\n  VerificationAuditLogs: VerificationUsernameAuditLogResponse[] | null;\n}\n\n// struct2ts:types/generated/types.AdminGetUserAdminDataRequest\nexport interface AdminGetUserAdminDataRequest {\n  UserPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.AdminGetUserAdminDataResponse\nexport interface AdminGetUserAdminDataResponse {\n  Username: string;\n  IsVerified: boolean;\n  LastVerifierPublicKey: string;\n  LastVerifyRemoverPublicKey: string;\n  IsWhitelisted: boolean;\n  LastWhitelisterPublicKey: string;\n  LastWhitelistRemoverPublicKey: string;\n  IsGraylisted: boolean;\n  LastGraylisterPublicKey: string;\n  LastGraylistRemoverPublicKey: string;\n  IsBlacklisted: boolean;\n  LastBlacklisterPublicKey: string;\n  LastBlacklistRemoverPublicKey: string;\n  PhoneNumber: string;\n  Email: string;\n  ReferralHashBase58Check: string;\n  JumioStarterDeSoTxnHashBase58Check: string;\n  ReferrerDeSoTxnHashBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetExchangeRateResponse\nexport interface GetExchangeRateResponse {\n  SatoshisPerDeSoExchangeRate: number;\n  USDCentsPerBitcoinExchangeRate: number;\n  NanosPerETHExchangeRate: number;\n  USDCentsPerETHExchangeRate: number;\n  NanosSold: number;\n  USDCentsPerDeSoExchangeRate: number;\n  USDCentsPerDeSoReserveExchangeRate: number;\n  BuyDeSoFeeBasisPoints: number;\n  SatoshisPerBitCloutExchangeRate: number;\n  USDCentsPerBitCloutExchangeRate: number;\n  USDCentsPerBitCloutReserveExchangeRate: number;\n  USDCentsPerDeSoCoinbase: number;\n  USDCentsPerDeSoBlockchainDotCom: number;\n}\n\n// struct2ts:types/generated/types.BlockchainDeSoTickerResponse\nexport interface BlockchainDeSoTickerResponse {\n  symbol: string;\n  price_24h: number;\n  volume_24h: number;\n  last_trade_price: number;\n}\n\n// struct2ts:types/generated/types.CoinbaseDeSoTickerResponse\nexport interface CoinbaseDeSoTickerResponse {\n  data: any;\n}\n\n// struct2ts:types/generated/types.GetAppStateRequest\nexport interface GetAppStateRequest {\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetAppStateResponse\nexport interface GetAppStateResponse {\n  MinSatoshisBurnedForProfileCreation: number;\n  BlockHeight: number;\n  IsTestnet: boolean;\n  HasStarterDeSoSeed: boolean;\n  HasTwilioAPIKey: boolean;\n  CreateProfileFeeNanos: number;\n  CompProfileCreation: boolean;\n  DiamondLevelMap: Record<number, number>;\n  HasWyreIntegration: boolean;\n  HasJumioIntegration: boolean;\n  BuyWithETH: boolean;\n  USDCentsPerDeSoExchangeRate: number;\n  JumioDeSoNanos: number;\n  JumioUSDCents: number;\n  JumioKickbackUSDCents: number;\n  CountrySignUpBonus: CountryLevelSignUpBonus;\n  DefaultFeeRateNanosPerKB: number;\n  TransactionFeeMap: Record<string, TransactionFee>;\n  BuyETHAddress: string;\n  Nodes: Record<number, DeSoNode>;\n  USDCentsPerBitCloutExchangeRate: number;\n  JumioBitCloutNanos: number;\n}\n\n// struct2ts:types/generated/types.BlockchainDotcomResponse\nexport interface BlockchainDotcomResponse {\n  USD: any;\n}\n\n// struct2ts:types/generated/types.GeminiResponse\nexport interface GeminiResponse {\n  last: string;\n}\n\n// struct2ts:types/generated/types.KrakenResponse\nexport interface KrakenResponse {\n  result: any;\n}\n\n// struct2ts:types/generated/types.ETHTx\nexport interface ETHTx {\n  nonce: string;\n  value: string;\n  chainId: string;\n  to: string;\n  r: string;\n  s: string;\n}\n\n// struct2ts:types/generated/types.SubmitETHTxRequest\nexport interface SubmitETHTxRequest {\n  PublicKeyBase58Check: string;\n  Tx: ETHTx;\n  TxBytes: string;\n  ToSign: string[] | null;\n  SignedHashes: string[] | null;\n}\n\n// struct2ts:types/generated/types.SubmitETHTxResponse\nexport interface SubmitETHTxResponse {\n  DESOTxHash: string;\n}\n\n// struct2ts:types/generated/types.ETHTxLog\nexport interface ETHTxLog {\n  PublicKey: number[] | null;\n  DESOTxHash: string;\n}\n\n// struct2ts:types/generated/types.AdminProcessETHTxRequest\nexport interface AdminProcessETHTxRequest {\n  ETHTxHash: string;\n}\n\n// struct2ts:types/generated/types.AdminProcessETHTxResponse\nexport interface AdminProcessETHTxResponse {\n  DESOTxHash: string;\n}\n\n// struct2ts:types/generated/types.InfuraResponse\nexport interface InfuraResponse {\n  id: number;\n  jsonrpc: string;\n  result: any;\n  error: {\n    code: number;\n    message: string;\n  };\n}\n\n// struct2ts:types/generated/types.InfuraTx\nexport interface InfuraTx {\n  blockHash: string | null;\n  blockNumber: string | null;\n  from: string;\n  gas: string;\n  gasPrice: string;\n  hash: string;\n  input: string;\n  nonce: string;\n  to: string | null;\n  transactionIndex: string | null;\n  value: string;\n  v: string;\n  r: string;\n  s: string;\n  maxPriorityFeePerGas: string | null;\n  maxFeePerGas: string | null;\n  chainId: string | null;\n  type: string;\n}\n\n// struct2ts:types/generated/types.QueryETHRPCRequest\nexport interface QueryETHRPCRequest {\n  Method: string;\n  Params: any[];\n  UseNetwork?: string;\n}\n\n// struct2ts:types/generated/types.HeaderResponse\nexport interface HeaderResponse {\n  BlockHashHex: string;\n  Version: number;\n  PrevBlockHashHex: string;\n  TransactionMerkleRootHex: string;\n  TstampSecs: number;\n  Height: number;\n  Nonce: number;\n  ExtraNonce: number;\n}\n\n// struct2ts:types/generated/types.InputResponse\nexport interface InputResponse {\n  TransactionIDBase58Check: string;\n  Index: number;\n}\n\n// struct2ts:types/generated/types.OutputResponse\nexport interface OutputResponse {\n  PublicKeyBase58Check: string;\n  AmountNanos: number;\n}\n\nexport interface DeSoNonce {\n  ExpirationBlockHeight: number;\n  PartialID: number;\n}\n\n// struct2ts:types/generated/types.TransactionResponse\nexport interface TransactionResponse {\n  TransactionIDBase58Check: string;\n  RawTransactionHex: string;\n  RawTxnMetadata: any;\n  Inputs: InputResponse[] | null;\n  Outputs: OutputResponse[] | null;\n  SignatureHex: string;\n  TransactionType: string;\n  BlockHashHex: string;\n  BlockInfo?: {\n    Height: number;\n    TimestampSecs: number;\n  };\n  TransactionMetadata: TransactionMetadata;\n  ExtraData: Record<string, string>;\n  TxnNonce?: DeSoNonce;\n  TxnFeeNanos?: number;\n  TxnVersion?: number;\n}\n\n// struct2ts:types/generated/types.APIBaseResponse\nexport interface APIBaseResponse {\n  Error: string;\n  Header: HeaderResponse | null;\n  Transactions: TransactionResponse[] | null;\n}\n\n// struct2ts:types/generated/types.APIKeyPairRequest\nexport interface APIKeyPairRequest {\n  Mnemonic: string;\n  ExtraText: string;\n  Index: number;\n}\n\n// struct2ts:types/generated/types.APIKeyPairResponse\nexport interface APIKeyPairResponse {\n  Error: string;\n  PublicKeyBase58Check: string;\n  PublicKeyHex: string;\n  PrivateKeyBase58Check: string;\n  PrivateKeyHex: string;\n}\n\n// struct2ts:types/generated/types.APIBalanceRequest\nexport interface APIBalanceRequest {\n  PublicKeyBase58Check: string;\n  Confirmations: number;\n}\n\n// struct2ts:types/generated/types.UTXOEntryResponse\nexport interface UTXOEntryResponse {\n  TransactionIDBase58Check: string;\n  Index: number;\n  AmountNanos: number;\n  PublicKeyBase58Check: string;\n  Confirmations: number;\n  UtxoType: string;\n  BlockHeight: number;\n}\n\n// struct2ts:types/generated/types.APIBalanceResponse\nexport interface APIBalanceResponse {\n  Error: string;\n  ConfirmedBalanceNanos: number;\n  UnconfirmedBalanceNanos: number;\n  UTXOs: UTXOEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.TransactionInfoResponse\nexport interface TransactionInfoResponse {\n  TotalInputNanos: number;\n  SpendAmountNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  FeeRateNanosPerKB: number;\n  SenderPublicKeyBase58Check: string;\n  RecipientPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.APITransferDeSoRequest\nexport interface APITransferDeSoRequest {\n  SenderPrivateKeyBase58Check: string;\n  RecipientPublicKeyBase58Check: string;\n  AmountNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  DryRun: boolean;\n}\n\n// struct2ts:types/generated/types.APITransferDeSoResponse\nexport interface APITransferDeSoResponse {\n  Error: string;\n  Transaction: TransactionResponse | null;\n  TransactionInfo: TransactionInfoResponse | null;\n}\n\n// struct2ts:types/generated/types.APITransactionInfoRequest\nexport interface APITransactionInfoRequest {\n  IsMempool: boolean;\n  TransactionIDBase58Check: string;\n  PublicKeyBase58Check: string;\n  IDsOnly: boolean;\n  LastTransactionIDBase58Check: string;\n  LastPublicKeyTransactionIndex: number;\n  Limit: number;\n}\n\n// struct2ts:types/generated/types.APITransactionInfoResponse\nexport interface APITransactionInfoResponse {\n  Error: string;\n  Transactions: TransactionResponse[] | null;\n  LastTransactionIDBase58Check: string;\n  LastPublicKeyTransactionIndex: number;\n  BalanceNanos: number;\n}\n\n// struct2ts:types/generated/types.APINodeInfoResponse\nexport interface APINodeInfoResponse {\n  Error: string;\n}\n\n// struct2ts:types/generated/types.APIBlockRequest\nexport interface APIBlockRequest {\n  Height: number;\n  HashHex: string;\n  FullBlock: boolean;\n}\n\n// struct2ts:types/generated/types.APIBlockResponse\nexport interface APIBlockResponse {\n  Error: string;\n  Header: HeaderResponse | null;\n  Transactions: TransactionResponse[] | null;\n}\n\n// struct2ts:types/generated/types.ExtraDataEncoding\nexport interface ExtraDataEncoding {\n  Decode: ExtraDataDecoderFunc;\n  Encode: ExtraDataEncoderFunc;\n}\n\n// struct2ts:types/generated/types.GlobalState\nexport interface GlobalState {\n  GlobalStateRemoteNode: string;\n  GlobalStateRemoteSecret: string;\n  GlobalStateDB: DB | null;\n}\n\n// struct2ts:types/generated/types.HotFeedApprovedPostOp\nexport interface HotFeedApprovedPostOp {\n  IsRemoval: boolean;\n  Multiplier: number;\n}\n\n// struct2ts:types/generated/types.HotFeedPKIDMultiplierOp\nexport interface HotFeedPKIDMultiplierOp {\n  InteractionMultiplier: number;\n  PostsMultiplier: number;\n}\n\n// struct2ts:types/generated/types.PhoneNumberMetadata\nexport interface PhoneNumberMetadata {\n  PublicKey: number[] | null;\n  PhoneNumber: string;\n  PhoneNumberCountryCode: string;\n  ShouldCompProfileCreation: boolean;\n  PublicKeyDeleted: boolean;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderWebhookPayload\nexport interface WyreWalletOrderWebhookPayload {\n  referenceId: string;\n  accountId: string;\n  orderId: string;\n  orderStatus: string;\n  transferId: string;\n  failedReason: string;\n}\n\n// struct2ts:types/generated/types.WyreTrackOrderResponse\nexport interface WyreTrackOrderResponse {\n  transferId: string;\n  feeCurrency: string;\n  fee: number;\n  fees: any;\n  sourceCurrency: string;\n  destCurrency: string;\n  sourceAmount: number;\n  destAmount: number;\n  destSrn: string;\n  from: string;\n  to: any;\n  rate: number;\n  customId: any;\n  status: any;\n  blockchainNetworkTx: any;\n  message: any;\n  transferHistoryEntryType: string;\n  successTimeline: [] | null;\n  failedTimeline: any;\n  failureReason: any;\n  reversalReason: any;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderMetadata\nexport interface WyreWalletOrderMetadata {\n  LatestWyreWalletOrderWebhookPayload: WyreWalletOrderWebhookPayload;\n  LatestWyreTrackWalletOrderResponse: WyreTrackOrderResponse | null;\n  DeSoPurchasedNanos: number;\n  BasicTransferTxnBlockHash: number[];\n}\n\n// struct2ts:types/generated/types.PutRemoteRequest\nexport interface PutRemoteRequest {\n  Key: number[] | null;\n  Value: number[] | null;\n}\n\n// struct2ts:types/generated/types.GetRemoteRequest\nexport interface GetRemoteRequest {\n  Key: number[] | null;\n}\n\n// struct2ts:types/generated/types.GetRemoteResponse\nexport interface GetRemoteResponse {\n  Value: number[] | null;\n}\n\n// struct2ts:types/generated/types.BatchGetRemoteRequest\nexport interface BatchGetRemoteRequest {\n  KeyList: number[] | null;\n}\n\n// struct2ts:types/generated/types.BatchGetRemoteResponse\nexport interface BatchGetRemoteResponse {\n  ValueList: number[] | null;\n}\n\n// struct2ts:types/generated/types.DeleteRemoteRequest\nexport interface DeleteRemoteRequest {\n  Key: number[] | null;\n}\n\n// struct2ts:types/generated/types.SeekRemoteRequest\nexport interface SeekRemoteRequest {\n  StartPrefix: number[] | null;\n  ValidForPrefix: number[] | null;\n  MaxKeyLen: number;\n  NumToFetch: number;\n  Reverse: boolean;\n  FetchValues: boolean;\n}\n\n// struct2ts:types/generated/types.SeekRemoteResponse\nexport interface SeekRemoteResponse {\n  KeysFound: number[] | null;\n  ValsFound: number[] | null;\n}\n\n// struct2ts:types/generated/types.HotFeedEntry\nexport interface HotFeedEntry {\n  PostHash: number[];\n  PostHashHex: string;\n  HotnessScore: number;\n}\n\n// struct2ts:types/generated/types.HotFeedEntryTimeSortable\nexport interface HotFeedEntryTimeSortable {\n  PostHash: number[];\n  PostHashHex: string;\n  HotnessScore: number;\n  PostBlockAge: number;\n}\n\n// struct2ts:types/generated/types.HotFeedInteractionKey\nexport interface HotFeedInteractionKey {\n  InteractionPKID: number[];\n  InteractionPostHash: number[];\n}\n\n// struct2ts:types/generated/types.HotFeedPKIDMultiplier\nexport interface HotFeedPKIDMultiplier {\n  InteractionMultiplier: number;\n  PostsMultiplier: number;\n}\n\n// struct2ts:types/generated/types.HotnessPostInfo\nexport interface HotnessPostInfo {\n  PostBlockAge: number;\n  HotnessScore: number;\n}\n\n// struct2ts:types/generated/types.HotFeedPageRequest\nexport interface HotFeedPageRequest {\n  ReaderPublicKeyBase58Check: string;\n  SeenPosts: string[] | null;\n  ResponseLimit: number;\n  Tag: string;\n  SortByNew: boolean;\n}\n\n// struct2ts:types/generated/types.HotFeedPageResponse\nexport interface HotFeedPageResponse {\n  HotFeedPage: PostEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.AdminUpdateHotFeedAlgorithmRequest\nexport interface AdminUpdateHotFeedAlgorithmRequest {\n  InteractionCap: number;\n  InteractionCapTag: number;\n  TimeDecayBlocks: number;\n  TimeDecayBlocksTag: number;\n  TxnTypeMultiplierMap: Record<number, number>;\n}\n\n// struct2ts:types/generated/types.AdminGetHotFeedAlgorithmResponse\nexport interface AdminGetHotFeedAlgorithmResponse {\n  InteractionCap: number;\n  InteractionCapTag: number;\n  TimeDecayBlocks: number;\n  TimeDecayBlocksTag: number;\n  TxnTypeMultiplierMap: Record<number, number>;\n}\n\n// struct2ts:types/generated/types.AdminUpdateHotFeedPostMultiplierRequest\nexport interface AdminUpdateHotFeedPostMultiplierRequest {\n  PostHashHex: string;\n  Multiplier: number;\n}\n\n// struct2ts:types/generated/types.AdminUpdateHotFeedUserMultiplierRequest\nexport interface AdminUpdateHotFeedUserMultiplierRequest {\n  Username: string;\n  InteractionMultiplier: number;\n  PostsMultiplier: number;\n}\n\n// struct2ts:types/generated/types.AdminGetHotFeedUserMultiplierRequest\nexport interface AdminGetHotFeedUserMultiplierRequest {\n  Username: string;\n}\n\n// struct2ts:types/generated/types.AdminGetHotFeedUserMultiplierResponse\nexport interface AdminGetHotFeedUserMultiplierResponse {\n  InteractionMultiplier: number;\n  PostsMultiplier: number;\n}\n\n// struct2ts:types/generated/types.UploadImageResponse\nexport interface UploadImageResponse {\n  ImageURL: string;\n}\n\n// struct2ts:types/generated/types.GetFullTikTokURLRequest\nexport interface GetFullTikTokURLRequest {\n  TikTokShortVideoID: string;\n}\n\n// struct2ts:types/generated/types.GetFullTikTokURLResponse\nexport interface GetFullTikTokURLResponse {\n  FullTikTokURL: string;\n}\n\n// struct2ts:types/generated/types.CFVideoDetailsResponse\nexport interface CFVideoDetailsResponse {\n  result: Record<string, any>;\n  success: boolean;\n  errors: any;\n  messages: any;\n}\n\nexport interface GetVideoDimensionsResponse {\n  Height: number;\n  Width: number;\n}\n\nexport interface EnableVideoDownloadResponse {\n  Default: Record<string, any>;\n}\n\n// struct2ts:types/generated/types.GetMessagesStatelessRequest\nexport interface GetMessagesStatelessRequest {\n  PublicKeyBase58Check: string;\n  FetchAfterPublicKeyBase58Check: string;\n  NumToFetch: number;\n  HoldersOnly: boolean;\n  HoldingsOnly: boolean;\n  FollowersOnly: boolean;\n  FollowingOnly: boolean;\n  SortAlgorithm: string;\n}\n\n// struct2ts:types/generated/types.MessageEntryResponse\nexport interface MessageEntryResponse {\n  SenderPublicKeyBase58Check: string;\n  RecipientPublicKeyBase58Check: string;\n  EncryptedText: string;\n  TstampNanos: number;\n  IsSender: boolean;\n  V2: boolean;\n  Version: number;\n  SenderMessagingPublicKey: string;\n  SenderMessagingGroupKeyName: string;\n  RecipientMessagingPublicKey: string;\n  RecipientMessagingGroupKeyName: string;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.MessageContactResponse\nexport interface MessageContactResponse {\n  PublicKeyBase58Check: string;\n  Messages: MessageEntryResponse[] | null;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  NumMessagesRead: number;\n}\n\n// struct2ts:types/generated/types.MessagingGroupMemberResponse\nexport interface MessagingGroupMemberResponse {\n  GroupMemberPublicKeyBase58Check: string;\n  GroupMemberKeyName: string;\n  EncryptedKey: string;\n}\n\n// struct2ts:types/generated/types.MessagingGroupEntryResponse\nexport interface MessagingGroupEntryResponse {\n  GroupOwnerPublicKeyBase58Check: string;\n  MessagingPublicKeyBase58Check: string;\n  MessagingGroupKeyName: string;\n  MessagingGroupMembers: MessagingGroupMemberResponse[] | null;\n  EncryptedKey: string;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.GetMessagesResponse\nexport interface GetMessagesResponse {\n  PublicKeyToProfileEntry: Record<string, ProfileEntryResponse>;\n  OrderedContactsWithMessages: MessageContactResponse[] | null;\n  UnreadStateByContact: Record<string, boolean>;\n  NumberOfUnreadThreads: number;\n  MessagingGroups: MessagingGroupEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.SendMessageStatelessRequest\nexport interface SendMessageStatelessRequest {\n  SenderPublicKeyBase58Check: string;\n  RecipientPublicKeyBase58Check: string;\n  MessageText: string;\n  EncryptedMessageText: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  SenderMessagingGroupKeyName: string;\n  RecipientMessagingGroupKeyName: string;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.SendMessageStatelessResponse\nexport interface SendMessageStatelessResponse {\n  TstampNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.MarkContactMessagesReadRequest\nexport interface MarkContactMessagesReadRequest {\n  JWT: string;\n  UserPublicKeyBase58Check: string;\n  ContactPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.MarkAllMessagesReadRequest\nexport interface MarkAllMessagesReadRequest {\n  JWT: string;\n  UserPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.RegisterMessagingGroupKeyRequest\nexport interface RegisterMessagingGroupKeyRequest {\n  OwnerPublicKeyBase58Check: string;\n  MessagingPublicKeyBase58Check: string;\n  MessagingGroupKeyName: string;\n  MessagingKeySignatureHex: string;\n  ExtraData: Record<string, string>;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.RegisterMessagingGroupKeyResponse\nexport interface RegisterMessagingGroupKeyResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.GetAllMessagingGroupKeysRequest\nexport interface GetAllMessagingGroupKeysRequest {\n  OwnerPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetAllMessagingGroupKeysResponse\nexport interface GetAllMessagingGroupKeysResponse {\n  MessagingGroupEntries: MessagingGroupEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.CheckPartyMessagingKeysRequest\nexport interface CheckPartyMessagingKeysRequest {\n  SenderPublicKeyBase58Check: string;\n  SenderMessagingKeyName: string;\n  RecipientPublicKeyBase58Check: string;\n  RecipientMessagingKeyName: string;\n}\n\n// struct2ts:types/generated/types.CheckPartyMessagingKeysResponse\nexport interface CheckPartyMessagingKeysResponse {\n  SenderMessagingPublicKeyBase58Check: string;\n  SenderMessagingKeyName: string;\n  IsSenderMessagingKey: boolean;\n  RecipientMessagingPublicKeyBase58Check: string;\n  RecipientMessagingKeyName: string;\n  IsRecipientMessagingKey: boolean;\n}\n\n// struct2ts:types/generated/types.GetBlockTemplateRequest\nexport interface GetBlockTemplateRequest {\n  PublicKeyBase58Check: string;\n  NumHeaders: number;\n  HeaderVersion: number;\n}\n\n// struct2ts:types/generated/types.GetBlockTemplateResponse\nexport interface GetBlockTemplateResponse {\n  Headers: number[] | null;\n  ExtraNonces: number[] | null;\n  BlockID: string;\n  DifficultyTargetHex: string;\n  LatestBlockTemplateStats: BlockTemplateStats;\n}\n\n// struct2ts:types/generated/types.SubmitBlockRequest\nexport interface SubmitBlockRequest {\n  PublicKeyBase58Check: string;\n  Header: string[] | null;\n  ExtraNonce: number;\n  BlockID: string;\n}\n\n// struct2ts:types/generated/types.SubmitBlockResponse\nexport interface SubmitBlockResponse {\n  IsMainChain: boolean;\n  IsOrphan: boolean;\n}\n\n// struct2ts:types/generated/types.NFTEntryResponse\nexport interface NFTEntryResponse {\n  OwnerPublicKeyBase58Check: string;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  PostEntryResponse: PostEntryResponse | null;\n  SerialNumber: number;\n  IsForSale: boolean;\n  IsPending: boolean;\n  IsBuyNow: boolean;\n  BuyNowPriceNanos: number;\n  MinBidAmountNanos: number;\n  LastAcceptedBidAmountNanos: number;\n  HighestBidAmountNanos: number;\n  LowestBidAmountNanos: number;\n  LastOwnerPublicKeyBase58Check: string | null;\n  EncryptedUnlockableText: string | null;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.NFTCollectionResponse\nexport interface NFTCollectionResponse {\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  PostEntryResponse: PostEntryResponse | null;\n  HighestBidAmountNanos: number;\n  LowestBidAmountNanos: number;\n  HighestBuyNowPriceNanos: number | null;\n  LowestBuyNowPriceNanos: number | null;\n  NumCopiesForSale: number;\n  NumCopiesBuyNow: number;\n  AvailableSerialNumbers: number[] | null;\n}\n\n// struct2ts:types/generated/types.NFTBidEntryResponse\nexport interface NFTBidEntryResponse {\n  PublicKeyBase58Check: string;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  PostHashHex: string | null;\n  PostEntryResponse: PostEntryResponse | null;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  HighestBidAmountNanos: number | null;\n  LowestBidAmountNanos: number | null;\n  AcceptedBlockHeight: number | null;\n  BidderBalanceNanos: number;\n}\n\n// struct2ts:types/generated/types.CreateNFTRequest\nexport interface CreateNFTRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  NumCopies: number;\n  NFTRoyaltyToCreatorBasisPoints: number;\n  NFTRoyaltyToCoinBasisPoints: number;\n  HasUnlockable: boolean;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n  IsBuyNow: boolean;\n  BuyNowPriceNanos: number;\n  AdditionalDESORoyaltiesMap: Record<string, number>;\n  AdditionalCoinRoyaltiesMap: Record<string, number>;\n  ExtraData: Record<string, string>;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.CreateNFTResponse\nexport interface CreateNFTResponse {\n  NFTPostHashHex: string;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.UpdateNFTRequest\nexport interface UpdateNFTRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  IsForSale: boolean;\n  MinBidAmountNanos: number;\n  IsBuyNow: boolean;\n  BuyNowPriceNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.UpdateNFTResponse\nexport interface UpdateNFTResponse {\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.CreateNFTBidRequest\nexport interface CreateNFTBidRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.CreateNFTBidResponse\nexport interface CreateNFTBidResponse {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.AcceptNFTBidRequest\nexport interface AcceptNFTBidRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidderPublicKeyBase58Check: string;\n  BidAmountNanos: number;\n  EncryptedUnlockableText: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.AcceptNFTBidResponse\nexport interface AcceptNFTBidResponse {\n  BidderPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  BidAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.GetNFTShowcaseRequest\nexport interface GetNFTShowcaseRequest {\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetNFTShowcaseResponse\nexport interface GetNFTShowcaseResponse {\n  NFTCollections: NFTCollectionResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetNextNFTShowcaseResponse\nexport interface GetNextNFTShowcaseResponse {\n  NextNFTShowcaseTstamp: number;\n}\n\n// struct2ts:types/generated/types.GetNFTsForUserRequest\nexport interface GetNFTsForUserRequest {\n  UserPublicKeyBase58Check: string;\n  ReaderPublicKeyBase58Check: string;\n  IsForSale: boolean | null;\n  IsPending: boolean | null;\n}\n\n// struct2ts:types/generated/types.NFTEntryAndPostEntryResponse\nexport interface NFTEntryAndPostEntryResponse {\n  PostEntryResponse: PostEntryResponse | null;\n  NFTEntryResponses: NFTEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetNFTsForUserResponse\nexport interface GetNFTsForUserResponse {\n  NFTsMap: Record<string, NFTEntryAndPostEntryResponse>;\n}\n\n// struct2ts:types/generated/types.GetNFTBidsForUserRequest\nexport interface GetNFTBidsForUserRequest {\n  UserPublicKeyBase58Check: string;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetNFTBidsForUserResponse\nexport interface GetNFTBidsForUserResponse {\n  NFTBidEntries: NFTBidEntryResponse[] | null;\n  PublicKeyBase58CheckToProfileEntryResponse: Record<\n    string,\n    ProfileEntryResponse\n  >;\n  PostHashHexToPostEntryResponse: Record<string, PostEntryResponse>;\n}\n\n// struct2ts:types/generated/types.GetNFTBidsForNFTPostRequest\nexport interface GetNFTBidsForNFTPostRequest {\n  ReaderPublicKeyBase58Check: string;\n  PostHashHex: string;\n}\n\n// struct2ts:types/generated/types.GetNFTBidsForNFTPostResponse\nexport interface GetNFTBidsForNFTPostResponse {\n  PostEntryResponse: PostEntryResponse | null;\n  NFTEntryResponses: NFTEntryResponse[] | null;\n  BidEntryResponses: NFTBidEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetNFTCollectionSummaryRequest\nexport interface GetNFTCollectionSummaryRequest {\n  PostHashHex: string;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetNFTCollectionSummaryResponse\nexport interface GetNFTCollectionSummaryResponse {\n  NFTCollectionResponse: NFTCollectionResponse | null;\n  SerialNumberToNFTEntryResponse: Record<number, NFTEntryResponse>;\n}\n\n// struct2ts:types/generated/types.GetNFTEntriesForPostHashRequest\nexport interface GetNFTEntriesForPostHashRequest {\n  PostHashHex: string;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetNFTEntriesForPostHashResponse\nexport interface GetNFTEntriesForPostHashResponse {\n  NFTEntryResponses: NFTEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.TransferNFTRequest\nexport interface TransferNFTRequest {\n  SenderPublicKeyBase58Check: string;\n  ReceiverPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  EncryptedUnlockableText: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.TransferNFTResponse\nexport interface TransferNFTResponse {\n  SenderPublicKeyBase58Check: string;\n  ReceiverPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.AcceptNFTTransferRequest\nexport interface AcceptNFTTransferRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.AcceptNFTTransferResponse\nexport interface AcceptNFTTransferResponse {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.BurnNFTRequest\nexport interface BurnNFTRequest {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.BurnNFTResponse\nexport interface BurnNFTResponse {\n  UpdaterPublicKeyBase58Check: string;\n  NFTPostHashHex: string;\n  SerialNumber: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.GetNFTsCreatedByPublicKeyRequest\nexport interface GetNFTsCreatedByPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  ReaderPublicKeyBase58Check: string;\n  LastPostHashHex: string;\n  NumToFetch: number;\n}\n\n// struct2ts:types/generated/types.NFTDetails\nexport interface NFTDetails {\n  NFTEntryResponses: NFTEntryResponse[] | null;\n  NFTCollectionResponse: NFTCollectionResponse | null;\n}\n\n// struct2ts:types/generated/types.GetNFTsCreatedByPublicKeyResponse\nexport interface GetNFTsCreatedByPublicKeyResponse {\n  NFTs: NFTDetails[] | null;\n  LastPostHashHex: string;\n}\n\n// struct2ts:types/generated/types.GetAcceptedBidHistoryResponse\nexport interface GetAcceptedBidHistoryResponse {\n  AcceptedBidHistoryMap: Record<number, NFTBidEntryResponse>;\n}\n\n// struct2ts:types/generated/types.GetPostsStatelessRequest\nexport interface GetPostsStatelessRequest {\n  PostHashHex: string;\n  ReaderPublicKeyBase58Check: string;\n  OrderBy: string;\n  StartTstampSecs: number;\n  PostContent: string;\n  NumToFetch: number;\n  FetchSubcomments: boolean;\n  GetPostsForFollowFeed: boolean;\n  GetPostsForGlobalWhitelist: boolean;\n  GetPostsByDESO: boolean;\n  GetPostsByClout: boolean;\n  MediaRequired: boolean;\n  PostsByDESOMinutesLookback: number;\n  AddGlobalFeedBool: boolean;\n  OnlyNFTs: boolean;\n  OnlyPosts: boolean;\n}\n\n// struct2ts:types/generated/types.GetPostsStatelessResponse\nexport interface GetPostsStatelessResponse {\n  PostsFound: PostEntryResponse[] | null;\n}\n\nexport interface GetPostsHashHexListRequest {\n  PostsHashHexList: string[];\n  ReaderPublicKeyBase58Check: string;\n  OrderBy: string;\n  OnlyNFTs: boolean;\n  OnlyPosts: boolean;\n}\n\nexport interface SkippedPostEntryResponse {\n  PostHashHex: string;\n  Error: string;\n}\n\nexport interface GetPostsHashHexListResponse {\n  PostsFound: PostEntryResponse[];\n  PostsSkipped: SkippedPostEntryResponse[];\n}\n\n// struct2ts:types/generated/types.GetSinglePostRequest\nexport interface GetSinglePostRequest {\n  PostHashHex: string;\n  FetchParents: boolean;\n  CommentOffset: number;\n  CommentLimit: number;\n  ReaderPublicKeyBase58Check: string;\n  ThreadLevelLimit: number;\n  ThreadLeafLimit: number;\n  LoadAuthorThread: boolean;\n  AddGlobalFeedBool: boolean;\n}\n\n// struct2ts:types/generated/types.GetSinglePostResponse\nexport interface GetSinglePostResponse {\n  PostFound: PostEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.CommentsPostEntryResponse\nexport interface CommentsPostEntryResponse {\n  PostEntryResponse: PostEntryResponse | null;\n  PosterPublicKeyBytes: number[] | null;\n}\n\n// struct2ts:types/generated/types.GetPostsForPublicKeyRequest\nexport interface GetPostsForPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  ReaderPublicKeyBase58Check: string;\n  LastPostHashHex: string;\n  NumToFetch: number;\n  MediaRequired: boolean;\n  OnlyNFTs: boolean;\n  OnlyPosts: boolean;\n}\n\n// struct2ts:types/generated/types.GetPostsForPublicKeyResponse\nexport interface GetPostsForPublicKeyResponse {\n  Posts: PostEntryResponse[] | null;\n  LastPostHashHex: string;\n}\n\n// struct2ts:types/generated/types.GetPostsDiamondedBySenderForReceiverRequest\nexport interface GetPostsDiamondedBySenderForReceiverRequest {\n  ReceiverPublicKeyBase58Check: string;\n  ReceiverUsername: string;\n  SenderPublicKeyBase58Check: string;\n  SenderUsername: string;\n  ReaderPublicKeyBase58Check: string;\n  StartPostHashHex: string;\n  NumToFetch: number;\n}\n\n// struct2ts:types/generated/types.GetPostsDiamondedBySenderForReceiverResponse\nexport interface GetPostsDiamondedBySenderForReceiverResponse {\n  DiamondedPosts: PostEntryResponse[] | null;\n  TotalDiamondsGiven: number;\n  ReceiverProfileEntryResponse: ProfileEntryResponse | null;\n  SenderProfileEntryResponse: ProfileEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.GetLikesForPostRequest\nexport interface GetLikesForPostRequest {\n  PostHashHex: string;\n  Offset: number;\n  Limit: number;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetLikesForPostResponse\nexport interface GetLikesForPostResponse {\n  Likers: ProfileEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetDiamondsForPostRequest\nexport interface GetDiamondsForPostRequest {\n  PostHashHex: string;\n  Offset: number;\n  Limit: number;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.DiamondSenderResponse\nexport interface DiamondSenderResponse {\n  DiamondSenderProfile: ProfileEntryResponse | null;\n  DiamondLevel: number;\n}\n\n// struct2ts:types/generated/types.GetDiamondsForPostResponse\nexport interface GetDiamondsForPostResponse {\n  DiamondSenders: DiamondSenderResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetRepostsForPostRequest\nexport interface GetRepostsForPostRequest {\n  PostHashHex: string;\n  Offset: number;\n  Limit: number;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetRepostsForPostResponse\nexport interface GetRepostsForPostResponse {\n  Reposters: ProfileEntryResponse[] | null;\n  Reclouters: ProfileEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetQuoteRepostsForPostRequest\nexport interface GetQuoteRepostsForPostRequest {\n  PostHashHex: string;\n  Offset: number;\n  Limit: number;\n  ReaderPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetQuoteRepostsForPostResponse\nexport interface GetQuoteRepostsForPostResponse {\n  QuoteReposts: PostEntryResponse[] | null;\n  QuoteReclouts: PostEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetReferralInfoForUserRequest\nexport interface GetReferralInfoForUserRequest {\n  PublicKeyBase58Check: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.GetReferralInfoForUserResponse\nexport interface GetReferralInfoForUserResponse {\n  ReferralInfoResponses: ReferralInfoResponse[] | null;\n}\n\n// struct2ts:types/generated/types.GetReferralInfoForReferralHashRequest\nexport interface GetReferralInfoForReferralHashRequest {\n  ReferralHash: string;\n}\n\n// struct2ts:types/generated/types.GetReferralInfoForReferralHashResponse\nexport interface GetReferralInfoForReferralHashResponse {\n  ReferralInfoResponse: SimpleReferralInfoResponse | null;\n  CountrySignUpBonus: CountryLevelSignUpBonus;\n}\n\n// struct2ts:honnef.co/go/tools/config.Config\nexport interface Config {\n  Checks: string[] | null;\n  Initialisms: string[] | null;\n  DotImportWhitelist: string[] | null;\n  HTTPStatusCodeWhitelist: string[] | null;\n}\n\n// struct2ts:net/http.Client\n\n// struct2ts:github.com/kevinburke/twilio-go.ConferenceService\nexport type ConferenceService = any;\n\n// struct2ts:github.com/kevinburke/twilio-go.NumberPurchasingService\nexport type NumberPurchasingService = any;\n\n// struct2ts:github.com/kevinburke/twilio-go.IncomingNumberService\nexport interface IncomingNumberService {\n  Local: NumberPurchasingService | null;\n  TollFree: NumberPurchasingService | null;\n}\n\n// struct2ts:github.com/kevinburke/twilio-go.VoicePriceService\n\n// struct2ts:github.com/kevinburke/twilio-go.MessagingPriceService\n\n// struct2ts:github.com/kevinburke/twilio-go.CountryPhoneNumberPriceService\n\n// struct2ts:github.com/kevinburke/twilio-go.Client\n\n// struct2ts:types/generated/types.LastTradePriceHistoryItem\nexport interface LastTradePriceHistoryItem {\n  LastTradePrice: number;\n  Timestamp: number;\n}\n\n// struct2ts:types/generated/types.RichListEntryResponse\nexport interface RichListEntryResponse {\n  PublicKeyBase58Check: string;\n  BalanceNanos: number;\n  BalanceDESO: number;\n  Percentage: number;\n  Value: number;\n}\n\n// struct2ts:types/generated/types.Route\nexport interface Route {\n  Name: string;\n  Method: string[] | null;\n  Pattern: string;\n  HandlerFunc: any;\n  AccessLevel: number;\n}\n\n// struct2ts:types/generated/types.AdminRequest\nexport interface AdminRequest {\n  JWT: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.AmplitudeEvent\nexport interface AmplitudeEvent {\n  user_id: string;\n  event_type: string;\n  event_properties: Record<string, any>;\n}\n\n// struct2ts:types/generated/types.AmplitudeUploadRequestBody\nexport interface AmplitudeUploadRequestBody {\n  api_key: string;\n  events: AmplitudeEvent[] | null;\n}\n\n// struct2ts:types/generated/types.TransactionInfo\nexport interface TransactionInfo {\n  TotalInputNanos: number;\n  SpendAmountNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  TransactionIDBase58Check: string;\n  RecipientPublicKeys: string[] | null;\n  RecipientAmountsNanos: number[] | null;\n  TransactionHex: string;\n  TimeAdded: number;\n}\n\n// struct2ts:types/generated/types.User\nexport interface User {\n  PublicKeyBase58Check: string;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n  Utxos: UTXOEntryResponse[] | null;\n  BalanceNanos: number;\n  UnminedBalanceNanos: number;\n  PublicKeysBase58CheckFollowedByUser: string[] | null;\n  UsersYouHODL: BalanceEntryResponse[] | null;\n  UsersWhoHODLYouCount: number;\n  HasPhoneNumber: boolean;\n  CanCreateProfile: boolean;\n  // https://github.com/deso-protocol/backend/blob/983c803c2f3f441fb49e13c73cc27a26ecf52375/routes/global_state.go#L333\n  BlockedPubKeys: Record<string, {}>;\n  HasEmail: boolean;\n  EmailVerified: boolean;\n  JumioStartTime: number;\n  JumioFinishedTime: number;\n  JumioVerified: boolean;\n  JumioReturned: boolean;\n  IsAdmin: boolean;\n  IsSuperAdmin: boolean;\n  IsBlacklisted: boolean;\n  IsGraylisted: boolean;\n  TutorialStatus: string;\n  CreatorPurchasedInTutorialUsername: string | null;\n  CreatorCoinsPurchasedInTutorial: number;\n  MustCompleteTutorial: boolean;\n}\n\n// struct2ts:types/generated/types.RichListEntry\nexport interface RichListEntry {\n  KeyBytes: number[] | null;\n  BalanceNanos: number;\n}\n\n// struct2ts:types/generated/types.GetTxnRequest\nexport interface GetTxnRequest {\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.GetTxnResponse\nexport interface GetTxnResponse {\n  TxnFound: boolean;\n}\n\n// struct2ts:types/generated/types.SubmitTransactionRequest\nexport interface SubmitTransactionRequest {\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.SubmitTransactionResponse\nexport interface SubmitTransactionResponse {\n  Transaction: MsgDeSoTxn;\n  TxnHashHex: string;\n  PostEntryResponse: PostEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.UpdateProfileRequest\nexport interface UpdateProfileRequest {\n  UpdaterPublicKeyBase58Check: string;\n  ProfilePublicKeyBase58Check: string;\n  NewUsername: string;\n  NewDescription: string;\n  NewProfilePic: string;\n  NewCreatorBasisPoints: number;\n  NewStakeMultipleBasisPoints: number;\n  IsHidden: boolean;\n  ExtraData: Record<string, string>;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.UpdateProfileResponse\nexport interface UpdateProfileResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n  CompProfileCreationTxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.ExchangeBitcoinRequest\nexport interface ExchangeBitcoinRequest {\n  PublicKeyBase58Check: string;\n  BurnAmountSatoshis: number;\n  FeeRateSatoshisPerKB: number;\n  LatestBitcionAPIResponse: BlockCypherAPIFullAddressResponse;\n  BTCDepositAddress: string;\n  Broadcast: boolean;\n  SignedHashes: string[] | null;\n}\n\n// struct2ts:types/generated/types.ExchangeBitcoinResponse\nexport interface ExchangeBitcoinResponse {\n  TotalInputSatoshis: number;\n  BurnAmountSatoshis: number;\n  ChangeAmountSatoshis: number;\n  FeeSatoshis: number;\n  BitcoinTransaction: MsgTx | null;\n  SerializedTxnHex: string;\n  TxnHashHex: string;\n  DeSoTxnHashHex: string;\n  UnsignedHashes: string[] | null;\n}\n\n// struct2ts:types/generated/types.SendDeSoRequest\nexport interface SendDeSoRequest {\n  SenderPublicKeyBase58Check: string;\n  RecipientPublicKeyOrUsername: string;\n  AmountNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.SendDeSoResponse\nexport interface SendDeSoResponse {\n  TotalInputNanos: number;\n  SpendAmountNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  TransactionIDBase58Check: string;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.CreateLikeStatelessRequest\nexport interface CreateLikeStatelessRequest {\n  ReaderPublicKeyBase58Check: string;\n  LikedPostHashHex: string;\n  IsUnlike: boolean;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.CreateLikeStatelessResponse\nexport interface CreateLikeStatelessResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.SubmitPostRequest\nexport interface SubmitPostRequest {\n  UpdaterPublicKeyBase58Check: string;\n  PostHashHexToModify: string;\n  ParentStakeID: string;\n  BodyObj: DeSoBodySchema;\n  RepostedPostHashHex: string;\n  PostExtraData: Record<string, string>;\n  IsHidden: boolean;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  InTutorial: boolean;\n  IsFrozen: boolean;\n}\n\n// struct2ts:types/generated/types.SubmitPostResponse\nexport interface SubmitPostResponse {\n  TstampNanos: number;\n  PostHashHex: string;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.CreateFollowTxnStatelessRequest\nexport interface CreateFollowTxnStatelessRequest {\n  FollowerPublicKeyBase58Check: string;\n  FollowedPublicKeyBase58Check: string;\n  IsUnfollow: boolean;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.CreateFollowTxnStatelessResponse\nexport interface CreateFollowTxnStatelessResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.BuyOrSellCreatorCoinRequest\nexport interface BuyOrSellCreatorCoinRequest {\n  UpdaterPublicKeyBase58Check: string;\n  CreatorPublicKeyBase58Check: string;\n  OperationType: string;\n  DeSoToSellNanos: number;\n  CreatorCoinToSellNanos: number;\n  DeSoToAddNanos: number;\n  MinDeSoExpectedNanos: number;\n  MinCreatorCoinExpectedNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  InTutorial: boolean;\n  BitCloutToSellNanos: number;\n  BitCloutToAddNanos: number;\n  MinBitCloutExpectedNanos: number;\n}\n\n// struct2ts:types/generated/types.BuyOrSellCreatorCoinResponse\nexport interface BuyOrSellCreatorCoinResponse {\n  ExpectedDeSoReturnedNanos: number;\n  ExpectedCreatorCoinReturnedNanos: number;\n  FounderRewardGeneratedNanos: number;\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.TransferCreatorCoinRequest\nexport interface TransferCreatorCoinRequest {\n  SenderPublicKeyBase58Check: string;\n  CreatorPublicKeyBase58Check: string;\n  ReceiverUsernameOrPublicKeyBase58Check: string;\n  CreatorCoinToTransferNanos: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.TransferCreatorCoinResponse\nexport interface TransferCreatorCoinResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.SendDiamondsRequest\nexport interface SendDiamondsRequest {\n  SenderPublicKeyBase58Check: string;\n  ReceiverPublicKeyBase58Check: string;\n  DiamondPostHashHex: string;\n  DiamondLevel: number;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n  InTutorial: boolean;\n}\n\n// struct2ts:types/generated/types.SendDiamondsResponse\nexport interface SendDiamondsResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.DAOCoinRequest\nexport interface DAOCoinRequest {\n  UpdaterPublicKeyBase58Check: string;\n  ProfilePublicKeyBase58CheckOrUsername: string;\n  OperationType: string;\n  CoinsToMintNanos: string;\n  CoinsToBurnNanos: string;\n  TransferRestrictionStatus:\n    | 'unrestricted'\n    | 'profile_owner_only'\n    | 'dao_members_only'\n    | 'permanently_unrestricted';\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.DAOCoinResponse\nexport interface DAOCoinResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.TransferDAOCoinRequest\nexport interface TransferDAOCoinRequest {\n  SenderPublicKeyBase58Check: string;\n  ProfilePublicKeyBase58CheckOrUsername: string;\n  ReceiverPublicKeyBase58CheckOrUsername: string;\n  DAOCoinToTransferNanos: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\n// struct2ts:types/generated/types.TransferDAOCoinResponse\nexport interface TransferDAOCoinResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n/**\n * @deprecated use DAOCoinOrderResponse\n * will be removed in 3.0.0\n */\nexport interface DAOCoinLimitOrderResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderResponse\nexport interface DAOCoinOrderResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n  SimulatedExecutionResult?: DAOCoinLimitOrderSimulatedExecutionResult;\n}\n\n// struct2ts:types/generated/types.DAOCoinLimitOrderWithCancelOrderIDRequest\nexport interface DAOCoinLimitOrderWithCancelOrderIDRequest {\n  TransactorPublicKeyBase58Check: string;\n  CancelOrderID: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[] | null;\n}\n\nexport interface DAOCoinLimitOrderSimulatedExecutionResult {\n  BuyingCoinQuantityFilled: string;\n  SellingCoinQuantityFilled: string;\n}\n\nexport interface AssociationLimitMapItem {\n  AssociationClass: 'Post' | 'User' | 'Undefined';\n  AssociationType: string;\n  AppScopeType: 'Any' | 'Scoped' | 'Undefined';\n  AppPublicKeyBase58Check: string;\n  AssociationOperation: 'Any' | 'Create' | 'Delete' | 'Undefined';\n  OpCount: number;\n}\n\nexport interface AccessGroupLimitMapItem {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  ScopeType: 'Any' | 'Scoped' | 'Undefined';\n  AccessGroupKeyName: string;\n  OperationType: 'Any' | 'Create' | 'Update' | 'Unknown';\n  OpCount: number;\n}\n\nexport interface AccessGroupMemberLimitMapItem {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  ScopeType: 'Any' | 'Scoped' | 'Undefined';\n  AccessGroupKeyName: string;\n  OperationType: 'Any' | 'Add' | 'Remove' | 'Update' | 'Unknown';\n  OpCount: number;\n}\n\n// struct2ts:types/generated/types.TransactionSpendingLimitResponse\nexport interface TransactionSpendingLimitResponse {\n  GlobalDESOLimit?: number;\n  TransactionCountLimitMap?: Partial<Record<TransactionType, number>>;\n  CreatorCoinOperationLimitMap?: Record<string, Record<string, number>>;\n  DAOCoinOperationLimitMap?: Record<string, Record<string, number>>;\n  NFTOperationLimitMap?: Record<string, Record<number, Record<string, number>>>;\n  DAOCoinLimitOrderLimitMap?: Record<string, Record<string, number>>;\n  AssociationLimitMap?: AssociationLimitMapItem[];\n  AccessGroupLimitMap?: AccessGroupLimitMapItem[];\n  AccessGroupMemberLimitMap?: AccessGroupMemberLimitMapItem[];\n  IsUnlimited?: boolean;\n}\n\n// struct2ts:types/generated/types.AuthorizeDerivedKeyRequest\nexport interface AuthorizeDerivedKeyRequest {\n  OwnerPublicKeyBase58Check: string;\n  DerivedPublicKeyBase58Check: string;\n  ExpirationBlock: number;\n  AccessSignature: string;\n  DeleteKey: boolean;\n  DerivedKeySignature: boolean;\n  ExtraData: Record<string, string>;\n  TransactionSpendingLimitHex: string;\n  Memo: string;\n  AppName: string;\n  TransactionFees: TransactionFee[] | null;\n  MinFeeRateNanosPerKB: number;\n}\n\n// struct2ts:types/generated/types.AuthorizeDerivedKeyResponse\nexport interface AuthorizeDerivedKeyResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.AppendExtraDataRequest\nexport interface AppendExtraDataRequest {\n  TransactionHex: string;\n  ExtraData: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.AppendExtraDataResponse\nexport interface AppendExtraDataResponse {\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.GetTransactionSpendingRequest\nexport interface GetTransactionSpendingRequest {\n  TransactionHex: string;\n}\n\n// struct2ts:types/generated/types.GetTransactionSpendingResponse\nexport interface GetTransactionSpendingResponse {\n  TotalSpendingNanos: number;\n}\n\n// struct2ts:types/generated/types.GetTutorialCreatorsRequest\nexport interface GetTutorialCreatorsRequest {\n  ResponseLimit: number;\n}\n\n// struct2ts:types/generated/types.UpdateTutorialStatusRequest\nexport interface UpdateTutorialStatusRequest {\n  PublicKeyBase58Check: string;\n  TutorialStatus: string;\n  CreatorPurchasedInTutorialPublicKey: string;\n  ClearCreatorCoinPurchasedInTutorial: boolean;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.GetTutorialCreatorResponse\nexport interface GetTutorialCreatorResponse {\n  UpAndComingProfileEntryResponses: ProfileEntryResponse[] | null;\n  WellKnownProfileEntryResponses: ProfileEntryResponse[] | null;\n}\n\n// struct2ts:types/generated/types.StartOrSkipTutorialRequest\nexport interface StartOrSkipTutorialRequest {\n  PublicKeyBase58Check: string;\n  JWT: string;\n  IsSkip: boolean;\n}\n\n// struct2ts:types/generated/types.GetUsersStatelessRequest\nexport interface GetUsersStatelessRequest {\n  PublicKeysBase58Check: string[] | null;\n  SkipForLeaderboard: boolean;\n  IncludeBalance: boolean;\n  GetUnminedBalance: boolean;\n}\n\n// struct2ts:types/generated/types.GetUsersResponse\nexport interface GetUsersResponse {\n  UserList: User[] | null;\n  DefaultFeeRateNanosPerKB: number;\n  ParamUpdaters: Record<string, boolean>;\n}\n\n// struct2ts:types/generated/types.GetUserMetadataRequest\nexport interface GetUserMetadataRequest {\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetUserMetadataResponse\nexport interface GetUserMetadataResponse {\n  HasPhoneNumber: boolean;\n  CanCreateProfile: boolean;\n  BlockedPubKeys: Record<string, any>;\n  HasEmail: boolean;\n  EmailVerified: boolean;\n  JumioFinishedTime: number;\n  JumioVerified: boolean;\n  JumioReturned: boolean;\n}\n\n// struct2ts:types/generated/types.GetProfilesRequest\nexport interface GetProfilesRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  UsernamePrefix: string;\n  Description: string;\n  OrderBy: string;\n  NumToFetch: number;\n  ReaderPublicKeyBase58Check: string;\n  ModerationType: string;\n  FetchUsersThatHODL: boolean;\n  AddGlobalFeedBool: boolean;\n}\n\n// struct2ts:types/generated/types.GetProfilesResponse\nexport interface GetProfilesResponse {\n  ProfilesFound: ProfileEntryResponse[] | null;\n  NextPublicKey: string | null;\n}\n\n// struct2ts:types/generated/types.GetSingleProfileRequest\nexport interface GetSingleProfileRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  NoErrorOnMissing: boolean;\n}\n\n// struct2ts:types/generated/types.GetSingleProfileResponse\nexport interface GetSingleProfileResponse {\n  Profile: ProfileEntryResponse | null;\n  IsBlacklisted: boolean;\n  IsGraylisted: boolean;\n}\n\n// struct2ts:types/generated/types.GetHodlersForPublicKeyRequest\nexport enum HodlersSortType {\n  coin_balance = 'coin_balance', // default\n  wealth = 'wealth',\n}\n\n// struct2ts:types/generated/types.GetHodlersForPublicKeyRequest\nexport interface GetHodlersForPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  LastPublicKeyBase58Check: string;\n  NumToFetch: number;\n  IsDAOCoin: boolean;\n  FetchHodlings: boolean;\n  FetchAll: boolean;\n  SortType: HodlersSortType;\n}\n\n// struct2ts:types/generated/types.GetHodlersForPublicKeyResponse\nexport interface GetHodlersForPublicKeyResponse {\n  Hodlers: BalanceEntryResponse[] | null;\n  LastPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.DiamondSenderSummaryResponse\nexport interface DiamondSenderSummaryResponse {\n  SenderPublicKeyBase58Check: string;\n  ReceiverPublicKeyBase58Check: string;\n  TotalDiamonds: number;\n  HighestDiamondLevel: number;\n  DiamondLevelMap: Record<number, number>;\n  ProfileEntryResponse: ProfileEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.GetDiamondsForPublicKeyRequest\nexport interface GetDiamondsForPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  FetchYouDiamonded: boolean;\n}\n\n// struct2ts:types/generated/types.GetDiamondsForPublicKeyResponse\nexport interface GetDiamondsForPublicKeyResponse {\n  DiamondSenderSummaryResponses: DiamondSenderSummaryResponse[] | null;\n  TotalDiamonds: number;\n}\n\n// struct2ts:types/generated/types.GetFollowsStatelessRequest\nexport interface GetFollowsStatelessRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  GetEntriesFollowingUsername: boolean;\n  LastPublicKeyBase58Check: string;\n  NumToFetch: number;\n}\n\n// struct2ts:types/generated/types.GetFollowsResponse\nexport interface GetFollowsResponse {\n  PublicKeyToProfileEntry: Record<string, ProfileEntryResponse>;\n  NumFollowers: number;\n}\n\n// struct2ts:types/generated/types.GetUserGlobalMetadataRequest\nexport interface GetUserGlobalMetadataRequest {\n  UserPublicKeyBase58Check: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.GetUserGlobalMetadataResponse\nexport interface GetUserGlobalMetadataResponse {\n  Email: string;\n  PhoneNumber: string;\n}\n\n// struct2ts:types/generated/types.UpdateUserGlobalMetadataRequest\nexport interface UpdateUserGlobalMetadataRequest {\n  UserPublicKeyBase58Check: string;\n  JWT: string;\n  Email: string;\n  MessageReadStateUpdatesByContact: Record<string, number>;\n}\n\n// struct2ts:types/generated/types.GetNotificationsCountRequest\nexport interface GetNotificationsCountRequest {\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetNotificationsCountResponse\nexport interface GetNotificationsCountResponse {\n  NotificationsCount: number;\n  LastUnreadNotificationIndex: number;\n  UpdateMetadata: boolean;\n}\n\n// struct2ts:types/generated/types.GetNotificationsRequest\nexport interface GetNotificationsRequest {\n  PublicKeyBase58Check: string;\n  FetchStartIndex: number;\n  NumToFetch: number;\n  FilteredOutNotificationCategories: Record<string, boolean>;\n}\n\n// struct2ts:types/generated/types.TransactionMetadataResponse\nexport interface TransactionMetadataResponse {\n  Metadata: TransactionMetadata;\n  TxnOutputResponses: OutputResponse[] | null;\n  Txn: TransactionResponse | null;\n  Index: number;\n}\n\n// struct2ts:types/generated/types.GetNotificationsResponse\nexport interface GetNotificationsResponse {\n  Notifications: TransactionMetadataResponse[] | null;\n  ProfilesByPublicKey: Record<string, ProfileEntryResponse>;\n  PostsByHash: Record<string, PostEntryResponse>;\n  LastSeenIndex: number;\n}\n\n// struct2ts:types/generated/types.SetNotificationMetadataRequest\nexport interface SetNotificationMetadataRequest {\n  PublicKeyBase58Check: string;\n  LastSeenIndex: number;\n  LastUnreadNotificationIndex: number;\n  UnreadNotifications: number;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.BlockPublicKeyRequest\nexport interface BlockPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  BlockPublicKeyBase58Check: string;\n  Unblock: boolean;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.BlockPublicKeyResponse\nexport interface BlockPublicKeyResponse {\n  BlockedPublicKeys: Record<string, string>;\n}\n\n// struct2ts:types/generated/types.IsFollowingPublicKeyRequest\nexport interface IsFollowingPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  IsFollowingPublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.IsFolllowingPublicKeyResponse\nexport interface IsFolllowingPublicKeyResponse {\n  IsFollowing: boolean;\n}\n\n// struct2ts:types/generated/types.IsHodlingPublicKeyRequest\nexport interface IsHodlingPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  IsHodlingPublicKeyBase58Check: string;\n  IsDAOCoin: boolean;\n}\n\n// struct2ts:types/generated/types.IsHodlingPublicKeyResponse\nexport interface IsHodlingPublicKeyResponse {\n  IsHodling: boolean;\n  BalanceEntry: BalanceEntryResponse | null;\n}\n\n// struct2ts:types/generated/types.GetUserDerivedKeysRequest\nexport interface GetUserDerivedKeysRequest {\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.UserDerivedKey\nexport interface UserDerivedKey {\n  OwnerPublicKeyBase58Check: string;\n  DerivedPublicKeyBase58Check: string;\n  ExpirationBlock: number;\n  IsValid: boolean;\n  ExtraData: Record<string, string>;\n  TransactionSpendingLimit: TransactionSpendingLimitResponse | null;\n  Memo: string;\n}\n\n// struct2ts:types/generated/types.GetUserDerivedKeysResponse\nexport interface GetUserDerivedKeysResponse {\n  DerivedKeys: Record<string, UserDerivedKey>;\n}\n\n// struct2ts:types/generated/types.GetTransactionSpendingLimitHexStringRequest\nexport interface GetTransactionSpendingLimitHexStringRequest {\n  TransactionSpendingLimit: TransactionSpendingLimitResponse;\n}\n\n// struct2ts:types/generated/types.GetTransactionSpendingLimitHexStringResponse\nexport interface GetTransactionSpendingLimitHexStringResponse {\n  HexString: string;\n}\n\n// struct2ts:types/generated/types.DeletePIIRequest\nexport interface DeletePIIRequest {\n  PublicKeyBase58Check: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.SendPhoneNumberVerificationTextRequest\nexport interface SendPhoneNumberVerificationTextRequest {\n  PublicKeyBase58Check: string;\n  PhoneNumber: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.SubmitPhoneNumberVerificationCodeRequest\nexport interface SubmitPhoneNumberVerificationCodeRequest {\n  JWT: string;\n  PublicKeyBase58Check: string;\n  PhoneNumber: string;\n  VerificationCode: string;\n}\n\n// struct2ts:types/generated/types.SubmitPhoneNumberVerificationCodeResponse\nexport interface SubmitPhoneNumberVerificationCodeResponse {\n  TxnHashHex: string;\n}\n\n// struct2ts:types/generated/types.ResendVerifyEmailRequest\nexport interface ResendVerifyEmailRequest {\n  PublicKey: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.VerifyEmailRequest\nexport interface VerifyEmailRequest {\n  PublicKey: string;\n  EmailHash: string;\n}\n\n// struct2ts:types/generated/types.JumioInitRequest\nexport interface JumioInitRequest {\n  customerInternalReference: string;\n  userReference: string;\n  successUrl: string;\n  errorUrl: string;\n}\n\n// struct2ts:types/generated/types.JumioInitResponse\nexport interface JumioInitResponse {\n  redirectUrl: string;\n  transactionReference: string;\n}\n\n// struct2ts:types/generated/types.JumioBeginRequest\nexport interface JumioBeginRequest {\n  PublicKey: string;\n  ReferralHashBase58: string;\n  SuccessURL: string;\n  ErrorURL: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.JumioBeginResponse\nexport interface JumioBeginResponse {\n  URL: string;\n}\n\n// struct2ts:types/generated/types.JumioFlowFinishedRequest\nexport interface JumioFlowFinishedRequest {\n  PublicKey: string;\n  JumioInternalReference: string;\n  JWT: string;\n}\n\n// struct2ts:types/generated/types.JumioIdentityVerification\nexport interface JumioIdentityVerification {\n  similarity: string;\n  validity: boolean;\n  reason: string;\n}\n\n// struct2ts:types/generated/types.JumioRejectReason\nexport interface JumioRejectReason {\n  rejectReasonCode: string;\n  rejectReasonDescription: string;\n  rejectReasonDetails: any;\n}\n\n// struct2ts:types/generated/types.GetJumioStatusForPublicKeyRequest\nexport interface GetJumioStatusForPublicKeyRequest {\n  JWT: string;\n  PublicKeyBase58Check: string;\n}\n\n// struct2ts:types/generated/types.GetJumioStatusForPublicKeyResponse\nexport interface GetJumioStatusForPublicKeyResponse {\n  JumioFinishedTime: number;\n  JumioReturned: boolean;\n  JumioVerified: boolean;\n  BalanceNanos: number | null;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderFullDetails\nexport interface WyreWalletOrderFullDetails {\n  id: string;\n  createdAt: number;\n  owner: string;\n  status: string;\n  orderType: string;\n  sourceAmount: number;\n  purchaseAmount: number;\n  sourceCurrency: string;\n  destCurrency: string;\n  transferId: string;\n  dest: string;\n  authCodesRequested: boolean;\n  errorCategory: string;\n  errorCode: string;\n  errorMessage: string;\n  failureReason: string;\n  accountId: string;\n  paymentNetworkErrorCode: string;\n  internalErrorCode: string;\n}\n\n// struct2ts:.\n\n// struct2ts:types/generated/types.WyreTransferDetails\nexport interface WyreTransferDetails {\n  owner: string;\n  reversingSubStatus: any;\n  source: string;\n  pendingSubStatus: any;\n  status: string;\n  reversalReason: any;\n  createdAt: number;\n  sourceAmount: number;\n  destCurrency: string;\n  sourceCurrency: string;\n  statusHistories: [] | null;\n  blockchainTx: any;\n  expiresAt: number;\n  completedAt: number;\n  cancelledAt: any;\n  failureReason: any;\n  updatedAt: number;\n  exchangeRate: number;\n  destAmount: number;\n  fees: any;\n  totalFees: number;\n  customId: string;\n  dest: string;\n  message: any;\n  id: string;\n}\n\n// struct2ts:types/generated/types.WalletOrderQuotationRequest\nexport interface WalletOrderQuotationRequest {\n  SourceAmount: number;\n  Country: string;\n  SourceCurrency: string;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderQuotationPayload\nexport interface WyreWalletOrderQuotationPayload {\n  sourceCurrency: string;\n  dest: string;\n  destCurrency: string;\n  amountIncludeFees: boolean;\n  country: string;\n  sourceAmount: string;\n  walletType: string;\n  accountId: string;\n}\n\n// struct2ts:types/generated/types.WalletOrderReservationRequest\nexport interface WalletOrderReservationRequest {\n  SourceAmount: number;\n  ReferenceId: string;\n  Country: string;\n  SourceCurrency: string;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderReservationPayload\nexport interface WyreWalletOrderReservationPayload {\n  sourceCurrency: string;\n  dest: string;\n  destCurrency: string;\n  country: string;\n  amount: string;\n  referrerAccountId: string;\n  lockFields: string[] | null;\n  redirectUrl: string;\n  referenceId: string;\n}\n\n// struct2ts:types/generated/types.GetWyreWalletOrderForPublicKeyRequest\nexport interface GetWyreWalletOrderForPublicKeyRequest {\n  PublicKeyBase58Check: string;\n  Username: string;\n  AdminPublicKey: string;\n}\n\n// struct2ts:types/generated/types.WyreWalletOrderMetadataResponse\nexport interface WyreWalletOrderMetadataResponse {\n  LatestWyreWalletOrderWebhookPayload: WyreWalletOrderWebhookPayload;\n  LatestWyreTrackWalletOrderResponse: WyreTrackOrderResponse | null;\n  DeSoPurchasedNanos: number;\n  BitCloutPurchasedNanos: number;\n  BasicTransferTxnHash: string;\n  Timestamp: Date | null;\n}\n\n// struct2ts:types/generated/types.GetWyreWalletOrderForPublicKeyResponse\nexport interface GetWyreWalletOrderForPublicKeyResponse {\n  WyreWalletOrderMetadataResponses: WyreWalletOrderMetadataResponse[] | null;\n}\n\nexport type BlockHash = string;\nexport type PkMapKey = string;\nexport type UsernameMapKey = string;\nexport type PKID = string;\nexport type ExtraDataDecoderFunc = Function;\nexport type ExtraDataEncoderFunc = Function;\n\nexport interface CreateAccessGroupRequest {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  AccessGroupPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[];\n  ExtraData: Record<string, string>;\n}\n\nexport interface CreateAccessGroupResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\nexport interface AccessGroupMember {\n  AccessGroupMemberPublicKeyBase58Check: string;\n\n  AccessGroupMemberKeyName: string;\n\n  EncryptedKey: string;\n  ExtraData?: Record<string, string>;\n}\n\nexport interface AddAccessGroupMembersRequest {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n\n  AccessGroupKeyName: string;\n\n  AccessGroupMemberList: AccessGroupMember[];\n\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[];\n  ExtraData: Record<string, string>;\n}\n\nexport interface AddAccessGroupMembersResponse {\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\nexport interface AccessGroupMemberEntryResponse {\n  AccessGroupMemberPublicKeyBase58Check: string;\n  AccessGroupMemberKeyName: string;\n  EncryptedKey: string;\n  ExtraData?: Record<string, string>;\n}\n\nexport interface AccessGroupEntryResponse {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n  AccessGroupPublicKeyBase58Check: string;\n  ExtraData?: Record<string, string>;\n  AccessGroupMemberEntryResponse: AccessGroupMemberEntryResponse | null;\n}\n\nexport interface GetAccessGroupsRequest {\n  PublicKeyBase58Check: string;\n}\n\nexport interface GetAccessGroupsResponse {\n  AccessGroupsOwned: AccessGroupEntryResponse[] | undefined;\n  AccessGroupsMember: AccessGroupEntryResponse[] | undefined;\n}\n\nexport interface CheckPartyAccessGroupsRequest {\n  SenderPublicKeyBase58Check: string;\n  SenderAccessGroupKeyName: string;\n\n  RecipientPublicKeyBase58Check: string;\n  RecipientAccessGroupKeyName: string;\n}\n\nexport interface CheckPartyAccessGroupsResponse {\n  SenderPublicKeyBase58Check: string;\n  SenderAccessGroupPublicKeyBase58Check: string;\n  SenderAccessGroupKeyName: string;\n  IsSenderAccessGroupKey: boolean;\n\n  RecipientPublicKeyBase58Check: string;\n  RecipientAccessGroupPublicKeyBase58Check: string;\n  RecipientAccessGroupKeyName: string;\n  IsRecipientAccessGroupKey: boolean;\n}\n\nexport interface GetAccessGroupInfoRequest {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n}\n\nexport interface GetAccessGroupMemberRequest {\n  AccessGroupMemberPublicKeyBase58Check: string;\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n}\n\nexport interface GetPaginatedAccessGroupMembersRequest {\n  AccessGroupOwnerPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n  StartingAccessGroupMemberPublicKeyBase58Check: string;\n  MaxMembersToFetch: number;\n}\n\nexport type PublicKeyToProfileEntryResponseMap = Record<\n  string,\n  ProfileEntryResponse | null\n>;\n\nexport type PostHashHexToPostEntryResponseMap = Record<\n  string,\n  PostEntryResponse | null\n>;\n\nexport interface GetPaginatedAccessGroupMembersResponse {\n  AccessGroupMembersBase58Check: string[];\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n}\n\nexport interface GroupOwnerAndGroupKeyNamePair {\n  GroupOwnerPublicKeyBase58Check: string;\n  GroupKeyName: string;\n}\n\nexport interface GetBulkAccessGroupEntriesRequest {\n  GroupOwnerAndGroupKeyNamePairs: GroupOwnerAndGroupKeyNamePair[];\n}\n\nexport interface GetBulkAccessGroupEntriesResponse {\n  AccessGroupEntries: AccessGroupEntryResponse[];\n  PairsNotFound: GroupOwnerAndGroupKeyNamePair[];\n}\n\nexport interface SendNewMessageRequest {\n  SenderAccessGroupOwnerPublicKeyBase58Check: string;\n  SenderAccessGroupPublicKeyBase58Check: string;\n  SenderAccessGroupKeyName: string;\n\n  RecipientAccessGroupOwnerPublicKeyBase58Check: string;\n  RecipientAccessGroupPublicKeyBase58Check: string;\n  RecipientAccessGroupKeyName: string;\n\n  EncryptedMessageText: string;\n\n  TimestampNanosString: string;\n\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[];\n  ExtraData: Record<string, string>;\n}\n\nexport interface SendNewMessageResponse {\n  TstampNanos: number;\n\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n}\n\nexport enum ChatType {\n  DM = 'DM',\n  GROUPCHAT = 'GroupChat',\n}\n\nexport interface NewMessageEntryResponse {\n  ChatType: ChatType;\n  SenderInfo: AccessGroupInfo;\n  RecipientInfo: AccessGroupInfo;\n  MessageInfo: MessageInfo;\n}\n\nexport interface AccessGroupInfo {\n  OwnerPublicKeyBase58Check: string;\n  AccessGroupPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n}\n\nexport interface MessageInfo {\n  EncryptedText: string;\n  TimestampNanos: number;\n  TimestampNanosString: string;\n  ExtraData: Record<string, string>;\n}\n\nexport interface GetPaginatedMessagesForDmThreadRequest {\n  UserGroupOwnerPublicKeyBase58Check: string;\n  UserGroupKeyName: string;\n  PartyGroupOwnerPublicKeyBase58Check: string;\n  PartyGroupKeyName: string;\n  StartTimeStamp: number;\n  StartTimeStampString: string;\n  MaxMessagesToFetch: number;\n}\n\nexport interface GetPaginatedMessagesForDmThreadResponse {\n  ThreadMessages: NewMessageEntryResponse[];\n\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n}\n\nexport interface GetPaginatedMessagesForGroupChatThreadRequest {\n  UserPublicKeyBase58Check: string;\n  AccessGroupKeyName: string;\n  StartTimeStamp: number;\n  StartTimeStampString: string;\n  MaxMessagesToFetch: number;\n}\n\nexport interface GetPaginatedMessagesForGroupChatThreadResponse {\n  GroupChatMessages: NewMessageEntryResponse[];\n\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n}\n\nexport interface GetUserMessageThreadsRequest {\n  UserPublicKeyBase58Check: string;\n}\n\nexport interface GetUserMessageThreadsResponse {\n  MessageThreads: NewMessageEntryResponse[];\n\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n}\n\nexport type DecryptedMessageEntryResponse = NewMessageEntryResponse & {\n  DecryptedMessage: string;\n  IsSender: boolean;\n  error: string;\n};\n\nexport interface GetSnapshotEpochMetadataResponse {\n  SnapshotBlockHeight: number;\n  CurrentEpochChecksumHex: string;\n  CurrentEpochBlockHashHex: string;\n}\n\nexport interface GetStateChecksumResponse {\n  StateChecksumHex: string;\n}\n\nexport interface AssociationQuery {\n  TransactorPublicKeyBase58Check: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationTypePrefix: string;\n  AssociationValue: string;\n  AssociationValuePrefix: string;\n  AssociationValues: string[];\n  Limit: number;\n  LastSeenAssociationID: string;\n  SortDescending: boolean;\n  IncludeTransactorProfile: boolean;\n  IncludeAppProfile: boolean;\n}\n\nexport interface UserAssociationQuery extends AssociationQuery {\n  TargetUserPublicKeyBase58Check: string;\n  IncludeTargetUserProfile: boolean;\n}\n\nexport interface PostAssociationQuery extends AssociationQuery {\n  PostHashHex: string;\n  IncludePostEntry: boolean;\n  IncludePostAuthorProfile: boolean;\n}\n\nexport interface CreateAssociationRequest {\n  TransactorPublicKeyBase58Check: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n  ExtraData: Record<string, string>;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[];\n}\n\nexport interface CreateUserAssociationRequest extends CreateAssociationRequest {\n  TargetUserPublicKeyBase58Check: string;\n}\n\nexport interface CreatePostAssociationRequest extends CreateAssociationRequest {\n  PostHashHex: string;\n}\n\nexport interface AssociationResponse {\n  AssociationID: string;\n  TransactorPublicKeyBase58Check: string;\n  AppPublicKeyBase58Check: string;\n  AssociationType: string;\n  AssociationValue: string;\n  ExtraData: Record<string, string>;\n  BlockHeight: number;\n  TransactorProfile: ProfileEntryResponse | null;\n  AppProfile: ProfileEntryResponse | null;\n}\n\nexport interface UserAssociationResponse extends AssociationResponse {\n  TargetUserPublicKeyBase58Check: string;\n  TargetUserProfile: ProfileEntryResponse | null;\n}\n\nexport interface PostAssociationResponse extends AssociationResponse {\n  PostHashHex: string;\n  PostEntry: PostEntryResponse | null;\n  PostAuthorProfile: ProfileEntryResponse | null;\n}\n\nexport interface UserAssociationsResponse {\n  Associations: UserAssociationResponse[];\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n  PostHashHexToPostEntryResponse: PostHashHexToPostEntryResponseMap;\n}\n\nexport interface PostAssociationsResponse {\n  Associations: PostAssociationResponse[];\n  PublicKeyToProfileEntryResponse: PublicKeyToProfileEntryResponseMap;\n  PostHashHexToPostEntryResponse: PostHashHexToPostEntryResponseMap;\n}\n\nexport interface DeleteAssociationRequest {\n  TransactorPublicKeyBase58Check: string;\n  AssociationID: string;\n  ExtraData: Record<string, string>;\n  MinFeeRateNanosPerKB: number;\n  TransactionFees: TransactionFee[];\n}\n\nexport interface AssociationTxnResponse {\n  SpendAmountNanos: number;\n  TotalInputNanos: number;\n  ChangeAmountNanos: number;\n  FeeNanos: number;\n  Transaction: MsgDeSoTxn;\n  TransactionHex: string;\n  TxnHashHex: string;\n}\n\nexport interface AssociationsCountResponse {\n  Count: number;\n}\n\nexport interface AssociationCountsResponse {\n  Counts: Record<string, number>;\n  Total: number;\n}\n\nexport interface LinkPreviewResponse {\n  title: string;\n  description: string;\n  image: string;\n  canonical: string;\n  url: string;\n}\n\nexport interface GetVideoStatusResponse {\n  id: string;\n  hash: {\n    hash: string;\n    algorithm: string;\n  };\n  name: string;\n  size: number;\n  source: {\n    url: string;\n    type: string;\n  };\n  status: {\n    phase: string;\n    updatedAt: number;\n  };\n  userID: string;\n  createdAt: number;\n  videoSpec: {\n    format: string;\n    tracks: Array<{\n      fps: number;\n      type: string;\n      codec: string;\n      width: number;\n      height: number;\n      bitrate: number;\n      duration: number;\n      pixelFormat: string;\n    }>;\n    duration: number;\n  };\n  playbackID: string;\n  playbackURL: string;\n  downloadURL: string;\n}\n\nexport type DiamondLevelString = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8';\n"]}