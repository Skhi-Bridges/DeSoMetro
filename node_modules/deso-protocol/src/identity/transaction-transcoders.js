var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { TransactionType, } from '../backend-types/index.js';
import { bufToUvarint64, publicKeyToBase58Check } from './crypto-utils.js';
import { decodeBytesToUTF8 } from './transcoder-utils.js';
import { ArrayOf, BinaryRecord, Boolean, ChunkBuffer, Enum, FixedBuffer, Optional, Record, TransactionNonceTranscoder, Transcode, Uint8, Uvarint64, VarBuffer, instanceToType, } from './transcoders.js';
export class TransactionInput extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "index", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionInput.prototype, "id", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionInput.prototype, "index", void 0);
export class TransactionOutput extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "publicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "amountNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(33)),
    __metadata("design:type", Uint8Array)
], TransactionOutput.prototype, "publicKey", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionOutput.prototype, "amountNanos", void 0);
export class TransactionNonce extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "expirationBlockHeight", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "partialId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionNonce.prototype, "expirationBlockHeight", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionNonce.prototype, "partialId", void 0);
export class TransactionExtraDataKV extends BinaryRecord {
    constructor(key, value) {
        super();
        Object.defineProperty(this, "key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        this.key = key || new Uint8Array(0);
        this.value = value || new Uint8Array(0);
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionExtraDataKV.prototype, "key", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionExtraDataKV.prototype, "value", void 0);
export class TransactionExtraData extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "kvs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(ArrayOf(TransactionExtraDataKV)),
    __metadata("design:type", Array)
], TransactionExtraData.prototype, "kvs", void 0);
export class TransactionMetadataRecord extends BinaryRecord {
}
export class TransactionMetadataBlockReward extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "extraData", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataBlockReward.prototype, "extraData", void 0);
export class TransactionMetadataBasicTransfer extends TransactionMetadataRecord {
}
export class TransactionMetadataBitcoinExchange extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "transaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "blockHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "merkleRoot", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "merkleProof", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataBitcoinExchange.prototype, "transaction", void 0);
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataBitcoinExchange.prototype, "blockHash", void 0);
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataBitcoinExchange.prototype, "merkleRoot", void 0);
__decorate([
    Transcode(ChunkBuffer(33)),
    __metadata("design:type", Array)
], TransactionMetadataBitcoinExchange.prototype, "merkleProof", void 0);
export class TransactionMetadataPrivateMessage extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "recipientPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "encryptedText", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "timestampNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(33)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataPrivateMessage.prototype, "recipientPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataPrivateMessage.prototype, "encryptedText", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataPrivateMessage.prototype, "timestampNanos", void 0);
export class TransactionMetadataSubmitPost extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "postHashToModify", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "parentStakeId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "body", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "creatorBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "stakeMultipleBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "timestampNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "isHidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataSubmitPost.prototype, "postHashToModify", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataSubmitPost.prototype, "parentStakeId", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataSubmitPost.prototype, "body", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataSubmitPost.prototype, "creatorBasisPoints", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataSubmitPost.prototype, "stakeMultipleBasisPoints", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataSubmitPost.prototype, "timestampNanos", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataSubmitPost.prototype, "isHidden", void 0);
export class TransactionMetadataUpdateProfile extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "profilePublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "newUsername", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "newDescription", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "newProfilePic", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "newCreatorBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "newStakeMultipleBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "isHidden", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataUpdateProfile.prototype, "profilePublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataUpdateProfile.prototype, "newUsername", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataUpdateProfile.prototype, "newDescription", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataUpdateProfile.prototype, "newProfilePic", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataUpdateProfile.prototype, "newCreatorBasisPoints", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataUpdateProfile.prototype, "newStakeMultipleBasisPoints", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataUpdateProfile.prototype, "isHidden", void 0);
export class TransactionMetadataUpdateBitcoinUSDExchangeRate extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "usdCentsPerBitcoin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataUpdateBitcoinUSDExchangeRate.prototype, "usdCentsPerBitcoin", void 0);
export class TransactionMetadataFollow extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "followedPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "isUnfollow", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
    }
}
__decorate([
    Transcode(FixedBuffer(33)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataFollow.prototype, "followedPublicKey", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataFollow.prototype, "isUnfollow", void 0);
export class TransactionMetadataLike extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "likedPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "isUnlike", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataLike.prototype, "likedPostHash", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataLike.prototype, "isUnlike", void 0);
export class TransactionMetadataCreatorCoin extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "profilePublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "operationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "desoToSellNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "creatorCoinToSellNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "desoToAddNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "minDeSoExpectedNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "minCreatorCoinExpectedNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatorCoin.prototype, "profilePublicKey", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "operationType", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "desoToSellNanos", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "creatorCoinToSellNanos", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "desoToAddNanos", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "minDeSoExpectedNanos", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoin.prototype, "minCreatorCoinExpectedNanos", void 0);
export class TransactionMetadataSwapIdentity extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "fromPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "toPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataSwapIdentity.prototype, "fromPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataSwapIdentity.prototype, "toPublicKey", void 0);
export class TransactionMetadataUpdateGlobalParams extends TransactionMetadataRecord {
}
export class TransactionMetadataCreatorCoinTransfer extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "profilePublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "creatorCoinToTransferNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "receiverPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatorCoinTransfer.prototype, "profilePublicKey", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreatorCoinTransfer.prototype, "creatorCoinToTransferNanos", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatorCoinTransfer.prototype, "receiverPublicKey", void 0);
export class TransactionMetadataCreateNFT extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "numCopies", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "hasUnlockable", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "isForSale", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "minBidAmountNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "nftRoyaltyToCreatorBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "nftRoyaltyToCoinBasisPoints", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreateNFT.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "numCopies", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "hasUnlockable", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "isForSale", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "minBidAmountNanos", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "nftRoyaltyToCreatorBasisPoints", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataCreateNFT.prototype, "nftRoyaltyToCoinBasisPoints", void 0);
export class TransactionMetadataUpdateNFT extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "isForSale", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "minBidAmountNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataUpdateNFT.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataUpdateNFT.prototype, "serialNumber", void 0);
__decorate([
    Transcode(Boolean),
    __metadata("design:type", Object)
], TransactionMetadataUpdateNFT.prototype, "isForSale", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataUpdateNFT.prototype, "minBidAmountNanos", void 0);
export class TransactionMetadataAcceptNFTBid extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "bidderPKID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "bidAmountNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "encryptedUnlockableText", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "bidderInputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAcceptNFTBid.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataAcceptNFTBid.prototype, "serialNumber", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAcceptNFTBid.prototype, "bidderPKID", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataAcceptNFTBid.prototype, "bidAmountNanos", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAcceptNFTBid.prototype, "encryptedUnlockableText", void 0);
__decorate([
    Transcode(ArrayOf(TransactionInput)),
    __metadata("design:type", Array)
], TransactionMetadataAcceptNFTBid.prototype, "bidderInputs", void 0);
export class TransactionMetadataNFTBid extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "bidAmountNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNFTBid.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataNFTBid.prototype, "serialNumber", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataNFTBid.prototype, "bidAmountNanos", void 0);
export class TransactionMetadataNFTTransfer extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "receiverPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "encryptedUnlockableText", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNFTTransfer.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataNFTTransfer.prototype, "serialNumber", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNFTTransfer.prototype, "receiverPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNFTTransfer.prototype, "encryptedUnlockableText", void 0);
export class TransactionMetadataAcceptNFTTransfer extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAcceptNFTTransfer.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataAcceptNFTTransfer.prototype, "serialNumber", void 0);
export class TransactionMetadataBurnNFT extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "nftPostHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(FixedBuffer(32)),
    __metadata("design:type", Uint8Array)
], TransactionMetadataBurnNFT.prototype, "nftPostHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataBurnNFT.prototype, "serialNumber", void 0);
export class TransactionMetadataAuthorizeDerivedKey extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "derivedPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "expirationBlock", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "operationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "accessSignature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAuthorizeDerivedKey.prototype, "derivedPublicKey", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataAuthorizeDerivedKey.prototype, "expirationBlock", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataAuthorizeDerivedKey.prototype, "operationType", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAuthorizeDerivedKey.prototype, "accessSignature", void 0);
export class MessagingGroupMemberRecord extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "groupMemberPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "groupMemberKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "encryptedKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], MessagingGroupMemberRecord.prototype, "groupMemberPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], MessagingGroupMemberRecord.prototype, "groupMemberKeyName", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], MessagingGroupMemberRecord.prototype, "encryptedKey", void 0);
export class TransactionMetadataMessagingGroup extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "messagingPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "messagingGroupKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "groupOwnerSignature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "MessagingGroupMemberRecords", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataMessagingGroup.prototype, "messagingPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataMessagingGroup.prototype, "messagingGroupKeyName", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataMessagingGroup.prototype, "groupOwnerSignature", void 0);
__decorate([
    Transcode(ArrayOf(MessagingGroupMemberRecord)),
    __metadata("design:type", Array)
], TransactionMetadataMessagingGroup.prototype, "MessagingGroupMemberRecords", void 0);
export class TransactionMetadataDAOCoin extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "profilePublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "operationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "coinsToMintNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "coinsToBurnNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "transferRestrictionStatus", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoin.prototype, "profilePublicKey", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataDAOCoin.prototype, "operationType", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoin.prototype, "coinsToMintNanos", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoin.prototype, "coinsToBurnNanos", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataDAOCoin.prototype, "transferRestrictionStatus", void 0);
export class TransactionMetadataTransferDAOCoin extends TransactionMetadataRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "profilePublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "daoCoinToTransferNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "receiverPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataTransferDAOCoin.prototype, "profilePublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataTransferDAOCoin.prototype, "daoCoinToTransferNanos", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataTransferDAOCoin.prototype, "receiverPublicKey", void 0);
export class TransactionCountLimitMapItem extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "txnType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionCountLimitMapItem.prototype, "txnType", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionCountLimitMapItem.prototype, "value", void 0);
export class TransactionCountLimitMap extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "txnCountLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(ArrayOf(TransactionCountLimitMapItem)),
    __metadata("design:type", Array)
], TransactionCountLimitMap.prototype, "txnCountLimitMap", void 0);
export class TransactionCoinOperationLimitMapItem extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "creatorPKID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "operation", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionCoinOperationLimitMapItem.prototype, "creatorPKID", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionCoinOperationLimitMapItem.prototype, "operation", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionCoinOperationLimitMapItem.prototype, "value", void 0);
export class TransactionCoinOperationLimitMap extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "coinOperationLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(ArrayOf(TransactionCoinOperationLimitMapItem)),
    __metadata("design:type", Array)
], TransactionCoinOperationLimitMap.prototype, "coinOperationLimitMap", void 0);
export class TransactionNFTOperationLimitMapItem extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "postHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "serialNumber", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "operation", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionNFTOperationLimitMapItem.prototype, "postHash", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionNFTOperationLimitMapItem.prototype, "serialNumber", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionNFTOperationLimitMapItem.prototype, "operation", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionNFTOperationLimitMapItem.prototype, "value", void 0);
export class TransactionNFTOperationLimitMap extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "coinOperationLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(ArrayOf(TransactionNFTOperationLimitMapItem)),
    __metadata("design:type", Array)
], TransactionNFTOperationLimitMap.prototype, "coinOperationLimitMap", void 0);
export class TransactionDAOCoinLimitOrderLimitMapItem extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "buyingDAOCoinCreatorPKID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "sellingDAOCoinCreatorPKID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionDAOCoinLimitOrderLimitMapItem.prototype, "buyingDAOCoinCreatorPKID", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionDAOCoinLimitOrderLimitMapItem.prototype, "sellingDAOCoinCreatorPKID", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionDAOCoinLimitOrderLimitMapItem.prototype, "value", void 0);
export class TransactionSpendingLimitRecord extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "globalDESOLimit", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "txnCountLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "creatorCoinOperationLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "daoCoinOperationLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "nftOperationLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "daoCoinLimitOrderLimitMap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionSpendingLimitRecord.prototype, "globalDESOLimit", void 0);
__decorate([
    Transcode(ArrayOf(TransactionCountLimitMapItem)),
    __metadata("design:type", Array)
], TransactionSpendingLimitRecord.prototype, "txnCountLimitMap", void 0);
__decorate([
    Transcode(ArrayOf(TransactionCoinOperationLimitMapItem)),
    __metadata("design:type", Array)
], TransactionSpendingLimitRecord.prototype, "creatorCoinOperationLimitMap", void 0);
__decorate([
    Transcode(ArrayOf(TransactionCoinOperationLimitMapItem)),
    __metadata("design:type", Array)
], TransactionSpendingLimitRecord.prototype, "daoCoinOperationLimitMap", void 0);
__decorate([
    Transcode(ArrayOf(TransactionNFTOperationLimitMapItem)),
    __metadata("design:type", Array)
], TransactionSpendingLimitRecord.prototype, "nftOperationLimitMap", void 0);
__decorate([
    Transcode(ArrayOf(TransactionDAOCoinLimitOrderLimitMapItem)),
    __metadata("design:type", Array)
], TransactionSpendingLimitRecord.prototype, "daoCoinLimitOrderLimitMap", void 0);
export class DeSoInputsByTransactorRecord extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "transactorPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "inputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(FixedBuffer(33)),
    __metadata("design:type", Uint8Array)
], DeSoInputsByTransactorRecord.prototype, "transactorPublicKey", void 0);
__decorate([
    Transcode(ArrayOf(TransactionInput)),
    __metadata("design:type", Array)
], DeSoInputsByTransactorRecord.prototype, "inputs", void 0);
export class TransactionMetadataDAOCoinLimitOrder extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "buyingDAOCoinCreatorPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "sellingDAOCoinCreatorPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "scaledExchangeRateCoinsToSellPerCoinToBuy", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "quantityToFillInBaseUnits", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "operationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "fillType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "cancelOrderID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "bidderInputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "buyingDAOCoinCreatorPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "sellingDAOCoinCreatorPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "scaledExchangeRateCoinsToSellPerCoinToBuy", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "quantityToFillInBaseUnits", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataDAOCoinLimitOrder.prototype, "operationType", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataDAOCoinLimitOrder.prototype, "fillType", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "cancelOrderID", void 0);
__decorate([
    Transcode(ArrayOf(DeSoInputsByTransactorRecord)),
    __metadata("design:type", Array)
], TransactionMetadataDAOCoinLimitOrder.prototype, "bidderInputs", void 0);
export class TransactionMetadataCreateUserAssociation extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "targetUserPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "appPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "associationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "associationValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreateUserAssociation.prototype, "targetUserPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreateUserAssociation.prototype, "appPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreateUserAssociation.prototype, "associationType", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreateUserAssociation.prototype, "associationValue", void 0);
export class TransactionMetadataDeleteUserAssociation extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "associationID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDeleteUserAssociation.prototype, "associationID", void 0);
export class TransactionMetadataCreatePostAssociation extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "postHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "appPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "associationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "associationValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatePostAssociation.prototype, "postHash", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatePostAssociation.prototype, "appPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatePostAssociation.prototype, "associationType", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataCreatePostAssociation.prototype, "associationValue", void 0);
export class TransactionMetadataDeletePostAssociation extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "associationID", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataDeletePostAssociation.prototype, "associationID", void 0);
export class TransactionMetadataAccessGroup extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "accessGroupOwnerPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupOperationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAccessGroup.prototype, "accessGroupOwnerPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAccessGroup.prototype, "accessGroupPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAccessGroup.prototype, "accessGroupKeyName", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataAccessGroup.prototype, "accessGroupOperationType", void 0);
export class AccessGroupMemberRecord extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "accessGroupMemberPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupMemberKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "encryptedKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "extraData", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], AccessGroupMemberRecord.prototype, "accessGroupMemberPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], AccessGroupMemberRecord.prototype, "accessGroupMemberKeyName", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], AccessGroupMemberRecord.prototype, "encryptedKey", void 0);
__decorate([
    Transcode(Record(TransactionExtraData)),
    __metadata("design:type", Object)
], AccessGroupMemberRecord.prototype, "extraData", void 0);
export class TransactionMetadataAccessGroupMembers extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "accessGroupOwnerPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "accessGroupMembersList", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "accessGroupMemberOperationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAccessGroupMembers.prototype, "accessGroupOwnerPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataAccessGroupMembers.prototype, "accessGroupKeyName", void 0);
__decorate([
    Transcode(ArrayOf(AccessGroupMemberRecord)),
    __metadata("design:type", Array)
], TransactionMetadataAccessGroupMembers.prototype, "accessGroupMembersList", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataAccessGroupMembers.prototype, "accessGroupMemberOperationType", void 0);
export class TransactionMetadataNewMessage extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "senderAccessGroupOwnerPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "senderAccessGroupKeyName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "senderAccessGroupPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "recipientAccessGroupOwnerPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "recipientAccessGroupKeyname", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "recipientAccessGroupPublicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "encryptedText", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "timestampNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "newMessageType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "newMessageOperation", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
    }
}
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "senderAccessGroupOwnerPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "senderAccessGroupKeyName", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "senderAccessGroupPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "recipientAccessGroupOwnerPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "recipientAccessGroupKeyname", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "recipientAccessGroupPublicKey", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionMetadataNewMessage.prototype, "encryptedText", void 0);
__decorate([
    Transcode(Uvarint64),
    __metadata("design:type", Object)
], TransactionMetadataNewMessage.prototype, "timestampNanos", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataNewMessage.prototype, "newMessageType", void 0);
__decorate([
    Transcode(Uint8),
    __metadata("design:type", Object)
], TransactionMetadataNewMessage.prototype, "newMessageOperation", void 0);
export const TransactionTypeMetadataMap = {
    1: TransactionMetadataBlockReward,
    2: TransactionMetadataBasicTransfer,
    3: TransactionMetadataBitcoinExchange,
    4: TransactionMetadataPrivateMessage,
    5: TransactionMetadataSubmitPost,
    6: TransactionMetadataUpdateProfile,
    8: TransactionMetadataUpdateBitcoinUSDExchangeRate,
    9: TransactionMetadataFollow,
    10: TransactionMetadataLike,
    11: TransactionMetadataCreatorCoin,
    12: TransactionMetadataSwapIdentity,
    13: TransactionMetadataUpdateGlobalParams,
    14: TransactionMetadataCreatorCoinTransfer,
    15: TransactionMetadataCreateNFT,
    16: TransactionMetadataUpdateNFT,
    17: TransactionMetadataAcceptNFTBid,
    18: TransactionMetadataNFTBid,
    19: TransactionMetadataNFTTransfer,
    20: TransactionMetadataAcceptNFTTransfer,
    21: TransactionMetadataBurnNFT,
    22: TransactionMetadataAuthorizeDerivedKey,
    23: TransactionMetadataMessagingGroup,
    24: TransactionMetadataDAOCoin,
    25: TransactionMetadataTransferDAOCoin,
    26: TransactionMetadataDAOCoinLimitOrder,
    27: TransactionMetadataCreateUserAssociation,
    28: TransactionMetadataDeleteUserAssociation,
    29: TransactionMetadataCreatePostAssociation,
    30: TransactionMetadataDeletePostAssociation,
    31: TransactionMetadataAccessGroup,
    32: TransactionMetadataAccessGroupMembers,
    33: TransactionMetadataNewMessage,
};
export const TransactionTypeToStringMap = {
    0: 'UNDEFINED',
    1: 'BLOCK_REWARD',
    2: TransactionType.BasicTransfer,
    3: TransactionType.BitcoinExchange,
    4: TransactionType.PrivateMessage,
    5: TransactionType.SubmitPost,
    6: TransactionType.UpdateProfile,
    8: TransactionType.UpdateBitcoinUSDExchangeRate,
    9: TransactionType.Follow,
    10: TransactionType.Like,
    11: TransactionType.CreatorCoin,
    12: TransactionType.SwapIdentity,
    13: TransactionType.UpdateGlobalParams,
    14: TransactionType.CreatorCoinTransfer,
    15: TransactionType.CreateNFT,
    16: TransactionType.UpdateNFT,
    17: TransactionType.AcceptNFTBid,
    18: TransactionType.NFTBid,
    19: TransactionType.NFTTransfer,
    20: TransactionType.AcceptNFTTransfer,
    21: TransactionType.BurnNFT,
    22: TransactionType.AuthorizeDerivedKey,
    23: TransactionType.MessagingGroup,
    24: TransactionType.DAOCoin,
    25: TransactionType.DAOCoinTransfer,
    26: TransactionType.DAOCoinLimitOrder,
    27: TransactionType.CreateUserAssociation,
    28: TransactionType.DeleteUserAssociation,
    29: TransactionType.CreatePostAssociation,
    30: TransactionType.DeletePostAssociation,
    31: TransactionType.AccessGroup,
    32: TransactionType.AccessGroupMembers,
    33: TransactionType.NewMessage,
};
export class Transaction extends BinaryRecord {
    constructor(attributes) {
        super();
        Object.defineProperty(this, "inputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "outputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "metadata", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.defineProperty(this, "publicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "extraData", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        // TODO: figure out how to deal with versioning. I don't LOVE
        // this optional field, but it's the best I can think of for now.
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "feeNanos", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "nonce", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.assign(this, attributes);
    }
    getTxnType() {
        return this.metadata !== null
            ? instanceToType(this.metadata, TransactionTypeMetadataMap)
            : 0;
    }
    getTxnTypeString() {
        return TransactionTypeToStringMap[this.getTxnType()];
    }
}
__decorate([
    Transcode(ArrayOf(TransactionInput)),
    __metadata("design:type", Array)
], Transaction.prototype, "inputs", void 0);
__decorate([
    Transcode(ArrayOf(TransactionOutput)),
    __metadata("design:type", Array)
], Transaction.prototype, "outputs", void 0);
__decorate([
    Transcode(Enum(TransactionTypeMetadataMap)),
    __metadata("design:type", Object)
], Transaction.prototype, "metadata", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], Transaction.prototype, "publicKey", void 0);
__decorate([
    Transcode(Record(TransactionExtraData)),
    __metadata("design:type", Object)
], Transaction.prototype, "extraData", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Object)
], Transaction.prototype, "signature", void 0);
__decorate([
    Transcode(Optional(Uvarint64)),
    __metadata("design:type", Object)
], Transaction.prototype, "version", void 0);
__decorate([
    Transcode(Optional(Uvarint64)),
    __metadata("design:type", Object)
], Transaction.prototype, "feeNanos", void 0);
__decorate([
    Transcode(Optional(TransactionNonceTranscoder)),
    __metadata("design:type", Object)
], Transaction.prototype, "nonce", void 0);
export const TransactionToMsgDeSoTxn = (txn) => {
    const TxInputs = txn.inputs.map((input) => ({
        TxID: Array.from(input.id),
        Index: bufToUvarint64(input.id)[0],
    }));
    const TxOutputs = txn.outputs.map((output) => ({
        PublicKey: publicKeyToBase58Check(output.publicKey),
        AmountNanos: output.amountNanos,
    }));
    txn.signature;
    return {
        TxInputs,
        TxOutputs,
        // TODO: need to make all the metadata match EXACTLY what
        // is coming from backend.
        TxnMeta: txn.metadata,
        PublicKey: publicKeyToBase58Check(txn.publicKey),
        ExtraData: (txn.extraData?.kvs || []).reduce((extraDataMap, kv) => {
            // TODO: special case extradata encoding
            extraDataMap[decodeBytesToUTF8(kv.key)] = decodeBytesToUTF8(kv.value);
            return extraDataMap;
        }, {}),
        // TODO: implement parsing of signature.
        Signature: null,
        TxnTypeJSON: txn.getTxnType(),
    };
};
export class TransactionV0 extends BinaryRecord {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "inputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "outputs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        Object.defineProperty(this, "metadata", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.defineProperty(this, "publicKey", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        Object.defineProperty(this, "extraData", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: null
        });
    }
}
__decorate([
    Transcode(ArrayOf(TransactionInput)),
    __metadata("design:type", Array)
], TransactionV0.prototype, "inputs", void 0);
__decorate([
    Transcode(ArrayOf(TransactionOutput)),
    __metadata("design:type", Array)
], TransactionV0.prototype, "outputs", void 0);
__decorate([
    Transcode(Enum(TransactionTypeMetadataMap)),
    __metadata("design:type", Object)
], TransactionV0.prototype, "metadata", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Uint8Array)
], TransactionV0.prototype, "publicKey", void 0);
__decorate([
    Transcode(Record(TransactionExtraData)),
    __metadata("design:type", Object)
], TransactionV0.prototype, "extraData", void 0);
__decorate([
    Transcode(VarBuffer),
    __metadata("design:type", Object)
], TransactionV0.prototype, "signature", void 0);
//# sourceMappingURL=data:application/json;base64,